[
 {
  "file_name": "graph_15.json",
  "graph_index": 0,
  "adj": [
   [
    0,
    8,
    2,
    10,
    9,
    6,
    3,
    3,
    1,
    7,
    10,
    2,
    5,
    6,
    8,
    10
   ],
   [
    8,
    0,
    10,
    7,
    6,
    7,
    4,
    4,
    4,
    5,
    9,
    8,
    1,
    7,
    10,
    3
   ],
   [
    2,
    10,
    0,
    6,
    9,
    9,
    2,
    5,
    5,
    7,
    7,
    8,
    4,
    3,
    9,
    3
   ],
   [
    10,
    7,
    6,
    0,
    2,
    8,
    5,
    1,
    10,
    1,
    9,
    3,
    7,
    8,
    3,
    3
   ],
   [
    9,
    6,
    9,
    2,
    0,
    10,
    1,
    8,
    3,
    9,
    1,
    2,
    9,
    4,
    5,
    4
   ],
   [
    6,
    7,
    9,
    8,
    10,
    0,
    10,
    4,
    4,
    8,
    9,
    4,
    1,
    5,
    1,
    8
   ],
   [
    3,
    4,
    2,
    5,
    1,
    10,
    0,
    9,
    3,
    7,
    1,
    8,
    4,
    1,
    3,
    1
   ],
   [
    3,
    4,
    5,
    1,
    8,
    4,
    9,
    0,
    7,
    9,
    4,
    7,
    6,
    3,
    1,
    8
   ],
   [
    1,
    4,
    5,
    10,
    3,
    4,
    3,
    7,
    0,
    3,
    4,
    2,
    1,
    2,
    9,
    7
   ],
   [
    7,
    5,
    7,
    1,
    9,
    8,
    7,
    9,
    3,
    0,
    5,
    5,
    7,
    9,
    1,
    10
   ],
   [
    10,
    9,
    7,
    9,
    1,
    9,
    1,
    4,
    4,
    5,
    0,
    10,
    4,
    3,
    4,
    6
   ],
   [
    2,
    8,
    8,
    3,
    2,
    4,
    8,
    7,
    2,
    5,
    10,
    0,
    2,
    10,
    1,
    8
   ],
   [
    5,
    1,
    4,
    7,
    9,
    1,
    4,
    6,
    1,
    7,
    4,
    2,
    0,
    3,
    4,
    10
   ],
   [
    6,
    7,
    3,
    8,
    4,
    5,
    1,
    3,
    2,
    9,
    3,
    10,
    3,
    0,
    9,
    6
   ],
   [
    8,
    10,
    9,
    3,
    5,
    1,
    3,
    1,
    9,
    1,
    4,
    1,
    4,
    9,
    0,
    6
   ],
   [
    10,
    3,
    3,
    3,
    4,
    8,
    1,
    8,
    7,
    10,
    6,
    8,
    10,
    6,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Haven Docks",
   "Primrose Boulevard",
   "Horizon Mall",
   "Willowshade Pavilion",
   "Evergreen Circle",
   "Knight’s Market",
   "Union Square Market",
   "Duskwood Park",
   "Mosaic Plaza",
   "Gilded Archway",
   "Quarry Point",
   "Riverstone Wharf",
   "Flare Alley",
   "Nimbus Plaza",
   "Northwind Tower"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Flare Alley",
     "Union Square Market",
     "Horizon Mall",
     "Mosaic Plaza",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Riverstone Wharf",
     "Haven Docks",
     "Northwind Tower",
     "Knight’s Market",
     "Gilded Archway",
     "Willowshade Pavilion",
     "Quarry Point",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 1.83
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Knight’s Market",
     "Flare Alley",
     "Gilded Archway",
     "Willowshade Pavilion",
     "Northwind Tower",
     "Haven Docks",
     "Riverstone Wharf",
     "Quarry Point",
     "Nimbus Plaza",
     "Mosaic Plaza",
     "Horizon Mall",
     "Union Square Market",
     "Evergreen Circle",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Riverstone Wharf",
     "Haven Docks",
     "Northwind Tower",
     "Knight’s Market",
     "Willowshade Pavilion",
     "Gilded Archway",
     "Flare Alley",
     "Primrose Boulevard",
     "Union Square Market",
     "Horizon Mall",
     "Mosaic Plaza",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Riverstone Wharf",
     "Haven Docks",
     "Northwind Tower",
     "Knight’s Market",
     "Willowshade Pavilion",
     "Gilded Archway",
     "Flare Alley",
     "Primrose Boulevard",
     "Union Square Market",
     "Horizon Mall",
     "Mosaic Plaza",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Nimbus Plaza",
     "Gilded Archway",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Flare Alley",
     "Union Square Market",
     "Primrose Boulevard",
     "Northwind Tower",
     "Horizon Mall",
     "Mosaic Plaza",
     "Haven Docks",
     "Riverstone Wharf",
     "Evergreen Circle",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Gilded Archway",
     "Union Square Market",
     "Willowshade Pavilion",
     "Mosaic Plaza",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Flare Alley",
     "Riverstone Wharf",
     "Haven Docks",
     "Knight’s Market",
     "Primrose Boulevard",
     "Northwind Tower",
     "Horizon Mall",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 1.58
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at the central warehouse while visiting each delivery point exactly once. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Haven Docks\",\n        \"Primrose Boulevard\",\n        \"Horizon Mall\",\n        \"Willowshade Pavilion\",\n        \"Evergreen Circle\",\n        \"Knight’s Market\",\n        \"Union Square Market\",\n        \"Duskwood Park\",\n        \"Mosaic Plaza\",\n        \"Gilded Archway\",\n        \"Quarry Point\",\n        \"Riverstone Wharf\",\n        \"Flare Alley\",\n        \"Nimbus Plaza\",\n        \"Northwind Tower\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": \"Distinct locations where packages need to be delivered, each representing different types of businesses or residential areas.\",\n        \"Central Warehouse\": \"The starting and ending point for the delivery driver, located near the city center.\",\n        \"Optimal Route\": \"The most efficient path that minimizes the total distance traveled while visiting each delivery point exactly once.\",\n        \"Distance Table\": \"A table that provides the approximate travel distances between each pair of delivery points, taking into account city traffic patterns and street layouts.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 1,
  "adj": [
   [
    0,
    3,
    5,
    9,
    9,
    7,
    7,
    2,
    3,
    5,
    6,
    7,
    1,
    10,
    3,
    7
   ],
   [
    3,
    0,
    9,
    4,
    3,
    2,
    9,
    4,
    8,
    4,
    10,
    10,
    2,
    9,
    3,
    6
   ],
   [
    5,
    9,
    0,
    2,
    10,
    5,
    4,
    8,
    10,
    3,
    5,
    5,
    10,
    1,
    9,
    7
   ],
   [
    9,
    4,
    2,
    0,
    10,
    5,
    6,
    2,
    9,
    4,
    10,
    9,
    1,
    4,
    9,
    8
   ],
   [
    9,
    3,
    10,
    10,
    0,
    9,
    9,
    10,
    5,
    4,
    4,
    6,
    4,
    6,
    7,
    4
   ],
   [
    7,
    2,
    5,
    5,
    9,
    0,
    1,
    8,
    10,
    10,
    8,
    7,
    1,
    4,
    1,
    10
   ],
   [
    7,
    9,
    4,
    6,
    9,
    1,
    0,
    7,
    2,
    9,
    8,
    1,
    6,
    3,
    9,
    8
   ],
   [
    2,
    4,
    8,
    2,
    10,
    8,
    7,
    0,
    10,
    6,
    5,
    4,
    1,
    5,
    7,
    2
   ],
   [
    3,
    8,
    10,
    9,
    5,
    10,
    2,
    10,
    0,
    8,
    4,
    5,
    9,
    7,
    8,
    4
   ],
   [
    5,
    4,
    3,
    4,
    4,
    10,
    9,
    6,
    8,
    0,
    3,
    3,
    2,
    9,
    1,
    5
   ],
   [
    6,
    10,
    5,
    10,
    4,
    8,
    8,
    5,
    4,
    3,
    0,
    1,
    4,
    3,
    2,
    5
   ],
   [
    7,
    10,
    5,
    9,
    6,
    7,
    1,
    4,
    5,
    3,
    1,
    0,
    10,
    3,
    4,
    10
   ],
   [
    1,
    2,
    10,
    1,
    4,
    1,
    6,
    1,
    9,
    2,
    4,
    10,
    0,
    4,
    8,
    4
   ],
   [
    10,
    9,
    1,
    4,
    6,
    4,
    3,
    5,
    7,
    9,
    3,
    3,
    4,
    0,
    4,
    6
   ],
   [
    3,
    3,
    9,
    9,
    7,
    1,
    9,
    7,
    8,
    1,
    2,
    4,
    8,
    4,
    0,
    10
   ],
   [
    7,
    6,
    7,
    8,
    4,
    10,
    8,
    2,
    4,
    5,
    5,
    10,
    4,
    6,
    10,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Ivory Spire Cathedral",
   "Lunar Pier",
   "Evergreen Circle",
   "Copper Clock Square",
   "Beacon Tower",
   "Echo Station",
   "Riverstone Wharf",
   "Twilight Harbor",
   "Jasper Marina",
   "Knight’s Market",
   "Velvet Corner",
   "Brass Lantern Tavern",
   "Umbra Theater",
   "Jade Fountain",
   "Haven Docks"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Haven Docks",
     "Copper Clock Square",
     "Ivory Spire Cathedral",
     "Beacon Tower",
     "Jade Fountain",
     "Jasper Marina",
     "Brass Lantern Tavern",
     "Evergreen Circle",
     "Lunar Pier",
     "Umbra Theater",
     "Knight’s Market",
     "Velvet Corner",
     "Echo Station",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 1.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Echo Station",
     "Velvet Corner",
     "Knight’s Market",
     "Jasper Marina",
     "Jade Fountain",
     "Beacon Tower",
     "Brass Lantern Tavern",
     "Riverstone Wharf",
     "Haven Docks",
     "Copper Clock Square",
     "Ivory Spire Cathedral",
     "Umbra Theater",
     "Lunar Pier",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Brass Lantern Tavern",
     "Evergreen Circle",
     "Lunar Pier",
     "Umbra Theater",
     "Echo Station",
     "Beacon Tower",
     "Jade Fountain",
     "Jasper Marina",
     "Knight’s Market",
     "Velvet Corner",
     "Riverstone Wharf",
     "Haven Docks",
     "Copper Clock Square",
     "Ivory Spire Cathedral",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Brass Lantern Tavern",
     "Evergreen Circle",
     "Lunar Pier",
     "Umbra Theater",
     "Echo Station",
     "Beacon Tower",
     "Jade Fountain",
     "Jasper Marina",
     "Knight’s Market",
     "Velvet Corner",
     "Riverstone Wharf",
     "Haven Docks",
     "Copper Clock Square",
     "Ivory Spire Cathedral",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Brass Lantern Tavern",
     "Knight’s Market",
     "Velvet Corner",
     "Echo Station",
     "Beacon Tower",
     "Jade Fountain",
     "Jasper Marina",
     "Lunar Pier",
     "Umbra Theater",
     "Copper Clock Square",
     "Twilight Harbor",
     "Haven Docks",
     "Riverstone Wharf",
     "Evergreen Circle",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Brass Lantern Tavern",
     "Umbra Theater",
     "Knight’s Market",
     "Jasper Marina",
     "Twilight Harbor",
     "Jade Fountain",
     "Beacon Tower",
     "Lunar Pier",
     "Evergreen Circle",
     "Riverstone Wharf",
     "Haven Docks",
     "Copper Clock Square",
     "Velvet Corner",
     "Echo Station",
     "Warehouse"
    ],
    "ans_distance": 61,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to enhance efficiency, save on fuel, and reduce delivery times.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Ivory Spire Cathedral\",\n        \"Lunar Pier\",\n        \"Evergreen Circle\",\n        \"Copper Clock Square\",\n        \"Beacon Tower\",\n        \"Echo Station\",\n        \"Riverstone Wharf\",\n        \"Twilight Harbor\",\n        \"Jasper Marina\",\n        \"Knight’s Market\",\n        \"Velvet Corner\",\n        \"Brass Lantern Tavern\",\n        \"Umbra Theater\",\n        \"Jade Fountain\",\n        \"Haven Docks\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and ends their route.\n        \"Delivery Points\": The various locations where packages need to be dropped off, each representing different types of businesses or residential areas.\n        \"Optimal Route\": The most efficient path that minimizes the total distance traveled while visiting each delivery point exactly once before returning to the starting point.\n        \"Distance Table\": A representation of the distances between each pair of delivery points, which is crucial for calculating the optimal route.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 2,
  "adj": [
   [
    0,
    5,
    2,
    7,
    6,
    9,
    2,
    6,
    10,
    3,
    1,
    8,
    4,
    8,
    3,
    4
   ],
   [
    5,
    0,
    8,
    3,
    4,
    5,
    4,
    3,
    3,
    7,
    8,
    3,
    9,
    4,
    9,
    4
   ],
   [
    2,
    8,
    0,
    4,
    5,
    7,
    7,
    4,
    2,
    5,
    9,
    2,
    2,
    5,
    6,
    8
   ],
   [
    7,
    3,
    4,
    0,
    4,
    8,
    9,
    1,
    4,
    6,
    10,
    4,
    1,
    7,
    3,
    6
   ],
   [
    6,
    4,
    5,
    4,
    0,
    1,
    5,
    10,
    6,
    6,
    9,
    3,
    1,
    3,
    7,
    7
   ],
   [
    9,
    5,
    7,
    8,
    1,
    0,
    5,
    5,
    2,
    8,
    10,
    5,
    8,
    5,
    4,
    1
   ],
   [
    2,
    4,
    7,
    9,
    5,
    5,
    0,
    6,
    2,
    1,
    6,
    6,
    3,
    9,
    9,
    6
   ],
   [
    6,
    3,
    4,
    1,
    10,
    5,
    6,
    0,
    8,
    3,
    1,
    8,
    5,
    8,
    8,
    7
   ],
   [
    10,
    3,
    2,
    4,
    6,
    2,
    2,
    8,
    0,
    10,
    3,
    7,
    6,
    7,
    6,
    1
   ],
   [
    3,
    7,
    5,
    6,
    6,
    8,
    1,
    3,
    10,
    0,
    2,
    6,
    6,
    4,
    2,
    4
   ],
   [
    1,
    8,
    9,
    10,
    9,
    10,
    6,
    1,
    3,
    2,
    0,
    9,
    4,
    5,
    2,
    8
   ],
   [
    8,
    3,
    2,
    4,
    3,
    5,
    6,
    8,
    7,
    6,
    9,
    0,
    8,
    7,
    2,
    4
   ],
   [
    4,
    9,
    2,
    1,
    1,
    8,
    3,
    5,
    6,
    6,
    4,
    8,
    0,
    1,
    9,
    8
   ],
   [
    8,
    4,
    5,
    7,
    3,
    5,
    9,
    8,
    7,
    4,
    5,
    7,
    1,
    0,
    7,
    10
   ],
   [
    3,
    9,
    6,
    3,
    7,
    4,
    9,
    8,
    6,
    2,
    2,
    2,
    9,
    7,
    0,
    8
   ],
   [
    4,
    4,
    8,
    6,
    7,
    1,
    6,
    7,
    1,
    4,
    8,
    4,
    8,
    10,
    8,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Beacon Tower",
   "Lighthouse Point",
   "Westgate Station",
   "Quartz District",
   "King’s Row",
   "Ivory Spire Cathedral",
   "Opal Theater",
   "Moonlit Promenade",
   "Rosewood Hall",
   "Umbra Theater",
   "Knight’s Market",
   "Haven Docks",
   "Horizon Mall",
   "Granite Plaza",
   "Jade Fountain"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Knight’s Market",
     "Granite Plaza",
     "Rosewood Hall",
     "Ivory Spire Cathedral",
     "Moonlit Promenade",
     "Jade Fountain",
     "King’s Row",
     "Quartz District",
     "Haven Docks",
     "Horizon Mall",
     "Beacon Tower",
     "Westgate Station",
     "Opal Theater",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 1.99
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Rosewood Hall",
     "Ivory Spire Cathedral",
     "Lighthouse Point",
     "Knight’s Market",
     "Beacon Tower",
     "Westgate Station",
     "Moonlit Promenade",
     "Jade Fountain",
     "King’s Row",
     "Quartz District",
     "Haven Docks",
     "Horizon Mall",
     "Opal Theater",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Opal Theater",
     "Westgate Station",
     "Haven Docks",
     "Quartz District",
     "King’s Row",
     "Jade Fountain",
     "Moonlit Promenade",
     "Lighthouse Point",
     "Knight’s Market",
     "Granite Plaza",
     "Rosewood Hall",
     "Ivory Spire Cathedral",
     "Beacon Tower",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Opal Theater",
     "Westgate Station",
     "Haven Docks",
     "Quartz District",
     "King’s Row",
     "Jade Fountain",
     "Moonlit Promenade",
     "Lighthouse Point",
     "Knight’s Market",
     "Granite Plaza",
     "Rosewood Hall",
     "Ivory Spire Cathedral",
     "Beacon Tower",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Rosewood Hall",
     "Granite Plaza",
     "Knight’s Market",
     "Jade Fountain",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Horizon Mall",
     "Haven Docks",
     "Westgate Station",
     "Opal Theater",
     "Beacon Tower",
     "Moonlit Promenade",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Knight’s Market",
     "Jade Fountain",
     "Beacon Tower",
     "Horizon Mall",
     "Lighthouse Point",
     "Quartz District",
     "Haven Docks",
     "Ivory Spire Cathedral",
     "Rosewood Hall",
     "King’s Row",
     "Moonlit Promenade",
     "Opal Theater",
     "Umbra Theater",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 62,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts from a central warehouse, visits each location, and returns to the warehouse. This optimization is crucial for saving on fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Beacon Tower\",\n        \"Lighthouse Point\",\n        \"Westgate Station\",\n        \"Quartz District\",\n        \"King’s Row\",\n        \"Ivory Spire Cathedral\",\n        \"Opal Theater\",\n        \"Moonlit Promenade\",\n        \"Rosewood Hall\",\n        \"Umbra Theater\",\n        \"Knight’s Market\",\n        \"Haven Docks\",\n        \"Horizon Mall\",\n        \"Granite Plaza\",\n        \"Jade Fountain\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each with unique characteristics and requirements.\n        \"Warehouse\": The central location from which the delivery driver starts and ends their route.\n        \"Optimal Route\": The most efficient path that minimizes the total distance traveled while visiting each delivery point exactly once.\n        \"Distance Table\": A list of distances between each pair of delivery points, which varies based on city traffic patterns and street layouts.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 3,
  "adj": [
   [
    0,
    6,
    3,
    8,
    3,
    3,
    1,
    3,
    7,
    6,
    3,
    1,
    9,
    2,
    2,
    1
   ],
   [
    6,
    0,
    4,
    3,
    9,
    2,
    3,
    6,
    4,
    8,
    4,
    8,
    4,
    10,
    5,
    2
   ],
   [
    3,
    4,
    0,
    6,
    2,
    1,
    8,
    5,
    9,
    8,
    7,
    4,
    4,
    6,
    6,
    5
   ],
   [
    8,
    3,
    6,
    0,
    7,
    2,
    4,
    9,
    7,
    4,
    10,
    10,
    10,
    3,
    3,
    2
   ],
   [
    3,
    9,
    2,
    7,
    0,
    4,
    4,
    4,
    10,
    4,
    10,
    5,
    2,
    3,
    4,
    9
   ],
   [
    3,
    2,
    1,
    2,
    4,
    0,
    4,
    1,
    8,
    4,
    5,
    3,
    2,
    6,
    1,
    9
   ],
   [
    1,
    3,
    8,
    4,
    4,
    4,
    0,
    4,
    2,
    3,
    7,
    3,
    10,
    10,
    1,
    1
   ],
   [
    3,
    6,
    5,
    9,
    4,
    1,
    4,
    0,
    3,
    7,
    5,
    5,
    7,
    10,
    7,
    7
   ],
   [
    7,
    4,
    9,
    7,
    10,
    8,
    2,
    3,
    0,
    6,
    3,
    6,
    10,
    8,
    4,
    7
   ],
   [
    6,
    8,
    8,
    4,
    4,
    4,
    3,
    7,
    6,
    0,
    3,
    10,
    9,
    8,
    9,
    5
   ],
   [
    3,
    4,
    7,
    10,
    10,
    5,
    7,
    5,
    3,
    3,
    0,
    4,
    3,
    4,
    10,
    4
   ],
   [
    1,
    8,
    4,
    10,
    5,
    3,
    3,
    5,
    6,
    10,
    4,
    0,
    2,
    5,
    9,
    3
   ],
   [
    9,
    4,
    4,
    10,
    2,
    2,
    10,
    7,
    10,
    9,
    3,
    2,
    0,
    3,
    9,
    1
   ],
   [
    2,
    10,
    6,
    3,
    3,
    6,
    10,
    10,
    8,
    8,
    4,
    5,
    3,
    0,
    6,
    1
   ],
   [
    2,
    5,
    6,
    3,
    4,
    1,
    1,
    7,
    4,
    9,
    10,
    9,
    9,
    6,
    0,
    4
   ],
   [
    1,
    2,
    5,
    2,
    9,
    9,
    1,
    7,
    7,
    5,
    4,
    3,
    1,
    1,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Yarrow Plaza",
   "Dragon’s Gate",
   "Mosaic Plaza",
   "Jasper Marina",
   "Oakshade Library",
   "Ironbridge Crossing",
   "Granite Plaza",
   "Opal Theater",
   "Echo Station",
   "Azure Gardens",
   "King’s Row",
   "Skyline Gardens",
   "Ivory Spire Cathedral",
   "Nimbus Plaza",
   "Amber Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Skyline Gardens",
     "Jasper Marina",
     "Dragon’s Gate",
     "Oakshade Library",
     "Granite Plaza",
     "Opal Theater",
     "Azure Gardens",
     "Echo Station",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Amber Plaza",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 1.92
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Ivory Spire Cathedral",
     "Skyline Gardens",
     "King’s Row",
     "Azure Gardens",
     "Opal Theater",
     "Ironbridge Crossing",
     "Echo Station",
     "Jasper Marina",
     "Dragon’s Gate",
     "Oakshade Library",
     "Granite Plaza",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Oakshade Library",
     "Dragon’s Gate",
     "Jasper Marina",
     "Skyline Gardens",
     "Amber Plaza",
     "Ivory Spire Cathedral",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Opal Theater",
     "Granite Plaza",
     "Azure Gardens",
     "Echo Station",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Oakshade Library",
     "Dragon’s Gate",
     "Jasper Marina",
     "Skyline Gardens",
     "Amber Plaza",
     "Ivory Spire Cathedral",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Opal Theater",
     "Granite Plaza",
     "Azure Gardens",
     "Echo Station",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Oakshade Library",
     "Mosaic Plaza",
     "Echo Station",
     "Azure Gardens",
     "Opal Theater",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Yarrow Plaza",
     "Amber Plaza",
     "Skyline Gardens",
     "King’s Row",
     "Dragon’s Gate",
     "Jasper Marina",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Yarrow Plaza",
     "Mosaic Plaza",
     "Oakshade Library",
     "Echo Station",
     "Jasper Marina",
     "Granite Plaza",
     "Skyline Gardens",
     "Dragon’s Gate",
     "Ivory Spire Cathedral",
     "Azure Gardens",
     "Amber Plaza",
     "King’s Row",
     "Opal Theater",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 61,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts and ends at the central warehouse. This optimization is crucial for saving fuel, reducing delivery times, and improving overall operational efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Yarrow Plaza\",\n        \"Dragon’s Gate\",\n        \"Mosaic Plaza\",\n        \"Jasper Marina\",\n        \"Oakshade Library\",\n        \"Ironbridge Crossing\",\n        \"Granite Plaza\",\n        \"Opal Theater\",\n        \"Echo Station\",\n        \"Azure Gardens\",\n        \"King’s Row\",\n        \"Skyline Gardens\",\n        \"Ivory Spire Cathedral\",\n        \"Nimbus Plaza\",\n        \"Amber Plaza\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be dropped off, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Central Warehouse\": The starting and ending point for the delivery route, located near the city center.\",\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse, minimizing the total distance traveled.\",\n        \"Distance Table\": A matrix showing the approximate distances (in kilometers) between each pair of delivery points, which is essential for calculating the optimal route.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 4,
  "adj": [
   [
    0,
    9,
    1,
    6,
    4,
    2,
    6,
    1,
    3,
    5,
    7,
    2,
    2,
    7,
    6,
    7
   ],
   [
    9,
    0,
    9,
    6,
    6,
    10,
    1,
    9,
    3,
    10,
    5,
    10,
    10,
    3,
    3,
    3
   ],
   [
    1,
    9,
    0,
    3,
    4,
    2,
    3,
    7,
    6,
    5,
    3,
    7,
    7,
    8,
    10,
    9
   ],
   [
    6,
    6,
    3,
    0,
    4,
    3,
    2,
    3,
    2,
    2,
    1,
    2,
    5,
    1,
    5,
    8
   ],
   [
    4,
    6,
    4,
    4,
    0,
    5,
    3,
    3,
    7,
    3,
    7,
    1,
    10,
    10,
    6,
    6
   ],
   [
    2,
    10,
    2,
    3,
    5,
    0,
    5,
    9,
    9,
    3,
    9,
    2,
    6,
    3,
    7,
    5
   ],
   [
    6,
    1,
    3,
    2,
    3,
    5,
    0,
    8,
    3,
    5,
    7,
    5,
    6,
    1,
    6,
    1
   ],
   [
    1,
    9,
    7,
    3,
    3,
    9,
    8,
    0,
    5,
    10,
    9,
    5,
    10,
    3,
    8,
    2
   ],
   [
    3,
    3,
    6,
    2,
    7,
    9,
    3,
    5,
    0,
    6,
    6,
    10,
    4,
    1,
    1,
    6
   ],
   [
    5,
    10,
    5,
    2,
    3,
    3,
    5,
    10,
    6,
    0,
    8,
    10,
    3,
    2,
    3,
    6
   ],
   [
    7,
    5,
    3,
    1,
    7,
    9,
    7,
    9,
    6,
    8,
    0,
    6,
    1,
    8,
    7,
    7
   ],
   [
    2,
    10,
    7,
    2,
    1,
    2,
    5,
    5,
    10,
    10,
    6,
    0,
    10,
    8,
    10,
    8
   ],
   [
    2,
    10,
    7,
    5,
    10,
    6,
    6,
    10,
    4,
    3,
    1,
    10,
    0,
    7,
    1,
    9
   ],
   [
    7,
    3,
    8,
    1,
    10,
    3,
    1,
    3,
    1,
    2,
    8,
    8,
    7,
    0,
    9,
    1
   ],
   [
    6,
    3,
    10,
    5,
    6,
    7,
    6,
    8,
    1,
    3,
    7,
    10,
    1,
    9,
    0,
    8
   ],
   [
    7,
    3,
    9,
    8,
    6,
    5,
    1,
    2,
    6,
    6,
    7,
    8,
    9,
    1,
    8,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Skyline Gardens",
   "Flare Alley",
   "Riverstone Wharf",
   "Sapphire Arena",
   "Westgate Station",
   "Azure Gardens",
   "Gilded Archway",
   "Willowshade Pavilion",
   "Duskwood Park",
   "Brass Lantern Tavern",
   "Amber Plaza",
   "Dragon’s Gate",
   "Oakshade Library",
   "Ironbridge Crossing",
   "Lighthouse Point"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Westgate Station",
     "Amber Plaza",
     "Sapphire Arena",
     "Duskwood Park",
     "Riverstone Wharf",
     "Brass Lantern Tavern",
     "Dragon’s Gate",
     "Ironbridge Crossing",
     "Willowshade Pavilion",
     "Skyline Gardens",
     "Azure Gardens",
     "Oakshade Library",
     "Lighthouse Point",
     "Gilded Archway",
     "Warehouse"
    ],
    "ans_distance": 24,
    "cost_time": 2.02
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Brass Lantern Tavern",
     "Riverstone Wharf",
     "Oakshade Library",
     "Willowshade Pavilion",
     "Ironbridge Crossing",
     "Skyline Gardens",
     "Azure Gardens",
     "Lighthouse Point",
     "Duskwood Park",
     "Sapphire Arena",
     "Amber Plaza",
     "Gilded Archway",
     "Westgate Station",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Westgate Station",
     "Amber Plaza",
     "Sapphire Arena",
     "Azure Gardens",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Riverstone Wharf",
     "Brass Lantern Tavern",
     "Dragon’s Gate",
     "Ironbridge Crossing",
     "Duskwood Park",
     "Lighthouse Point",
     "Gilded Archway",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Westgate Station",
     "Amber Plaza",
     "Sapphire Arena",
     "Azure Gardens",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Riverstone Wharf",
     "Brass Lantern Tavern",
     "Dragon’s Gate",
     "Ironbridge Crossing",
     "Duskwood Park",
     "Lighthouse Point",
     "Gilded Archway",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Amber Plaza",
     "Sapphire Arena",
     "Duskwood Park",
     "Riverstone Wharf",
     "Azure Gardens",
     "Flare Alley",
     "Brass Lantern Tavern",
     "Dragon’s Gate",
     "Ironbridge Crossing",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Skyline Gardens",
     "Lighthouse Point",
     "Gilded Archway",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Lighthouse Point",
     "Gilded Archway",
     "Skyline Gardens",
     "Flare Alley",
     "Azure Gardens",
     "Duskwood Park",
     "Oakshade Library",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Amber Plaza",
     "Brass Lantern Tavern",
     "Willowshade Pavilion",
     "Ironbridge Crossing",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 59,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse. The delivery points are located in various parts of the city, each representing different types of businesses or residential areas with unique delivery requirements.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Skyline Gardens\",\n        \"Flare Alley\",\n        \"Riverstone Wharf\",\n        \"Sapphire Arena\",\n        \"Westgate Station\",\n        \"Azure Gardens\",\n        \"Gilded Archway\",\n        \"Willowshade Pavilion\",\n        \"Duskwood Park\",\n        \"Brass Lantern Tavern\",\n        \"Amber Plaza\",\n        \"Dragon’s Gate\",\n        \"Oakshade Library\",\n        \"Ironbridge Crossing\",\n        \"Lighthouse Point\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each with unique characteristics and requirements.\n        \"Central Warehouse\": The starting and ending point for the delivery driver, located near the city center.\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse, minimizing total distance traveled.\n        \"Distance Table\": A matrix that provides the approximate travel distances (in kilometers) between each pair of delivery points, influenced by city traffic patterns and street layouts.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 5,
  "adj": [
   [
    0,
    6,
    7,
    10,
    7,
    7,
    5,
    4,
    2,
    4,
    7,
    10,
    2,
    3,
    3,
    6
   ],
   [
    6,
    0,
    5,
    5,
    10,
    3,
    3,
    7,
    3,
    9,
    9,
    2,
    8,
    5,
    8,
    8
   ],
   [
    7,
    5,
    0,
    4,
    1,
    3,
    7,
    2,
    10,
    9,
    3,
    4,
    6,
    3,
    9,
    8
   ],
   [
    10,
    5,
    4,
    0,
    3,
    4,
    4,
    6,
    5,
    5,
    3,
    9,
    6,
    4,
    9,
    5
   ],
   [
    7,
    10,
    1,
    3,
    0,
    2,
    5,
    5,
    10,
    9,
    6,
    7,
    7,
    5,
    2,
    1
   ],
   [
    7,
    3,
    3,
    4,
    2,
    0,
    5,
    9,
    2,
    3,
    6,
    9,
    10,
    5,
    10,
    8
   ],
   [
    5,
    3,
    7,
    4,
    5,
    5,
    0,
    10,
    9,
    2,
    5,
    6,
    5,
    6,
    6,
    1
   ],
   [
    4,
    7,
    2,
    6,
    5,
    9,
    10,
    0,
    7,
    1,
    10,
    8,
    6,
    4,
    2,
    1
   ],
   [
    2,
    3,
    10,
    5,
    10,
    2,
    9,
    7,
    0,
    8,
    6,
    8,
    2,
    3,
    1,
    1
   ],
   [
    4,
    9,
    9,
    5,
    9,
    3,
    2,
    1,
    8,
    0,
    9,
    6,
    6,
    9,
    8,
    3
   ],
   [
    7,
    9,
    3,
    3,
    6,
    6,
    5,
    10,
    6,
    9,
    0,
    1,
    8,
    6,
    10,
    3
   ],
   [
    10,
    2,
    4,
    9,
    7,
    9,
    6,
    8,
    8,
    6,
    1,
    0,
    2,
    6,
    4,
    2
   ],
   [
    2,
    8,
    6,
    6,
    7,
    10,
    5,
    6,
    2,
    6,
    8,
    2,
    0,
    6,
    10,
    4
   ],
   [
    3,
    5,
    3,
    4,
    5,
    5,
    6,
    4,
    3,
    9,
    6,
    6,
    6,
    0,
    4,
    5
   ],
   [
    3,
    8,
    9,
    9,
    2,
    10,
    6,
    2,
    1,
    8,
    10,
    4,
    10,
    4,
    0,
    7
   ],
   [
    6,
    8,
    8,
    5,
    1,
    8,
    1,
    1,
    1,
    3,
    3,
    2,
    4,
    5,
    7,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Knight’s Market",
   "Flare Alley",
   "Yarrow Plaza",
   "Haven Docks",
   "Beacon Tower",
   "Quarry Point",
   "Shadowbridge Arcade",
   "Flint Forge Quarter",
   "Moonlit Promenade",
   "Opal Theater",
   "Primrose Boulevard",
   "Twilight Harbor",
   "Willowshade Pavilion",
   "Oakshade Library",
   "Evergreen Circle"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Flint Forge Quarter",
     "Oakshade Library",
     "Shadowbridge Arcade",
     "Moonlit Promenade",
     "Quarry Point",
     "Evergreen Circle",
     "Haven Docks",
     "Flare Alley",
     "Beacon Tower",
     "Knight’s Market",
     "Primrose Boulevard",
     "Opal Theater",
     "Yarrow Plaza",
     "Willowshade Pavilion",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 1.96
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Willowshade Pavilion",
     "Twilight Harbor",
     "Primrose Boulevard",
     "Opal Theater",
     "Knight’s Market",
     "Beacon Tower",
     "Haven Docks",
     "Yarrow Plaza",
     "Flare Alley",
     "Evergreen Circle",
     "Shadowbridge Arcade",
     "Moonlit Promenade",
     "Quarry Point",
     "Flint Forge Quarter",
     "Oakshade Library",
     "Warehouse"
    ],
    "ans_distance": 58,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flint Forge Quarter",
     "Oakshade Library",
     "Haven Docks",
     "Flare Alley",
     "Shadowbridge Arcade",
     "Moonlit Promenade",
     "Quarry Point",
     "Evergreen Circle",
     "Primrose Boulevard",
     "Opal Theater",
     "Yarrow Plaza",
     "Beacon Tower",
     "Knight’s Market",
     "Willowshade Pavilion",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flint Forge Quarter",
     "Oakshade Library",
     "Haven Docks",
     "Flare Alley",
     "Shadowbridge Arcade",
     "Moonlit Promenade",
     "Quarry Point",
     "Evergreen Circle",
     "Primrose Boulevard",
     "Opal Theater",
     "Yarrow Plaza",
     "Beacon Tower",
     "Knight’s Market",
     "Willowshade Pavilion",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Flint Forge Quarter",
     "Evergreen Circle",
     "Haven Docks",
     "Beacon Tower",
     "Knight’s Market",
     "Quarry Point",
     "Moonlit Promenade",
     "Shadowbridge Arcade",
     "Flare Alley",
     "Twilight Harbor",
     "Primrose Boulevard",
     "Opal Theater",
     "Yarrow Plaza",
     "Willowshade Pavilion",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Haven Docks",
     "Willowshade Pavilion",
     "Evergreen Circle",
     "Primrose Boulevard",
     "Opal Theater",
     "Knight’s Market",
     "Flint Forge Quarter",
     "Oakshade Library",
     "Shadowbridge Arcade",
     "Flare Alley",
     "Yarrow Plaza",
     "Quarry Point",
     "Moonlit Promenade",
     "Beacon Tower",
     "Warehouse"
    ],
    "ans_distance": 59,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse. The delivery points are diverse, representing various types of businesses and residential areas, each with unique delivery requirements. Efficient routing is crucial for saving fuel, reducing delivery times, and improving overall operational efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Knight’s Market\",\n        \"Flare Alley\",\n        \"Yarrow Plaza\",\n        \"Haven Docks\",\n        \"Beacon Tower\",\n        \"Quarry Point\",\n        \"Shadowbridge Arcade\",\n        \"Flint Forge Quarter\",\n        \"Moonlit Promenade\",\n        \"Opal Theater\",\n        \"Primrose Boulevard\",\n        \"Twilight Harbor\",\n        \"Willowshade Pavilion\",\n        \"Oakshade Library\",\n        \"Evergreen Circle\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be dropped off, each with specific characteristics and requirements.\n        \"Total Distance\": The sum of distances traveled by the delivery driver during the route.\n        \"Optimal Route\": The most efficient path that minimizes the total distance while visiting each delivery point exactly once before returning to the starting point (warehouse).\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 6,
  "adj": [
   [
    0,
    1,
    6,
    3,
    6,
    10,
    6,
    10,
    8,
    10,
    5,
    1,
    10,
    5,
    5,
    4
   ],
   [
    1,
    0,
    2,
    10,
    3,
    9,
    1,
    3,
    3,
    5,
    1,
    10,
    6,
    7,
    1,
    7
   ],
   [
    6,
    2,
    0,
    3,
    7,
    4,
    8,
    3,
    9,
    3,
    6,
    9,
    9,
    4,
    8,
    6
   ],
   [
    3,
    10,
    3,
    0,
    3,
    2,
    10,
    8,
    9,
    1,
    7,
    7,
    5,
    9,
    7,
    5
   ],
   [
    6,
    3,
    7,
    3,
    0,
    1,
    2,
    7,
    6,
    10,
    4,
    5,
    1,
    2,
    9,
    7
   ],
   [
    10,
    9,
    4,
    2,
    1,
    0,
    6,
    3,
    9,
    1,
    8,
    7,
    1,
    2,
    6,
    10
   ],
   [
    6,
    1,
    8,
    10,
    2,
    6,
    0,
    2,
    6,
    7,
    8,
    4,
    2,
    7,
    2,
    1
   ],
   [
    10,
    3,
    3,
    8,
    7,
    3,
    2,
    0,
    5,
    2,
    9,
    1,
    3,
    6,
    10,
    4
   ],
   [
    8,
    3,
    9,
    9,
    6,
    9,
    6,
    5,
    0,
    4,
    2,
    1,
    4,
    5,
    4,
    5
   ],
   [
    10,
    5,
    3,
    1,
    10,
    1,
    7,
    2,
    4,
    0,
    10,
    4,
    2,
    1,
    5,
    3
   ],
   [
    5,
    1,
    6,
    7,
    4,
    8,
    8,
    9,
    2,
    10,
    0,
    5,
    6,
    6,
    7,
    3
   ],
   [
    1,
    10,
    9,
    7,
    5,
    7,
    4,
    1,
    1,
    4,
    5,
    0,
    9,
    2,
    8,
    3
   ],
   [
    10,
    6,
    9,
    5,
    1,
    1,
    2,
    3,
    4,
    2,
    6,
    9,
    0,
    6,
    5,
    3
   ],
   [
    5,
    7,
    4,
    9,
    2,
    2,
    7,
    6,
    5,
    1,
    6,
    2,
    6,
    0,
    4,
    1
   ],
   [
    5,
    1,
    8,
    7,
    9,
    6,
    2,
    10,
    4,
    5,
    7,
    8,
    5,
    4,
    0,
    7
   ],
   [
    4,
    7,
    6,
    5,
    7,
    10,
    1,
    4,
    5,
    3,
    3,
    3,
    3,
    1,
    7,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Yarrow Plaza",
   "Echo Station",
   "Skyline Gardens",
   "Evergreen Circle",
   "Amber Plaza",
   "Zenith Arena",
   "Mosaic Plaza",
   "Horizon Mall",
   "Granite Plaza",
   "Quartz District",
   "Twilight Harbor",
   "Sapphire Arena",
   "Cobalt Market",
   "Willowshade Pavilion",
   "Quarry Point"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Quartz District",
     "Horizon Mall",
     "Willowshade Pavilion",
     "Zenith Arena",
     "Quarry Point",
     "Cobalt Market",
     "Evergreen Circle",
     "Sapphire Arena",
     "Amber Plaza",
     "Granite Plaza",
     "Skyline Gardens",
     "Echo Station",
     "Mosaic Plaza",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 1.94
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Mosaic Plaza",
     "Horizon Mall",
     "Quartz District",
     "Yarrow Plaza",
     "Willowshade Pavilion",
     "Echo Station",
     "Skyline Gardens",
     "Granite Plaza",
     "Sapphire Arena",
     "Evergreen Circle",
     "Amber Plaza",
     "Cobalt Market",
     "Quarry Point",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Zenith Arena",
     "Quarry Point",
     "Cobalt Market",
     "Granite Plaza",
     "Skyline Gardens",
     "Amber Plaza",
     "Evergreen Circle",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Twilight Harbor",
     "Horizon Mall",
     "Quartz District",
     "Echo Station",
     "Willowshade Pavilion",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Zenith Arena",
     "Quarry Point",
     "Cobalt Market",
     "Granite Plaza",
     "Skyline Gardens",
     "Amber Plaza",
     "Evergreen Circle",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Twilight Harbor",
     "Horizon Mall",
     "Quartz District",
     "Echo Station",
     "Willowshade Pavilion",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Granite Plaza",
     "Amber Plaza",
     "Evergreen Circle",
     "Sapphire Arena",
     "Zenith Arena",
     "Willowshade Pavilion",
     "Cobalt Market",
     "Quarry Point",
     "Quartz District",
     "Horizon Mall",
     "Twilight Harbor",
     "Mosaic Plaza",
     "Echo Station",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Zenith Arena",
     "Willowshade Pavilion",
     "Horizon Mall",
     "Twilight Harbor",
     "Quartz District",
     "Evergreen Circle",
     "Amber Plaza",
     "Mosaic Plaza",
     "Cobalt Market",
     "Echo Station",
     "Granite Plaza",
     "Sapphire Arena",
     "Quarry Point",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse. The delivery points are diverse, representing various types of businesses and residential areas, each with unique delivery requirements. Efficient routing is essential for saving fuel, reducing delivery times, and improving overall operational efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Yarrow Plaza\",\n        \"Echo Station\",\n        \"Skyline Gardens\",\n        \"Evergreen Circle\",\n        \"Amber Plaza\",\n        \"Zenith Arena\",\n        \"Mosaic Plaza\",\n        \"Horizon Mall\",\n        \"Granite Plaza\",\n        \"Quartz District\",\n        \"Twilight Harbor\",\n        \"Sapphire Arena\",\n        \"Cobalt Market\",\n        \"Willowshade Pavilion\",\n        \"Quarry Point\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": \"Locations where packages need to be delivered, each representing different types of businesses or residential areas.\",\n        \"Warehouse\": \"The central starting and ending point for the delivery driver.\",\n        \"Optimal Route\": \"The most efficient path that minimizes the total distance traveled while visiting each delivery point exactly once before returning to the warehouse.\",\n        \"Distance Table\": \"A matrix showing the approximate distances between each pair of delivery points, which is influenced by city traffic patterns and street layouts.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 7,
  "adj": [
   [
    0,
    6,
    6,
    8,
    6,
    10,
    8,
    1,
    2,
    7,
    7,
    5,
    8,
    4,
    1,
    10
   ],
   [
    6,
    0,
    1,
    2,
    4,
    9,
    2,
    6,
    8,
    3,
    10,
    7,
    6,
    1,
    9,
    5
   ],
   [
    6,
    1,
    0,
    6,
    7,
    10,
    3,
    9,
    4,
    10,
    4,
    1,
    9,
    8,
    4,
    10
   ],
   [
    8,
    2,
    6,
    0,
    3,
    8,
    1,
    10,
    3,
    2,
    5,
    4,
    6,
    10,
    8,
    3
   ],
   [
    6,
    4,
    7,
    3,
    0,
    7,
    4,
    9,
    1,
    8,
    6,
    5,
    8,
    8,
    4,
    6
   ],
   [
    10,
    9,
    10,
    8,
    7,
    0,
    1,
    3,
    4,
    8,
    10,
    10,
    9,
    4,
    9,
    6
   ],
   [
    8,
    2,
    3,
    1,
    4,
    1,
    0,
    7,
    3,
    6,
    3,
    9,
    6,
    5,
    8,
    7
   ],
   [
    1,
    6,
    9,
    10,
    9,
    3,
    7,
    0,
    2,
    7,
    9,
    8,
    1,
    1,
    7,
    2
   ],
   [
    2,
    8,
    4,
    3,
    1,
    4,
    3,
    2,
    0,
    4,
    10,
    1,
    9,
    1,
    8,
    7
   ],
   [
    7,
    3,
    10,
    2,
    8,
    8,
    6,
    7,
    4,
    0,
    9,
    1,
    10,
    8,
    6,
    3
   ],
   [
    7,
    10,
    4,
    5,
    6,
    10,
    3,
    9,
    10,
    9,
    0,
    7,
    4,
    9,
    8,
    3
   ],
   [
    5,
    7,
    1,
    4,
    5,
    10,
    9,
    8,
    1,
    1,
    7,
    0,
    5,
    1,
    5,
    6
   ],
   [
    8,
    6,
    9,
    6,
    8,
    9,
    6,
    1,
    9,
    10,
    4,
    5,
    0,
    8,
    4,
    6
   ],
   [
    4,
    1,
    8,
    10,
    8,
    4,
    5,
    1,
    1,
    8,
    9,
    1,
    8,
    0,
    5,
    2
   ],
   [
    1,
    9,
    4,
    8,
    4,
    9,
    8,
    7,
    8,
    6,
    8,
    5,
    4,
    5,
    0,
    5
   ],
   [
    10,
    5,
    10,
    3,
    6,
    6,
    7,
    2,
    7,
    3,
    3,
    6,
    6,
    2,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Quartz District",
   "Riverstone Wharf",
   "Moonlit Promenade",
   "Echo Station",
   "Skyline Gardens",
   "Quarry Point",
   "Maplewood Conservatory",
   "Ivory Spire Cathedral",
   "Silvercrest Observatory",
   "Umbra Theater",
   "Sapphire Arena",
   "Amber Plaza",
   "Oakshade Library",
   "Duskwood Park",
   "Lighthouse Point"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Maplewood Conservatory",
     "Amber Plaza",
     "Umbra Theater",
     "Lighthouse Point",
     "Oakshade Library",
     "Quartz District",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Silvercrest Observatory",
     "Moonlit Promenade",
     "Quarry Point",
     "Skyline Gardens",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 2.01
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Amber Plaza",
     "Maplewood Conservatory",
     "Lighthouse Point",
     "Umbra Theater",
     "Quarry Point",
     "Skyline Gardens",
     "Moonlit Promenade",
     "Quartz District",
     "Echo Station",
     "Ivory Spire Cathedral",
     "Sapphire Arena",
     "Silvercrest Observatory",
     "Riverstone Wharf",
     "Oakshade Library",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Maplewood Conservatory",
     "Amber Plaza",
     "Umbra Theater",
     "Quarry Point",
     "Moonlit Promenade",
     "Quartz District",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Duskwood Park",
     "Oakshade Library",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Maplewood Conservatory",
     "Amber Plaza",
     "Umbra Theater",
     "Quarry Point",
     "Moonlit Promenade",
     "Quartz District",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Duskwood Park",
     "Oakshade Library",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Amber Plaza",
     "Maplewood Conservatory",
     "Skyline Gardens",
     "Quarry Point",
     "Moonlit Promenade",
     "Quartz District",
     "Oakshade Library",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Sapphire Arena",
     "Riverstone Wharf",
     "Umbra Theater",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Silvercrest Observatory",
     "Quarry Point",
     "Echo Station",
     "Ivory Spire Cathedral",
     "Skyline Gardens",
     "Oakshade Library",
     "Quartz District",
     "Amber Plaza",
     "Umbra Theater",
     "Maplewood Conservatory",
     "Lighthouse Point",
     "Moonlit Promenade",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 61,
    "cost_time": 1.43
   }
  },
  "response": "{\n    \"context\": \"The company is tasked with optimizing delivery routes across a busy urban area, focusing on minimizing travel distance while covering multiple delivery points. The goal is to enhance efficiency, reduce fuel costs, and improve delivery times. The warehouse is centrally located, and the delivery points represent various business and residential areas, each with distinct characteristics and delivery needs.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Quartz District\",\n        \"Riverstone Wharf\",\n        \"Moonlit Promenade\",\n        \"Echo Station\",\n        \"Skyline Gardens\",\n        \"Quarry Point\",\n        \"Maplewood Conservatory\",\n        \"Ivory Spire Cathedral\",\n        \"Silvercrest Observatory\",\n        \"Umbra Theater\",\n        \"Sapphire Arena\",\n        \"Amber Plaza\",\n        \"Oakshade Library\",\n        \"Duskwood Park\",\n        \"Lighthouse Point\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas.\n        \"Route Optimization\": The process of determining the most efficient path to cover all delivery points while minimizing distance and time.\n        \"Travel Distance\": The distance between two points, which can vary based on city traffic patterns and street layouts.\n        \"Urban Area\": A densely populated region characterized by significant human-made structures and infrastructure, often requiring efficient logistics for deliveries.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 8,
  "adj": [
   [
    0,
    2,
    10,
    7,
    7,
    5,
    9,
    7,
    8,
    8,
    9,
    10,
    2,
    3,
    5,
    8
   ],
   [
    2,
    0,
    10,
    9,
    2,
    8,
    10,
    9,
    8,
    3,
    4,
    1,
    2,
    9,
    1,
    3
   ],
   [
    10,
    10,
    0,
    1,
    6,
    8,
    7,
    6,
    8,
    3,
    8,
    6,
    8,
    8,
    5,
    4
   ],
   [
    7,
    9,
    1,
    0,
    6,
    6,
    4,
    7,
    3,
    10,
    5,
    7,
    4,
    10,
    7,
    6
   ],
   [
    7,
    2,
    6,
    6,
    0,
    4,
    5,
    8,
    3,
    8,
    1,
    9,
    3,
    1,
    1,
    9
   ],
   [
    5,
    8,
    8,
    6,
    4,
    0,
    5,
    2,
    2,
    10,
    1,
    10,
    8,
    10,
    5,
    6
   ],
   [
    9,
    10,
    7,
    4,
    5,
    5,
    0,
    6,
    2,
    9,
    3,
    10,
    6,
    7,
    2,
    7
   ],
   [
    7,
    9,
    6,
    7,
    8,
    2,
    6,
    0,
    4,
    5,
    4,
    7,
    3,
    6,
    3,
    9
   ],
   [
    8,
    8,
    8,
    3,
    3,
    2,
    2,
    4,
    0,
    5,
    4,
    10,
    9,
    4,
    6,
    8
   ],
   [
    8,
    3,
    3,
    10,
    8,
    10,
    9,
    5,
    5,
    0,
    3,
    1,
    2,
    1,
    5,
    6
   ],
   [
    9,
    4,
    8,
    5,
    1,
    1,
    3,
    4,
    4,
    3,
    0,
    1,
    1,
    6,
    4,
    9
   ],
   [
    10,
    1,
    6,
    7,
    9,
    10,
    10,
    7,
    10,
    1,
    1,
    0,
    1,
    7,
    6,
    10
   ],
   [
    2,
    2,
    8,
    4,
    3,
    8,
    6,
    3,
    9,
    2,
    1,
    1,
    0,
    6,
    7,
    6
   ],
   [
    3,
    9,
    8,
    10,
    1,
    10,
    7,
    6,
    4,
    1,
    6,
    7,
    6,
    0,
    9,
    2
   ],
   [
    5,
    1,
    5,
    7,
    1,
    5,
    2,
    3,
    6,
    5,
    4,
    6,
    7,
    9,
    0,
    9
   ],
   [
    8,
    3,
    4,
    6,
    9,
    6,
    7,
    9,
    8,
    6,
    9,
    10,
    6,
    2,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Gilded Archway",
   "Ivory Spire Cathedral",
   "Cobalt Market",
   "Mosaic Plaza",
   "Yarrow Plaza",
   "Riverstone Wharf",
   "Jade Fountain",
   "Horizon Mall",
   "Nimbus Plaza",
   "Flare Alley",
   "Evergreen Circle",
   "Zenith Arena",
   "Union Square Market",
   "Azure Gardens",
   "Granite Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Evergreen Circle",
     "Nimbus Plaza",
     "Union Square Market",
     "Granite Plaza",
     "Ivory Spire Cathedral",
     "Cobalt Market",
     "Horizon Mall",
     "Riverstone Wharf",
     "Azure Gardens",
     "Mosaic Plaza",
     "Flare Alley",
     "Yarrow Plaza",
     "Jade Fountain",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 1.97
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Flare Alley",
     "Mosaic Plaza",
     "Azure Gardens",
     "Gilded Archway",
     "Granite Plaza",
     "Union Square Market",
     "Yarrow Plaza",
     "Jade Fountain",
     "Horizon Mall",
     "Riverstone Wharf",
     "Cobalt Market",
     "Ivory Spire Cathedral",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Evergreen Circle",
     "Nimbus Plaza",
     "Union Square Market",
     "Mosaic Plaza",
     "Flare Alley",
     "Yarrow Plaza",
     "Jade Fountain",
     "Zenith Arena",
     "Cobalt Market",
     "Ivory Spire Cathedral",
     "Granite Plaza",
     "Riverstone Wharf",
     "Horizon Mall",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Evergreen Circle",
     "Nimbus Plaza",
     "Union Square Market",
     "Mosaic Plaza",
     "Flare Alley",
     "Yarrow Plaza",
     "Jade Fountain",
     "Zenith Arena",
     "Cobalt Market",
     "Ivory Spire Cathedral",
     "Granite Plaza",
     "Riverstone Wharf",
     "Horizon Mall",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Cobalt Market",
     "Ivory Spire Cathedral",
     "Granite Plaza",
     "Gilded Archway",
     "Zenith Arena",
     "Evergreen Circle",
     "Nimbus Plaza",
     "Union Square Market",
     "Mosaic Plaza",
     "Flare Alley",
     "Riverstone Wharf",
     "Horizon Mall",
     "Yarrow Plaza",
     "Jade Fountain",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Gilded Archway",
     "Evergreen Circle",
     "Ivory Spire Cathedral",
     "Cobalt Market",
     "Horizon Mall",
     "Riverstone Wharf",
     "Flare Alley",
     "Yarrow Plaza",
     "Jade Fountain",
     "Nimbus Plaza",
     "Granite Plaza",
     "Union Square Market",
     "Zenith Arena",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Gilded Archway\",\n        \"Ivory Spire Cathedral\",\n        \"Cobalt Market\",\n        \"Mosaic Plaza\",\n        \"Yarrow Plaza\",\n        \"Riverstone Wharf\",\n        \"Jade Fountain\",\n        \"Horizon Mall\",\n        \"Nimbus Plaza\",\n        \"Flare Alley\",\n        \"Evergreen Circle\",\n        \"Zenith Arena\",\n        \"Union Square Market\",\n        \"Azure Gardens\",\n        \"Granite Plaza\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and ends their route.\",\n        \"Delivery Points\": The various locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Distance Table\": A matrix that provides the approximate distance (in kilometers) between each pair of delivery points, which is influenced by city traffic patterns and street layouts.\",\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse, minimizing the total distance traveled.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 9,
  "adj": [
   [
    0,
    9,
    8,
    3,
    2,
    5,
    10,
    4,
    8,
    10,
    8,
    1,
    8,
    5,
    8,
    10
   ],
   [
    9,
    0,
    4,
    4,
    1,
    6,
    10,
    6,
    6,
    2,
    2,
    4,
    9,
    6,
    2,
    9
   ],
   [
    8,
    4,
    0,
    6,
    6,
    3,
    4,
    2,
    2,
    3,
    2,
    5,
    10,
    10,
    3,
    4
   ],
   [
    3,
    4,
    6,
    0,
    6,
    3,
    8,
    6,
    1,
    8,
    8,
    9,
    2,
    5,
    4,
    5
   ],
   [
    2,
    1,
    6,
    6,
    0,
    2,
    5,
    5,
    5,
    8,
    9,
    9,
    2,
    4,
    10,
    9
   ],
   [
    5,
    6,
    3,
    3,
    2,
    0,
    5,
    3,
    9,
    4,
    6,
    6,
    4,
    10,
    7,
    1
   ],
   [
    10,
    10,
    4,
    8,
    5,
    5,
    0,
    3,
    4,
    8,
    9,
    4,
    1,
    7,
    1,
    3
   ],
   [
    4,
    6,
    2,
    6,
    5,
    3,
    3,
    0,
    5,
    6,
    10,
    3,
    3,
    8,
    5,
    8
   ],
   [
    8,
    6,
    2,
    1,
    5,
    9,
    4,
    5,
    0,
    8,
    10,
    6,
    2,
    3,
    2,
    6
   ],
   [
    10,
    2,
    3,
    8,
    8,
    4,
    8,
    6,
    8,
    0,
    6,
    5,
    6,
    4,
    8,
    2
   ],
   [
    8,
    2,
    2,
    8,
    9,
    6,
    9,
    10,
    10,
    6,
    0,
    4,
    2,
    3,
    2,
    5
   ],
   [
    1,
    4,
    5,
    9,
    9,
    6,
    4,
    3,
    6,
    5,
    4,
    0,
    3,
    6,
    1,
    3
   ],
   [
    8,
    9,
    10,
    2,
    2,
    4,
    1,
    3,
    2,
    6,
    2,
    3,
    0,
    7,
    6,
    7
   ],
   [
    5,
    6,
    10,
    5,
    4,
    10,
    7,
    8,
    3,
    4,
    3,
    6,
    7,
    0,
    6,
    7
   ],
   [
    8,
    2,
    3,
    4,
    10,
    7,
    1,
    5,
    2,
    8,
    2,
    1,
    6,
    6,
    0,
    5
   ],
   [
    10,
    9,
    4,
    5,
    9,
    1,
    3,
    8,
    6,
    2,
    5,
    3,
    7,
    7,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "King’s Row",
   "Jade Fountain",
   "Brass Lantern Tavern",
   "Knight’s Market",
   "Twilight Harbor",
   "Jasper Marina",
   "Lunar Pier",
   "Northwind Tower",
   "Granite Plaza",
   "Amber Plaza",
   "Evergreen Circle",
   "Lighthouse Point",
   "Nimbus Plaza",
   "Union Square Market",
   "Skyline Gardens"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "King’s Row",
     "Granite Plaza",
     "Skyline Gardens",
     "Twilight Harbor",
     "Lunar Pier",
     "Jade Fountain",
     "Amber Plaza",
     "Nimbus Plaza",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Lighthouse Point",
     "Jasper Marina",
     "Union Square Market",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 28,
    "cost_time": 1.95
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Twilight Harbor",
     "Skyline Gardens",
     "Granite Plaza",
     "King’s Row",
     "Amber Plaza",
     "Jade Fountain",
     "Lunar Pier",
     "Northwind Tower",
     "Nimbus Plaza",
     "Brass Lantern Tavern",
     "Lighthouse Point",
     "Jasper Marina",
     "Union Square Market",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Union Square Market",
     "Jasper Marina",
     "Lighthouse Point",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Jade Fountain",
     "Lunar Pier",
     "Twilight Harbor",
     "Skyline Gardens",
     "Granite Plaza",
     "King’s Row",
     "Knight’s Market",
     "Nimbus Plaza",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Union Square Market",
     "Jasper Marina",
     "Lighthouse Point",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Jade Fountain",
     "Lunar Pier",
     "Twilight Harbor",
     "Skyline Gardens",
     "Granite Plaza",
     "King’s Row",
     "Knight’s Market",
     "Nimbus Plaza",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Lighthouse Point",
     "Jasper Marina",
     "Union Square Market",
     "Amber Plaza",
     "Nimbus Plaza",
     "Knight’s Market",
     "King’s Row",
     "Granite Plaza",
     "Skyline Gardens",
     "Twilight Harbor",
     "Jade Fountain",
     "Lunar Pier",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Northwind Tower",
     "Jade Fountain",
     "Twilight Harbor",
     "Skyline Gardens",
     "Jasper Marina",
     "Lighthouse Point",
     "Granite Plaza",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Union Square Market",
     "Amber Plaza",
     "Brass Lantern Tavern",
     "King’s Row",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 53,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"King’s Row\",\n        \"Jade Fountain\",\n        \"Brass Lantern Tavern\",\n        \"Knight’s Market\",\n        \"Twilight Harbor\",\n        \"Jasper Marina\",\n        \"Lunar Pier\",\n        \"Northwind Tower\",\n        \"Granite Plaza\",\n        \"Amber Plaza\",\n        \"Evergreen Circle\",\n        \"Lighthouse Point\",\n        \"Nimbus Plaza\",\n        \"Union Square Market\",\n        \"Skyline Gardens\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and ends their route.\n        \"Delivery Points\": The various locations where packages need to be dropped off, each representing different types of businesses or residential areas.\n        \"Efficient Route\": A path that minimizes the total distance traveled while ensuring each delivery point is visited exactly once before returning to the starting point.\n        \"Distance Table\": A matrix that provides the travel distances between each pair of delivery points, which is crucial for determining the optimal route.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 10,
  "adj": [
   [
    0,
    8,
    2,
    2,
    10,
    3,
    10,
    10,
    10,
    5,
    10,
    1,
    2,
    1,
    1,
    9
   ],
   [
    8,
    0,
    5,
    5,
    7,
    2,
    10,
    6,
    4,
    5,
    2,
    1,
    9,
    5,
    10,
    3
   ],
   [
    2,
    5,
    0,
    7,
    10,
    4,
    9,
    1,
    10,
    3,
    10,
    4,
    9,
    3,
    1,
    7
   ],
   [
    2,
    5,
    7,
    0,
    5,
    2,
    2,
    6,
    3,
    5,
    9,
    4,
    4,
    8,
    8,
    3
   ],
   [
    10,
    7,
    10,
    5,
    0,
    4,
    3,
    7,
    1,
    4,
    10,
    1,
    10,
    5,
    4,
    4
   ],
   [
    3,
    2,
    4,
    2,
    4,
    0,
    10,
    7,
    2,
    7,
    5,
    3,
    2,
    4,
    7,
    8
   ],
   [
    10,
    10,
    9,
    2,
    3,
    10,
    0,
    2,
    5,
    9,
    5,
    3,
    6,
    10,
    3,
    6
   ],
   [
    10,
    6,
    1,
    6,
    7,
    7,
    2,
    0,
    4,
    4,
    3,
    3,
    8,
    1,
    8,
    10
   ],
   [
    10,
    4,
    10,
    3,
    1,
    2,
    5,
    4,
    0,
    10,
    5,
    5,
    10,
    2,
    4,
    6
   ],
   [
    5,
    5,
    3,
    5,
    4,
    7,
    9,
    4,
    10,
    0,
    4,
    1,
    2,
    8,
    9,
    2
   ],
   [
    10,
    2,
    10,
    9,
    10,
    5,
    5,
    3,
    5,
    4,
    0,
    7,
    5,
    9,
    5,
    6
   ],
   [
    1,
    1,
    4,
    4,
    1,
    3,
    3,
    3,
    5,
    1,
    7,
    0,
    3,
    8,
    3,
    9
   ],
   [
    2,
    9,
    9,
    4,
    10,
    2,
    6,
    8,
    10,
    2,
    5,
    3,
    0,
    2,
    1,
    10
   ],
   [
    1,
    5,
    3,
    8,
    5,
    4,
    10,
    1,
    2,
    8,
    9,
    8,
    2,
    0,
    9,
    8
   ],
   [
    1,
    10,
    1,
    8,
    4,
    7,
    3,
    8,
    4,
    9,
    5,
    3,
    1,
    9,
    0,
    3
   ],
   [
    9,
    3,
    7,
    3,
    4,
    8,
    6,
    10,
    6,
    2,
    6,
    9,
    10,
    8,
    3,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Lunar Pier",
   "Nimbus Plaza",
   "Opal Theater",
   "Rosewood Hall",
   "Silvercrest Observatory",
   "Ivory Spire Cathedral",
   "Quartz District",
   "Evergreen Circle",
   "Primrose Boulevard",
   "Azure Gardens",
   "Oakshade Library",
   "Granite Plaza",
   "Knight’s Market",
   "Echo Station",
   "Haven Docks"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Echo Station",
     "Granite Plaza",
     "Silvercrest Observatory",
     "Lunar Pier",
     "Azure Gardens",
     "Quartz District",
     "Ivory Spire Cathedral",
     "Opal Theater",
     "Haven Docks",
     "Primrose Boulevard",
     "Oakshade Library",
     "Rosewood Hall",
     "Evergreen Circle",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 28,
    "cost_time": 2.03
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Opal Theater",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Nimbus Plaza",
     "Echo Station",
     "Granite Plaza",
     "Knight’s Market",
     "Haven Docks",
     "Primrose Boulevard",
     "Oakshade Library",
     "Rosewood Hall",
     "Evergreen Circle",
     "Silvercrest Observatory",
     "Lunar Pier",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Lunar Pier",
     "Silvercrest Observatory",
     "Opal Theater",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Nimbus Plaza",
     "Echo Station",
     "Granite Plaza",
     "Primrose Boulevard",
     "Haven Docks",
     "Rosewood Hall",
     "Evergreen Circle",
     "Knight’s Market",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Lunar Pier",
     "Silvercrest Observatory",
     "Opal Theater",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Nimbus Plaza",
     "Echo Station",
     "Granite Plaza",
     "Primrose Boulevard",
     "Haven Docks",
     "Rosewood Hall",
     "Evergreen Circle",
     "Knight’s Market",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Opal Theater",
     "Haven Docks",
     "Primrose Boulevard",
     "Oakshade Library",
     "Rosewood Hall",
     "Evergreen Circle",
     "Azure Gardens",
     "Lunar Pier",
     "Silvercrest Observatory",
     "Nimbus Plaza",
     "Quartz District",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Granite Plaza",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Haven Docks",
     "Azure Gardens",
     "Echo Station",
     "Ivory Spire Cathedral",
     "Rosewood Hall",
     "Oakshade Library",
     "Quartz District",
     "Knight’s Market",
     "Evergreen Circle",
     "Primrose Boulevard",
     "Lunar Pier",
     "Opal Theater",
     "Silvercrest Observatory",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 59,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The driver must start and end at the central warehouse while minimizing the total distance traveled to enhance efficiency and reduce costs.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Lunar Pier\",\n        \"Nimbus Plaza\",\n        \"Opal Theater\",\n        \"Rosewood Hall\",\n        \"Silvercrest Observatory\",\n        \"Ivory Spire Cathedral\",\n        \"Quartz District\",\n        \"Evergreen Circle\",\n        \"Primrose Boulevard\",\n        \"Azure Gardens\",\n        \"Oakshade Library\",\n        \"Granite Plaza\",\n        \"Knight’s Market\",\n        \"Echo Station\",\n        \"Haven Docks\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each with unique characteristics and requirements.\n        \"Optimal Route\": The most efficient path that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the starting point.\n        \"Distance Table\": A matrix that provides the travel distances between each pair of delivery points, which is essential for calculating the optimal route.\n        \"Urban Area\": A densely populated region characterized by a high concentration of businesses and residential areas, impacting travel distances and times.\n        \"Efficiency\": The ability to achieve maximum productivity with minimum wasted effort or expense, particularly in the context of fuel savings and delivery times.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 11,
  "adj": [
   [
    0,
    1,
    8,
    3,
    7,
    9,
    1,
    9,
    8,
    9,
    8,
    7,
    2,
    3,
    7,
    10
   ],
   [
    1,
    0,
    5,
    7,
    7,
    7,
    10,
    5,
    10,
    2,
    6,
    4,
    8,
    5,
    2,
    7
   ],
   [
    8,
    5,
    0,
    10,
    3,
    8,
    9,
    5,
    2,
    8,
    1,
    1,
    4,
    3,
    6,
    4
   ],
   [
    3,
    7,
    10,
    0,
    3,
    7,
    8,
    4,
    1,
    2,
    5,
    3,
    5,
    5,
    4,
    4
   ],
   [
    7,
    7,
    3,
    3,
    0,
    4,
    10,
    1,
    3,
    1,
    8,
    6,
    1,
    1,
    5,
    2
   ],
   [
    9,
    7,
    8,
    7,
    4,
    0,
    1,
    9,
    6,
    9,
    7,
    6,
    10,
    9,
    6,
    8
   ],
   [
    1,
    10,
    9,
    8,
    10,
    1,
    0,
    3,
    9,
    2,
    8,
    2,
    1,
    4,
    8,
    3
   ],
   [
    9,
    5,
    5,
    4,
    1,
    9,
    3,
    0,
    5,
    10,
    4,
    4,
    6,
    9,
    3,
    9
   ],
   [
    8,
    10,
    2,
    1,
    3,
    6,
    9,
    5,
    0,
    1,
    10,
    10,
    4,
    2,
    3,
    8
   ],
   [
    9,
    2,
    8,
    2,
    1,
    9,
    2,
    10,
    1,
    0,
    3,
    8,
    10,
    2,
    2,
    4
   ],
   [
    8,
    6,
    1,
    5,
    8,
    7,
    8,
    4,
    10,
    3,
    0,
    7,
    1,
    7,
    10,
    10
   ],
   [
    7,
    4,
    1,
    3,
    6,
    6,
    2,
    4,
    10,
    8,
    7,
    0,
    8,
    2,
    6,
    9
   ],
   [
    2,
    8,
    4,
    5,
    1,
    10,
    1,
    6,
    4,
    10,
    1,
    8,
    0,
    8,
    4,
    8
   ],
   [
    3,
    5,
    3,
    5,
    1,
    9,
    4,
    9,
    2,
    2,
    7,
    2,
    8,
    0,
    9,
    2
   ],
   [
    7,
    2,
    6,
    4,
    5,
    6,
    8,
    3,
    3,
    2,
    10,
    6,
    4,
    9,
    0,
    2
   ],
   [
    10,
    7,
    4,
    4,
    2,
    8,
    3,
    9,
    8,
    4,
    10,
    9,
    8,
    2,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Beacon Tower",
   "Moonlit Promenade",
   "Temple Square",
   "Flare Alley",
   "Union Square Market",
   "Quarry Point",
   "Brass Lantern Tavern",
   "Ironbridge Crossing",
   "King’s Row",
   "Sapphire Arena",
   "Haven Docks",
   "Jasper Marina",
   "Flint Forge Quarter",
   "Willowshade Pavilion",
   "Lunar Pier"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Beacon Tower",
     "King’s Row",
     "Temple Square",
     "Ironbridge Crossing",
     "Flint Forge Quarter",
     "Lunar Pier",
     "Willowshade Pavilion",
     "Brass Lantern Tavern",
     "Flare Alley",
     "Union Square Market",
     "Quarry Point",
     "Haven Docks",
     "Moonlit Promenade",
     "Sapphire Arena",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 28,
    "cost_time": 1.99
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Union Square Market",
     "Jasper Marina",
     "Sapphire Arena",
     "Moonlit Promenade",
     "Haven Docks",
     "Flint Forge Quarter",
     "Flare Alley",
     "King’s Row",
     "Ironbridge Crossing",
     "Temple Square",
     "Brass Lantern Tavern",
     "Lunar Pier",
     "Willowshade Pavilion",
     "Beacon Tower",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Beacon Tower",
     "King’s Row",
     "Flare Alley",
     "Brass Lantern Tavern",
     "Quarry Point",
     "Union Square Market",
     "Ironbridge Crossing",
     "Temple Square",
     "Haven Docks",
     "Moonlit Promenade",
     "Sapphire Arena",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Lunar Pier",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Beacon Tower",
     "King’s Row",
     "Flare Alley",
     "Brass Lantern Tavern",
     "Quarry Point",
     "Union Square Market",
     "Ironbridge Crossing",
     "Temple Square",
     "Haven Docks",
     "Moonlit Promenade",
     "Sapphire Arena",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Lunar Pier",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Jasper Marina",
     "Sapphire Arena",
     "Union Square Market",
     "Quarry Point",
     "Lunar Pier",
     "Willowshade Pavilion",
     "Beacon Tower",
     "King’s Row",
     "Ironbridge Crossing",
     "Moonlit Promenade",
     "Haven Docks",
     "Brass Lantern Tavern",
     "Flare Alley",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Lunar Pier",
     "King’s Row",
     "Flare Alley",
     "Beacon Tower",
     "Willowshade Pavilion",
     "Brass Lantern Tavern",
     "Haven Docks",
     "Moonlit Promenade",
     "Ironbridge Crossing",
     "Union Square Market",
     "Sapphire Arena",
     "Jasper Marina",
     "Quarry Point",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 53,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse. The delivery points are diverse, representing various types of businesses and residential areas, each with unique delivery requirements. The distances between these points vary based on city traffic patterns and street layouts.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Beacon Tower\",\n        \"Moonlit Promenade\",\n        \"Temple Square\",\n        \"Flare Alley\",\n        \"Union Square Market\",\n        \"Quarry Point\",\n        \"Brass Lantern Tavern\",\n        \"Ironbridge Crossing\",\n        \"King’s Row\",\n        \"Sapphire Arena\",\n        \"Haven Docks\",\n        \"Jasper Marina\",\n        \"Flint Forge Quarter\",\n        \"Willowshade Pavilion\",\n        \"Lunar Pier\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas.\n        \"Total Distance\": The sum of distances traveled by the delivery driver during the route.\n        \"Optimal Route\": The most efficient path that minimizes the total distance while visiting each delivery point exactly once and returning to the starting point.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 12,
  "adj": [
   [
    0,
    5,
    5,
    10,
    3,
    9,
    8,
    7,
    4,
    1,
    5,
    7,
    5,
    7,
    9,
    1
   ],
   [
    5,
    0,
    10,
    5,
    10,
    4,
    9,
    5,
    7,
    6,
    8,
    9,
    5,
    6,
    7,
    10
   ],
   [
    5,
    10,
    0,
    4,
    2,
    4,
    5,
    2,
    2,
    6,
    4,
    10,
    4,
    5,
    6,
    1
   ],
   [
    10,
    5,
    4,
    0,
    7,
    9,
    6,
    4,
    7,
    8,
    9,
    5,
    7,
    7,
    8,
    5
   ],
   [
    3,
    10,
    2,
    7,
    0,
    5,
    3,
    5,
    4,
    6,
    10,
    9,
    1,
    9,
    3,
    9
   ],
   [
    9,
    4,
    4,
    9,
    5,
    0,
    9,
    8,
    4,
    6,
    3,
    7,
    3,
    5,
    1,
    10
   ],
   [
    8,
    9,
    5,
    6,
    3,
    9,
    0,
    9,
    5,
    5,
    1,
    3,
    10,
    3,
    5,
    1
   ],
   [
    7,
    5,
    2,
    4,
    5,
    8,
    9,
    0,
    4,
    8,
    2,
    2,
    3,
    6,
    2,
    2
   ],
   [
    4,
    7,
    2,
    7,
    4,
    4,
    5,
    4,
    0,
    5,
    1,
    8,
    8,
    6,
    3,
    2
   ],
   [
    1,
    6,
    6,
    8,
    6,
    6,
    5,
    8,
    5,
    0,
    8,
    3,
    6,
    2,
    3,
    9
   ],
   [
    5,
    8,
    4,
    9,
    10,
    3,
    1,
    2,
    1,
    8,
    0,
    2,
    2,
    10,
    7,
    9
   ],
   [
    7,
    9,
    10,
    5,
    9,
    7,
    3,
    2,
    8,
    3,
    2,
    0,
    4,
    4,
    4,
    3
   ],
   [
    5,
    5,
    4,
    7,
    1,
    3,
    10,
    3,
    8,
    6,
    2,
    4,
    0,
    10,
    10,
    3
   ],
   [
    7,
    6,
    5,
    7,
    9,
    5,
    3,
    6,
    6,
    2,
    10,
    4,
    10,
    0,
    4,
    7
   ],
   [
    9,
    7,
    6,
    8,
    3,
    1,
    5,
    2,
    3,
    3,
    7,
    4,
    10,
    4,
    0,
    1
   ],
   [
    1,
    10,
    1,
    5,
    9,
    10,
    1,
    2,
    2,
    9,
    9,
    3,
    3,
    7,
    1,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Knight’s Market",
   "Yarrow Plaza",
   "Quartz District",
   "Beacon Tower",
   "Willowshade Pavilion",
   "Umbra Theater",
   "Silvercrest Observatory",
   "Zenith Arena",
   "Mosaic Plaza",
   "Flare Alley",
   "Ironbridge Crossing",
   "Lighthouse Point",
   "Brass Lantern Tavern",
   "Jasper Marina",
   "Haven Docks"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Brass Lantern Tavern",
     "Umbra Theater",
     "Flare Alley",
     "Zenith Arena",
     "Yarrow Plaza",
     "Beacon Tower",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Quartz District",
     "Knight’s Market",
     "Willowshade Pavilion",
     "Jasper Marina",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 1.93
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Haven Docks",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Quartz District",
     "Yarrow Plaza",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Lighthouse Point",
     "Beacon Tower",
     "Umbra Theater",
     "Flare Alley",
     "Zenith Arena",
     "Brass Lantern Tavern",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Brass Lantern Tavern",
     "Umbra Theater",
     "Flare Alley",
     "Zenith Arena",
     "Yarrow Plaza",
     "Haven Docks",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Lighthouse Point",
     "Beacon Tower",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Quartz District",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Brass Lantern Tavern",
     "Umbra Theater",
     "Flare Alley",
     "Zenith Arena",
     "Yarrow Plaza",
     "Haven Docks",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Lighthouse Point",
     "Beacon Tower",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Quartz District",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Haven Docks",
     "Umbra Theater",
     "Flare Alley",
     "Ironbridge Crossing",
     "Mosaic Plaza",
     "Brass Lantern Tavern",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Lighthouse Point",
     "Beacon Tower",
     "Yarrow Plaza",
     "Quartz District",
     "Knight’s Market",
     "Silvercrest Observatory",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Beacon Tower",
     "Lighthouse Point",
     "Ironbridge Crossing",
     "Brass Lantern Tavern",
     "Jasper Marina",
     "Quartz District",
     "Zenith Arena",
     "Haven Docks",
     "Umbra Theater",
     "Flare Alley",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 63,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Knight’s Market\",\n        \"Yarrow Plaza\",\n        \"Quartz District\",\n        \"Beacon Tower\",\n        \"Willowshade Pavilion\",\n        \"Umbra Theater\",\n        \"Silvercrest Observatory\",\n        \"Zenith Arena\",\n        \"Mosaic Plaza\",\n        \"Flare Alley\",\n        \"Ironbridge Crossing\",\n        \"Lighthouse Point\",\n        \"Brass Lantern Tavern\",\n        \"Jasper Marina\",\n        \"Haven Docks\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages must be dropped off, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Distance Table\": A table that provides the approximate distances (in kilometers) between each pair of delivery points and the warehouse, which is essential for calculating the optimal route.\",\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse while minimizing the total distance traveled.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 13,
  "adj": [
   [
    0,
    1,
    6,
    8,
    2,
    7,
    6,
    8,
    9,
    6,
    7,
    2,
    3,
    6,
    3,
    9
   ],
   [
    1,
    0,
    1,
    4,
    5,
    8,
    9,
    7,
    10,
    2,
    2,
    4,
    3,
    2,
    3,
    5
   ],
   [
    6,
    1,
    0,
    8,
    6,
    10,
    1,
    3,
    4,
    10,
    3,
    8,
    2,
    5,
    2,
    4
   ],
   [
    8,
    4,
    8,
    0,
    3,
    8,
    3,
    3,
    5,
    3,
    6,
    8,
    3,
    7,
    8,
    5
   ],
   [
    2,
    5,
    6,
    3,
    0,
    8,
    1,
    1,
    5,
    5,
    3,
    10,
    7,
    6,
    8,
    9
   ],
   [
    7,
    8,
    10,
    8,
    8,
    0,
    3,
    9,
    4,
    4,
    5,
    6,
    1,
    5,
    5,
    4
   ],
   [
    6,
    9,
    1,
    3,
    1,
    3,
    0,
    10,
    4,
    8,
    9,
    7,
    4,
    1,
    6,
    5
   ],
   [
    8,
    7,
    3,
    3,
    1,
    9,
    10,
    0,
    7,
    1,
    10,
    4,
    7,
    8,
    1,
    4
   ],
   [
    9,
    10,
    4,
    5,
    5,
    4,
    4,
    7,
    0,
    10,
    10,
    5,
    3,
    4,
    6,
    10
   ],
   [
    6,
    2,
    10,
    3,
    5,
    4,
    8,
    1,
    10,
    0,
    8,
    7,
    7,
    6,
    5,
    9
   ],
   [
    7,
    2,
    3,
    6,
    3,
    5,
    9,
    10,
    10,
    8,
    0,
    8,
    8,
    9,
    2,
    6
   ],
   [
    2,
    4,
    8,
    8,
    10,
    6,
    7,
    4,
    5,
    7,
    8,
    0,
    9,
    3,
    1,
    3
   ],
   [
    3,
    3,
    2,
    3,
    7,
    1,
    4,
    7,
    3,
    7,
    8,
    9,
    0,
    8,
    10,
    2
   ],
   [
    6,
    2,
    5,
    7,
    6,
    5,
    1,
    8,
    4,
    6,
    9,
    3,
    8,
    0,
    3,
    10
   ],
   [
    3,
    3,
    2,
    8,
    8,
    5,
    6,
    1,
    6,
    5,
    2,
    1,
    10,
    3,
    0,
    7
   ],
   [
    9,
    5,
    4,
    5,
    9,
    4,
    5,
    4,
    10,
    9,
    6,
    3,
    2,
    10,
    7,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Primrose Boulevard",
   "Granite Plaza",
   "Shadowbridge Arcade",
   "Zenith Arena",
   "Rosewood Hall",
   "Gilded Archway",
   "Beacon Tower",
   "Lighthouse Point",
   "Willowshade Pavilion",
   "Cobalt Market",
   "Jasper Marina",
   "Riverstone Wharf",
   "Quartz District",
   "Jade Fountain",
   "Lunar Pier"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Granite Plaza",
     "Gilded Archway",
     "Quartz District",
     "Lighthouse Point",
     "Rosewood Hall",
     "Riverstone Wharf",
     "Lunar Pier",
     "Shadowbridge Arcade",
     "Willowshade Pavilion",
     "Beacon Tower",
     "Zenith Arena",
     "Cobalt Market",
     "Jade Fountain",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 2.03
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Cobalt Market",
     "Granite Plaza",
     "Riverstone Wharf",
     "Lighthouse Point",
     "Rosewood Hall",
     "Lunar Pier",
     "Jasper Marina",
     "Jade Fountain",
     "Beacon Tower",
     "Willowshade Pavilion",
     "Zenith Arena",
     "Shadowbridge Arcade",
     "Gilded Archway",
     "Quartz District",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Granite Plaza",
     "Gilded Archway",
     "Zenith Arena",
     "Beacon Tower",
     "Willowshade Pavilion",
     "Shadowbridge Arcade",
     "Riverstone Wharf",
     "Rosewood Hall",
     "Lighthouse Point",
     "Quartz District",
     "Jasper Marina",
     "Jade Fountain",
     "Cobalt Market",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Granite Plaza",
     "Gilded Archway",
     "Zenith Arena",
     "Beacon Tower",
     "Willowshade Pavilion",
     "Shadowbridge Arcade",
     "Riverstone Wharf",
     "Rosewood Hall",
     "Lighthouse Point",
     "Quartz District",
     "Jasper Marina",
     "Jade Fountain",
     "Cobalt Market",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Willowshade Pavilion",
     "Shadowbridge Arcade",
     "Zenith Arena",
     "Cobalt Market",
     "Rosewood Hall",
     "Lighthouse Point",
     "Gilded Archway",
     "Quartz District",
     "Jade Fountain",
     "Beacon Tower",
     "Granite Plaza",
     "Riverstone Wharf",
     "Lunar Pier",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Rosewood Hall",
     "Quartz District",
     "Gilded Archway",
     "Zenith Arena",
     "Willowshade Pavilion",
     "Beacon Tower",
     "Shadowbridge Arcade",
     "Riverstone Wharf",
     "Lunar Pier",
     "Cobalt Market",
     "Lighthouse Point",
     "Primrose Boulevard",
     "Granite Plaza",
     "Jade Fountain",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 60,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The company is tasked with optimizing delivery routes across a busy urban area, involving 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts and ends at a central warehouse. This optimization is crucial for saving on fuel, reducing delivery times, and enhancing overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Primrose Boulevard\",\n        \"Granite Plaza\",\n        \"Shadowbridge Arcade\",\n        \"Zenith Arena\",\n        \"Rosewood Hall\",\n        \"Gilded Archway\",\n        \"Beacon Tower\",\n        \"Lighthouse Point\",\n        \"Willowshade Pavilion\",\n        \"Cobalt Market\",\n        \"Jasper Marina\",\n        \"Riverstone Wharf\",\n        \"Quartz District\",\n        \"Jade Fountain\",\n        \"Lunar Pier\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and ends their route.\n        \"Delivery Points\": The various locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse, minimizing the total distance traveled.\n        \"Distance Table\": A structured representation of the travel distances between each pair of delivery points, which is essential for calculating the optimal route.\n        \"Urban Area\": A densely populated region characterized by significant human-made structures and infrastructure, impacting travel distances and delivery logistics.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 14,
  "adj": [
   [
    0,
    8,
    2,
    3,
    4,
    1,
    4,
    8,
    1,
    7,
    1,
    7,
    2,
    4,
    1,
    10
   ],
   [
    8,
    0,
    2,
    2,
    8,
    8,
    9,
    7,
    2,
    2,
    2,
    6,
    6,
    8,
    8,
    4
   ],
   [
    2,
    2,
    0,
    4,
    2,
    10,
    1,
    3,
    4,
    10,
    6,
    2,
    5,
    2,
    8,
    9
   ],
   [
    3,
    2,
    4,
    0,
    1,
    6,
    8,
    2,
    7,
    3,
    4,
    8,
    5,
    3,
    4,
    1
   ],
   [
    4,
    8,
    2,
    1,
    0,
    2,
    9,
    1,
    7,
    7,
    8,
    1,
    9,
    9,
    8,
    10
   ],
   [
    1,
    8,
    10,
    6,
    2,
    0,
    7,
    3,
    4,
    2,
    2,
    5,
    8,
    4,
    5,
    6
   ],
   [
    4,
    9,
    1,
    8,
    9,
    7,
    0,
    3,
    3,
    1,
    2,
    4,
    3,
    8,
    10,
    3
   ],
   [
    8,
    7,
    3,
    2,
    1,
    3,
    3,
    0,
    4,
    6,
    10,
    9,
    6,
    3,
    9,
    5
   ],
   [
    1,
    2,
    4,
    7,
    7,
    4,
    3,
    4,
    0,
    4,
    1,
    3,
    6,
    10,
    2,
    10
   ],
   [
    7,
    2,
    10,
    3,
    7,
    2,
    1,
    6,
    4,
    0,
    10,
    4,
    7,
    1,
    3,
    2
   ],
   [
    1,
    2,
    6,
    4,
    8,
    2,
    2,
    10,
    1,
    10,
    0,
    3,
    10,
    8,
    5,
    8
   ],
   [
    7,
    6,
    2,
    8,
    1,
    5,
    4,
    9,
    3,
    4,
    3,
    0,
    9,
    10,
    5,
    5
   ],
   [
    2,
    6,
    5,
    5,
    9,
    8,
    3,
    6,
    6,
    7,
    10,
    9,
    0,
    8,
    5,
    5
   ],
   [
    4,
    8,
    2,
    3,
    9,
    4,
    8,
    3,
    10,
    1,
    8,
    10,
    8,
    0,
    2,
    2
   ],
   [
    1,
    8,
    8,
    4,
    8,
    5,
    10,
    9,
    2,
    3,
    5,
    5,
    5,
    2,
    0,
    9
   ],
   [
    10,
    4,
    9,
    1,
    10,
    6,
    3,
    5,
    10,
    2,
    8,
    5,
    5,
    2,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Granite Plaza",
   "Opal Theater",
   "Lunar Pier",
   "Willowshade Pavilion",
   "Flare Alley",
   "Brass Lantern Tavern",
   "Jasper Marina",
   "Rosewood Hall",
   "Sapphire Arena",
   "Union Square Market",
   "Duskwood Park",
   "Ivory Spire Cathedral",
   "Jade Fountain",
   "Gilded Archway",
   "Beacon Tower"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Sapphire Arena",
     "Granite Plaza",
     "Union Square Market",
     "Rosewood Hall",
     "Gilded Archway",
     "Jade Fountain",
     "Beacon Tower",
     "Lunar Pier",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Duskwood Park",
     "Opal Theater",
     "Brass Lantern Tavern",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 1.95
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Opal Theater",
     "Brass Lantern Tavern",
     "Sapphire Arena",
     "Jade Fountain",
     "Gilded Archway",
     "Union Square Market",
     "Rosewood Hall",
     "Granite Plaza",
     "Lunar Pier",
     "Beacon Tower",
     "Willowshade Pavilion",
     "Duskwood Park",
     "Jasper Marina",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 47,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Willowshade Pavilion",
     "Lunar Pier",
     "Beacon Tower",
     "Sapphire Arena",
     "Brass Lantern Tavern",
     "Opal Theater",
     "Granite Plaza",
     "Rosewood Hall",
     "Union Square Market",
     "Duskwood Park",
     "Gilded Archway",
     "Jade Fountain",
     "Jasper Marina",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Willowshade Pavilion",
     "Lunar Pier",
     "Beacon Tower",
     "Sapphire Arena",
     "Brass Lantern Tavern",
     "Opal Theater",
     "Granite Plaza",
     "Rosewood Hall",
     "Union Square Market",
     "Duskwood Park",
     "Gilded Archway",
     "Jade Fountain",
     "Jasper Marina",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Opal Theater",
     "Jade Fountain",
     "Gilded Archway",
     "Rosewood Hall",
     "Union Square Market",
     "Granite Plaza",
     "Lunar Pier",
     "Jasper Marina",
     "Flare Alley",
     "Willowshade Pavilion",
     "Duskwood Park",
     "Beacon Tower",
     "Sapphire Arena",
     "Brass Lantern Tavern",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Jade Fountain",
     "Lunar Pier",
     "Opal Theater",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Duskwood Park",
     "Gilded Archway",
     "Rosewood Hall",
     "Sapphire Arena",
     "Granite Plaza",
     "Ivory Spire Cathedral",
     "Beacon Tower",
     "Union Square Market",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 55,
    "cost_time": 1.43
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse. The delivery points are located in various parts of the city, each representing different types of businesses or residential areas with unique delivery requirements. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Granite Plaza\",\n        \"Opal Theater\",\n        \"Lunar Pier\",\n        \"Willowshade Pavilion\",\n        \"Flare Alley\",\n        \"Brass Lantern Tavern\",\n        \"Jasper Marina\",\n        \"Rosewood Hall\",\n        \"Sapphire Arena\",\n        \"Union Square Market\",\n        \"Duskwood Park\",\n        \"Ivory Spire Cathedral\",\n        \"Jade Fountain\",\n        \"Gilded Archway\",\n        \"Beacon Tower\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each with specific characteristics and requirements.\n        \"Distance Table\": A matrix showing the approximate distances (in kilometers) between each pair of delivery points and the warehouse, which is essential for calculating the optimal route.\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the starting point, minimizing the total distance traveled.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 15,
  "adj": [
   [
    0,
    5,
    10,
    5,
    8,
    5,
    9,
    6,
    10,
    3,
    1,
    5,
    3,
    8,
    4,
    3
   ],
   [
    5,
    0,
    10,
    9,
    3,
    7,
    4,
    3,
    10,
    9,
    6,
    6,
    4,
    5,
    9,
    4
   ],
   [
    10,
    10,
    0,
    5,
    9,
    8,
    4,
    10,
    2,
    8,
    9,
    5,
    2,
    8,
    6,
    5
   ],
   [
    5,
    9,
    5,
    0,
    8,
    3,
    1,
    4,
    10,
    8,
    9,
    5,
    3,
    1,
    7,
    6
   ],
   [
    8,
    3,
    9,
    8,
    0,
    7,
    9,
    9,
    4,
    2,
    1,
    2,
    7,
    2,
    2,
    3
   ],
   [
    5,
    7,
    8,
    3,
    7,
    0,
    9,
    9,
    1,
    10,
    5,
    9,
    9,
    9,
    1,
    10
   ],
   [
    9,
    4,
    4,
    1,
    9,
    9,
    0,
    10,
    10,
    1,
    1,
    1,
    2,
    7,
    4,
    5
   ],
   [
    6,
    3,
    10,
    4,
    9,
    9,
    10,
    0,
    2,
    4,
    1,
    2,
    6,
    10,
    7,
    8
   ],
   [
    10,
    10,
    2,
    10,
    4,
    1,
    10,
    2,
    0,
    2,
    4,
    2,
    9,
    1,
    5,
    5
   ],
   [
    3,
    9,
    8,
    8,
    2,
    10,
    1,
    4,
    2,
    0,
    9,
    1,
    2,
    7,
    4,
    2
   ],
   [
    1,
    6,
    9,
    9,
    1,
    5,
    1,
    1,
    4,
    9,
    0,
    9,
    8,
    4,
    10,
    4
   ],
   [
    5,
    6,
    5,
    5,
    2,
    9,
    1,
    2,
    2,
    1,
    9,
    0,
    2,
    6,
    9,
    4
   ],
   [
    3,
    4,
    2,
    3,
    7,
    9,
    2,
    6,
    9,
    2,
    8,
    2,
    0,
    6,
    4,
    4
   ],
   [
    8,
    5,
    8,
    1,
    2,
    9,
    7,
    10,
    1,
    7,
    4,
    6,
    6,
    0,
    1,
    10
   ],
   [
    4,
    9,
    6,
    7,
    2,
    1,
    4,
    7,
    5,
    4,
    10,
    9,
    4,
    1,
    0,
    8
   ],
   [
    3,
    4,
    5,
    6,
    3,
    10,
    5,
    8,
    5,
    2,
    4,
    4,
    4,
    10,
    8,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Northwind Tower",
   "Moonlit Promenade",
   "Echo Station",
   "Flint Forge Quarter",
   "Westgate Station",
   "Willowshade Pavilion",
   "Copper Clock Square",
   "Umbra Theater",
   "Pennywhistle Arcade",
   "Oakshade Library",
   "Opal Theater",
   "Maplewood Conservatory",
   "Jasper Marina",
   "Skyline Gardens",
   "Nimbus Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Flint Forge Quarter",
     "Northwind Tower",
     "Copper Clock Square",
     "Opal Theater",
     "Willowshade Pavilion",
     "Echo Station",
     "Jasper Marina",
     "Skyline Gardens",
     "Westgate Station",
     "Umbra Theater",
     "Moonlit Promenade",
     "Maplewood Conservatory",
     "Pennywhistle Arcade",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 2.03
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Pennywhistle Arcade",
     "Willowshade Pavilion",
     "Opal Theater",
     "Umbra Theater",
     "Westgate Station",
     "Skyline Gardens",
     "Maplewood Conservatory",
     "Moonlit Promenade",
     "Jasper Marina",
     "Echo Station",
     "Oakshade Library",
     "Copper Clock Square",
     "Northwind Tower",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Willowshade Pavilion",
     "Echo Station",
     "Jasper Marina",
     "Umbra Theater",
     "Westgate Station",
     "Skyline Gardens",
     "Maplewood Conservatory",
     "Moonlit Promenade",
     "Opal Theater",
     "Copper Clock Square",
     "Northwind Tower",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Willowshade Pavilion",
     "Echo Station",
     "Jasper Marina",
     "Umbra Theater",
     "Westgate Station",
     "Skyline Gardens",
     "Maplewood Conservatory",
     "Moonlit Promenade",
     "Opal Theater",
     "Copper Clock Square",
     "Northwind Tower",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Nimbus Plaza",
     "Pennywhistle Arcade",
     "Opal Theater",
     "Copper Clock Square",
     "Northwind Tower",
     "Flint Forge Quarter",
     "Skyline Gardens",
     "Westgate Station",
     "Umbra Theater",
     "Jasper Marina",
     "Echo Station",
     "Willowshade Pavilion",
     "Moonlit Promenade",
     "Maplewood Conservatory",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Nimbus Plaza",
     "Willowshade Pavilion",
     "Pennywhistle Arcade",
     "Flint Forge Quarter",
     "Oakshade Library",
     "Maplewood Conservatory",
     "Moonlit Promenade",
     "Westgate Station",
     "Umbra Theater",
     "Skyline Gardens",
     "Jasper Marina",
     "Opal Theater",
     "Copper Clock Square",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 61,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at the central warehouse. The goal is to minimize the total distance traveled to improve efficiency, reduce fuel costs, and decrease delivery times.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Northwind Tower\",\n        \"Moonlit Promenade\",\n        \"Echo Station\",\n        \"Flint Forge Quarter\",\n        \"Westgate Station\",\n        \"Willowshade Pavilion\",\n        \"Copper Clock Square\",\n        \"Umbra Theater\",\n        \"Pennywhistle Arcade\",\n        \"Oakshade Library\",\n        \"Opal Theater\",\n        \"Maplewood Conservatory\",\n        \"Jasper Marina\",\n        \"Skyline Gardens\",\n        \"Nimbus Plaza\"\n    ],\n    \"definitions\": {\n        \"delivery point\": \"A specific location where packages need to be delivered.\",\n        \"route optimization\": \"The process of determining the most efficient path to take in order to minimize distance or time.\",\n        \"urban area\": \"A geographic area characterized by high population density and vast human-built features in comparison to areas surrounding it.\",\n        \"total distance\": \"The cumulative distance traveled during the delivery route, including the return to the starting point.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 16,
  "adj": [
   [
    0,
    2,
    8,
    9,
    3,
    1,
    5,
    9,
    5,
    9,
    7,
    6,
    5,
    1,
    7,
    5
   ],
   [
    2,
    0,
    8,
    10,
    1,
    7,
    6,
    3,
    5,
    9,
    4,
    8,
    3,
    10,
    10,
    1
   ],
   [
    8,
    8,
    0,
    1,
    10,
    10,
    3,
    7,
    5,
    2,
    10,
    9,
    5,
    2,
    4,
    3
   ],
   [
    9,
    10,
    1,
    0,
    9,
    2,
    5,
    4,
    9,
    3,
    5,
    8,
    6,
    6,
    7,
    7
   ],
   [
    3,
    1,
    10,
    9,
    0,
    8,
    6,
    5,
    4,
    5,
    5,
    4,
    10,
    7,
    4,
    5
   ],
   [
    1,
    7,
    10,
    2,
    8,
    0,
    3,
    10,
    2,
    3,
    8,
    10,
    2,
    4,
    8,
    7
   ],
   [
    5,
    6,
    3,
    5,
    6,
    3,
    0,
    3,
    10,
    6,
    1,
    3,
    7,
    6,
    5,
    6
   ],
   [
    9,
    3,
    7,
    4,
    5,
    10,
    3,
    0,
    8,
    7,
    7,
    10,
    7,
    6,
    1,
    8
   ],
   [
    5,
    5,
    5,
    9,
    4,
    2,
    10,
    8,
    0,
    5,
    4,
    4,
    8,
    2,
    5,
    9
   ],
   [
    9,
    9,
    2,
    3,
    5,
    3,
    6,
    7,
    5,
    0,
    4,
    5,
    5,
    7,
    7,
    6
   ],
   [
    7,
    4,
    10,
    5,
    5,
    8,
    1,
    7,
    4,
    4,
    0,
    10,
    9,
    8,
    7,
    1
   ],
   [
    6,
    8,
    9,
    8,
    4,
    10,
    3,
    10,
    4,
    5,
    10,
    0,
    1,
    10,
    9,
    1
   ],
   [
    5,
    3,
    5,
    6,
    10,
    2,
    7,
    7,
    8,
    5,
    9,
    1,
    0,
    5,
    5,
    5
   ],
   [
    1,
    10,
    2,
    6,
    7,
    4,
    6,
    6,
    2,
    7,
    8,
    10,
    5,
    0,
    10,
    10
   ],
   [
    7,
    10,
    4,
    7,
    4,
    8,
    5,
    1,
    5,
    7,
    7,
    9,
    5,
    10,
    0,
    5
   ],
   [
    5,
    1,
    3,
    7,
    5,
    7,
    6,
    8,
    9,
    6,
    1,
    1,
    5,
    10,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Mosaic Plaza",
   "Sapphire Arena",
   "Cobalt Market",
   "Azure Gardens",
   "Granite Plaza",
   "Velvet Corner",
   "Horizon Mall",
   "Haven Docks",
   "Copper Clock Square",
   "Duskwood Park",
   "King’s Row",
   "Dragon’s Gate",
   "Quartz District",
   "Rosewood Hall",
   "Zenith Arena"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Azure Gardens",
     "Rosewood Hall",
     "Horizon Mall",
     "Velvet Corner",
     "Duskwood Park",
     "Zenith Arena",
     "King’s Row",
     "Dragon’s Gate",
     "Granite Plaza",
     "Cobalt Market",
     "Sapphire Arena",
     "Copper Clock Square",
     "Haven Docks",
     "Quartz District",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 1.95
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Mosaic Plaza",
     "Horizon Mall",
     "Rosewood Hall",
     "Velvet Corner",
     "Duskwood Park",
     "Zenith Arena",
     "Dragon’s Gate",
     "King’s Row",
     "Quartz District",
     "Sapphire Arena",
     "Cobalt Market",
     "Copper Clock Square",
     "Haven Docks",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Cobalt Market",
     "Sapphire Arena",
     "Copper Clock Square",
     "Duskwood Park",
     "Velvet Corner",
     "Horizon Mall",
     "Rosewood Hall",
     "Azure Gardens",
     "Mosaic Plaza",
     "Zenith Arena",
     "King’s Row",
     "Dragon’s Gate",
     "Quartz District",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Cobalt Market",
     "Sapphire Arena",
     "Copper Clock Square",
     "Duskwood Park",
     "Velvet Corner",
     "Horizon Mall",
     "Rosewood Hall",
     "Azure Gardens",
     "Mosaic Plaza",
     "Zenith Arena",
     "King’s Row",
     "Dragon’s Gate",
     "Quartz District",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Sapphire Arena",
     "Cobalt Market",
     "Copper Clock Square",
     "Granite Plaza",
     "Dragon’s Gate",
     "King’s Row",
     "Zenith Arena",
     "Duskwood Park",
     "Velvet Corner",
     "Horizon Mall",
     "Rosewood Hall",
     "Haven Docks",
     "Azure Gardens",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Mosaic Plaza",
     "Dragon’s Gate",
     "Horizon Mall",
     "Copper Clock Square",
     "Granite Plaza",
     "Haven Docks",
     "Quartz District",
     "Velvet Corner",
     "Duskwood Park",
     "King’s Row",
     "Zenith Arena",
     "Sapphire Arena",
     "Cobalt Market",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 64,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points scattered throughout the city, and the delivery driver must start from a central warehouse, drop off packages at each location, and return to the warehouse. The goal is to minimize the total distance traveled, which will help save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Mosaic Plaza\",\n        \"Sapphire Arena\",\n        \"Cobalt Market\",\n        \"Azure Gardens\",\n        \"Granite Plaza\",\n        \"Velvet Corner\",\n        \"Horizon Mall\",\n        \"Haven Docks\",\n        \"Copper Clock Square\",\n        \"Duskwood Park\",\n        \"King’s Row\",\n        \"Dragon’s Gate\",\n        \"Quartz District\",\n        \"Rosewood Hall\",\n        \"Zenith Arena\"\n    ],\n    \"definitions\": {\n        \"delivery points\": \"Locations where packages need to be dropped off.\",\n        \"central warehouse\": \"The starting point for the delivery driver, located near the city center.\",\n        \"urban area\": \"A densely populated region with various businesses and residential areas.\",\n        \"efficient route\": \"The path taken by the delivery driver that minimizes the total distance traveled.\",\n        \"total distance\": \"The sum of all distances traveled during the delivery route.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 17,
  "adj": [
   [
    0,
    6,
    5,
    3,
    6,
    10,
    9,
    5,
    6,
    6,
    1,
    4,
    8,
    4,
    2,
    7
   ],
   [
    6,
    0,
    10,
    8,
    1,
    4,
    1,
    1,
    3,
    2,
    5,
    9,
    10,
    7,
    10,
    5
   ],
   [
    5,
    10,
    0,
    4,
    1,
    2,
    5,
    9,
    1,
    4,
    4,
    3,
    9,
    1,
    2,
    7
   ],
   [
    3,
    8,
    4,
    0,
    10,
    1,
    9,
    9,
    4,
    4,
    2,
    2,
    5,
    8,
    6,
    5
   ],
   [
    6,
    1,
    1,
    10,
    0,
    2,
    8,
    9,
    10,
    2,
    9,
    2,
    4,
    1,
    4,
    3
   ],
   [
    10,
    4,
    2,
    1,
    2,
    0,
    10,
    3,
    9,
    9,
    6,
    2,
    4,
    1,
    2,
    10
   ],
   [
    9,
    1,
    5,
    9,
    8,
    10,
    0,
    4,
    1,
    6,
    5,
    8,
    8,
    9,
    9,
    4
   ],
   [
    5,
    1,
    9,
    9,
    9,
    3,
    4,
    0,
    8,
    5,
    6,
    7,
    5,
    6,
    4,
    8
   ],
   [
    6,
    3,
    1,
    4,
    10,
    9,
    1,
    8,
    0,
    1,
    2,
    9,
    9,
    7,
    10,
    10
   ],
   [
    6,
    2,
    4,
    4,
    2,
    9,
    6,
    5,
    1,
    0,
    10,
    7,
    7,
    2,
    2,
    6
   ],
   [
    1,
    5,
    4,
    2,
    9,
    6,
    5,
    6,
    2,
    10,
    0,
    10,
    1,
    8,
    3,
    8
   ],
   [
    4,
    9,
    3,
    2,
    2,
    2,
    8,
    7,
    9,
    7,
    10,
    0,
    10,
    10,
    7,
    9
   ],
   [
    8,
    10,
    9,
    5,
    4,
    4,
    8,
    5,
    9,
    7,
    1,
    10,
    0,
    6,
    6,
    8
   ],
   [
    4,
    7,
    1,
    8,
    1,
    1,
    9,
    6,
    7,
    2,
    8,
    10,
    6,
    0,
    5,
    8
   ],
   [
    2,
    10,
    2,
    6,
    4,
    2,
    9,
    4,
    10,
    2,
    3,
    7,
    6,
    5,
    0,
    4
   ],
   [
    7,
    5,
    7,
    5,
    3,
    10,
    4,
    8,
    10,
    6,
    8,
    9,
    8,
    8,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Haven Docks",
   "Flare Alley",
   "Primrose Boulevard",
   "Dragon’s Gate",
   "Jasper Marina",
   "Ivory Spire Cathedral",
   "Willowshade Pavilion",
   "Temple Square",
   "Northwind Tower",
   "Gilded Archway",
   "Shadowbridge Arcade",
   "Knight’s Market",
   "Mosaic Plaza",
   "Quartz District",
   "Union Square Market"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Knight’s Market",
     "Willowshade Pavilion",
     "Haven Docks",
     "Ivory Spire Cathedral",
     "Union Square Market",
     "Dragon’s Gate",
     "Shadowbridge Arcade",
     "Primrose Boulevard",
     "Jasper Marina",
     "Mosaic Plaza",
     "Flare Alley",
     "Temple Square",
     "Northwind Tower",
     "Quartz District",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 1.98
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Flare Alley",
     "Mosaic Plaza",
     "Jasper Marina",
     "Primrose Boulevard",
     "Shadowbridge Arcade",
     "Dragon’s Gate",
     "Union Square Market",
     "Ivory Spire Cathedral",
     "Haven Docks",
     "Northwind Tower",
     "Temple Square",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Gilded Archway",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Knight’s Market",
     "Dragon’s Gate",
     "Haven Docks",
     "Ivory Spire Cathedral",
     "Temple Square",
     "Flare Alley",
     "Mosaic Plaza",
     "Jasper Marina",
     "Primrose Boulevard",
     "Shadowbridge Arcade",
     "Willowshade Pavilion",
     "Quartz District",
     "Northwind Tower",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Knight’s Market",
     "Dragon’s Gate",
     "Haven Docks",
     "Ivory Spire Cathedral",
     "Temple Square",
     "Flare Alley",
     "Mosaic Plaza",
     "Jasper Marina",
     "Primrose Boulevard",
     "Shadowbridge Arcade",
     "Willowshade Pavilion",
     "Quartz District",
     "Northwind Tower",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Haven Docks",
     "Northwind Tower",
     "Quartz District",
     "Gilded Archway",
     "Knight’s Market",
     "Dragon’s Gate",
     "Union Square Market",
     "Ivory Spire Cathedral",
     "Temple Square",
     "Flare Alley",
     "Shadowbridge Arcade",
     "Primrose Boulevard",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Knight’s Market",
     "Primrose Boulevard",
     "Jasper Marina",
     "Shadowbridge Arcade",
     "Flare Alley",
     "Gilded Archway",
     "Haven Docks",
     "Mosaic Plaza",
     "Northwind Tower",
     "Temple Square",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Union Square Market",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 60,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points scattered throughout the city, and the delivery driver must start from a central warehouse, drop off packages at each location, and return to the warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Haven Docks\",\n        \"Flare Alley\",\n        \"Primrose Boulevard\",\n        \"Dragon’s Gate\",\n        \"Jasper Marina\",\n        \"Ivory Spire Cathedral\",\n        \"Willowshade Pavilion\",\n        \"Temple Square\",\n        \"Northwind Tower\",\n        \"Gilded Archway\",\n        \"Shadowbridge Arcade\",\n        \"Knight’s Market\",\n        \"Mosaic Plaza\",\n        \"Quartz District\",\n        \"Union Square Market\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Total Distance\": The cumulative distance traveled by the delivery driver during the route, which needs to be minimized.\",\n        \"Route Optimization\": The process of determining the most efficient path that allows the driver to visit each delivery point exactly once and return to the starting point (warehouse).\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 18,
  "adj": [
   [
    0,
    8,
    8,
    4,
    3,
    3,
    7,
    5,
    8,
    3,
    3,
    7,
    3,
    5,
    7,
    9
   ],
   [
    8,
    0,
    8,
    5,
    9,
    8,
    1,
    2,
    9,
    1,
    10,
    6,
    6,
    2,
    5,
    7
   ],
   [
    8,
    8,
    0,
    10,
    8,
    8,
    6,
    10,
    8,
    6,
    2,
    1,
    9,
    1,
    7,
    3
   ],
   [
    4,
    5,
    10,
    0,
    9,
    7,
    5,
    6,
    2,
    4,
    9,
    6,
    5,
    10,
    3,
    4
   ],
   [
    3,
    9,
    8,
    9,
    0,
    1,
    3,
    8,
    6,
    6,
    1,
    5,
    10,
    3,
    6,
    1
   ],
   [
    3,
    8,
    8,
    7,
    1,
    0,
    4,
    6,
    3,
    1,
    2,
    4,
    5,
    8,
    9,
    8
   ],
   [
    7,
    1,
    6,
    5,
    3,
    4,
    0,
    8,
    1,
    7,
    2,
    3,
    2,
    3,
    8,
    7
   ],
   [
    5,
    2,
    10,
    6,
    8,
    6,
    8,
    0,
    4,
    10,
    1,
    8,
    8,
    8,
    6,
    5
   ],
   [
    8,
    9,
    8,
    2,
    6,
    3,
    1,
    4,
    0,
    10,
    8,
    7,
    5,
    9,
    2,
    4
   ],
   [
    3,
    1,
    6,
    4,
    6,
    1,
    7,
    10,
    10,
    0,
    10,
    5,
    9,
    5,
    6,
    10
   ],
   [
    3,
    10,
    2,
    9,
    1,
    2,
    2,
    1,
    8,
    10,
    0,
    10,
    4,
    6,
    2,
    8
   ],
   [
    7,
    6,
    1,
    6,
    5,
    4,
    3,
    8,
    7,
    5,
    10,
    0,
    5,
    10,
    5,
    3
   ],
   [
    3,
    6,
    9,
    5,
    10,
    5,
    2,
    8,
    5,
    9,
    4,
    5,
    0,
    10,
    8,
    2
   ],
   [
    5,
    2,
    1,
    10,
    3,
    8,
    3,
    8,
    9,
    5,
    6,
    10,
    10,
    0,
    5,
    3
   ],
   [
    7,
    5,
    7,
    3,
    6,
    9,
    8,
    6,
    2,
    6,
    2,
    5,
    8,
    5,
    0,
    4
   ],
   [
    9,
    7,
    3,
    4,
    1,
    8,
    7,
    5,
    4,
    10,
    8,
    3,
    2,
    3,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Lunar Pier",
   "Jade Fountain",
   "Knight’s Market",
   "Quartz District",
   "Westgate Station",
   "Shadowbridge Arcade",
   "Brass Lantern Tavern",
   "Gilded Archway",
   "Dragon’s Gate",
   "Moonlit Promenade",
   "Ivory Spire Cathedral",
   "Union Square Market",
   "Lighthouse Point",
   "King’s Row",
   "Northwind Tower"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Westgate Station",
     "Quartz District",
     "Northwind Tower",
     "Ivory Spire Cathedral",
     "Jade Fountain",
     "Lighthouse Point",
     "Lunar Pier",
     "Brass Lantern Tavern",
     "Moonlit Promenade",
     "King’s Row",
     "Knight’s Market",
     "Gilded Archway",
     "Shadowbridge Arcade",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 2.04
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Shadowbridge Arcade",
     "Gilded Archway",
     "King’s Row",
     "Knight’s Market",
     "Lunar Pier",
     "Brass Lantern Tavern",
     "Moonlit Promenade",
     "Quartz District",
     "Northwind Tower",
     "Ivory Spire Cathedral",
     "Jade Fountain",
     "Lighthouse Point",
     "Dragon’s Gate",
     "Westgate Station",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Westgate Station",
     "Dragon’s Gate",
     "Lunar Pier",
     "Shadowbridge Arcade",
     "Gilded Archway",
     "Knight’s Market",
     "King’s Row",
     "Moonlit Promenade",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Union Square Market",
     "Ivory Spire Cathedral",
     "Jade Fountain",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Westgate Station",
     "Dragon’s Gate",
     "Lunar Pier",
     "Shadowbridge Arcade",
     "Gilded Archway",
     "Knight’s Market",
     "King’s Row",
     "Moonlit Promenade",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Union Square Market",
     "Ivory Spire Cathedral",
     "Jade Fountain",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Dragon’s Gate",
     "Westgate Station",
     "Quartz District",
     "Shadowbridge Arcade",
     "Gilded Archway",
     "King’s Row",
     "Moonlit Promenade",
     "Brass Lantern Tavern",
     "Lunar Pier",
     "Lighthouse Point",
     "Jade Fountain",
     "Ivory Spire Cathedral",
     "Northwind Tower",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Brass Lantern Tavern",
     "Dragon’s Gate",
     "Jade Fountain",
     "Moonlit Promenade",
     "Westgate Station",
     "Quartz District",
     "Lighthouse Point",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Shadowbridge Arcade",
     "Gilded Archway",
     "Knight’s Market",
     "Northwind Tower",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 59,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse while visiting each delivery point exactly once. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Lunar Pier\",\n        \"Jade Fountain\",\n        \"Knight’s Market\",\n        \"Quartz District\",\n        \"Westgate Station\",\n        \"Shadowbridge Arcade\",\n        \"Brass Lantern Tavern\",\n        \"Gilded Archway\",\n        \"Dragon’s Gate\",\n        \"Moonlit Promenade\",\n        \"Ivory Spire Cathedral\",\n        \"Union Square Market\",\n        \"Lighthouse Point\",\n        \"King’s Row\",\n        \"Northwind Tower\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Total Distance\": The sum of distances traveled by the delivery driver during the route, which needs to be minimized.\",\n        \"Route Optimization\": The process of finding the most efficient path that allows the driver to visit all delivery points exactly once and return to the starting point, in this case, the warehouse.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 19,
  "adj": [
   [
    0,
    4,
    3,
    1,
    5,
    2,
    5,
    5,
    8,
    5,
    10,
    4,
    2,
    4,
    1,
    6
   ],
   [
    4,
    0,
    5,
    8,
    8,
    5,
    5,
    4,
    8,
    2,
    6,
    3,
    2,
    10,
    7,
    10
   ],
   [
    3,
    5,
    0,
    3,
    10,
    4,
    1,
    8,
    1,
    6,
    4,
    1,
    1,
    3,
    5,
    10
   ],
   [
    1,
    8,
    3,
    0,
    9,
    4,
    1,
    6,
    3,
    4,
    10,
    1,
    1,
    7,
    5,
    9
   ],
   [
    5,
    8,
    10,
    9,
    0,
    7,
    1,
    1,
    8,
    2,
    3,
    4,
    4,
    9,
    2,
    9
   ],
   [
    2,
    5,
    4,
    4,
    7,
    0,
    6,
    3,
    5,
    6,
    6,
    5,
    5,
    3,
    1,
    2
   ],
   [
    5,
    5,
    1,
    1,
    1,
    6,
    0,
    4,
    9,
    8,
    8,
    4,
    1,
    2,
    3,
    8
   ],
   [
    5,
    4,
    8,
    6,
    1,
    3,
    4,
    0,
    1,
    2,
    7,
    9,
    9,
    7,
    10,
    4
   ],
   [
    8,
    8,
    1,
    3,
    8,
    5,
    9,
    1,
    0,
    7,
    7,
    1,
    5,
    5,
    8,
    10
   ],
   [
    5,
    2,
    6,
    4,
    2,
    6,
    8,
    2,
    7,
    0,
    4,
    2,
    3,
    8,
    4,
    10
   ],
   [
    10,
    6,
    4,
    10,
    3,
    6,
    8,
    7,
    7,
    4,
    0,
    10,
    3,
    4,
    10,
    9
   ],
   [
    4,
    3,
    1,
    1,
    4,
    5,
    4,
    9,
    1,
    2,
    10,
    0,
    8,
    1,
    8,
    6
   ],
   [
    2,
    2,
    1,
    1,
    4,
    5,
    1,
    9,
    5,
    3,
    3,
    8,
    0,
    4,
    3,
    2
   ],
   [
    4,
    10,
    3,
    7,
    9,
    3,
    2,
    7,
    5,
    8,
    4,
    1,
    4,
    0,
    9,
    10
   ],
   [
    1,
    7,
    5,
    5,
    2,
    1,
    3,
    10,
    8,
    4,
    10,
    8,
    3,
    9,
    0,
    3
   ],
   [
    6,
    10,
    10,
    9,
    9,
    2,
    8,
    4,
    10,
    10,
    9,
    6,
    2,
    10,
    3,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Duskwood Park",
   "Skyline Gardens",
   "Moonlit Promenade",
   "Jade Fountain",
   "Willowshade Pavilion",
   "Silvercrest Observatory",
   "Lighthouse Point",
   "Jasper Marina",
   "Haven Docks",
   "Opal Theater",
   "Evergreen Circle",
   "Twilight Harbor",
   "Ironbridge Crossing",
   "Shadowbridge Arcade",
   "Ivory Spire Cathedral"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Silvercrest Observatory",
     "Skyline Gardens",
     "Jasper Marina",
     "Lighthouse Point",
     "Jade Fountain",
     "Opal Theater",
     "Ironbridge Crossing",
     "Evergreen Circle",
     "Haven Docks",
     "Duskwood Park",
     "Twilight Harbor",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Shadowbridge Arcade",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 1.99
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Shadowbridge Arcade",
     "Willowshade Pavilion",
     "Ivory Spire Cathedral",
     "Lighthouse Point",
     "Jade Fountain",
     "Silvercrest Observatory",
     "Opal Theater",
     "Haven Docks",
     "Duskwood Park",
     "Twilight Harbor",
     "Skyline Gardens",
     "Evergreen Circle",
     "Ironbridge Crossing",
     "Jasper Marina",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Silvercrest Observatory",
     "Skyline Gardens",
     "Jasper Marina",
     "Lighthouse Point",
     "Jade Fountain",
     "Haven Docks",
     "Duskwood Park",
     "Twilight Harbor",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Ironbridge Crossing",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Silvercrest Observatory",
     "Skyline Gardens",
     "Jasper Marina",
     "Lighthouse Point",
     "Jade Fountain",
     "Haven Docks",
     "Duskwood Park",
     "Twilight Harbor",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Ironbridge Crossing",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Jade Fountain",
     "Opal Theater",
     "Duskwood Park",
     "Twilight Harbor",
     "Moonlit Promenade",
     "Jasper Marina",
     "Skyline Gardens",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Evergreen Circle",
     "Haven Docks",
     "Lighthouse Point",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Shadowbridge Arcade",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Evergreen Circle",
     "Ironbridge Crossing",
     "Silvercrest Observatory",
     "Shadowbridge Arcade",
     "Moonlit Promenade",
     "Skyline Gardens",
     "Jasper Marina",
     "Lighthouse Point",
     "Jade Fountain",
     "Opal Theater",
     "Twilight Harbor",
     "Haven Docks",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The objective is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse. The delivery points are diverse locations, each with unique characteristics and delivery requirements, scattered throughout the city.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Duskwood Park\",\n        \"Skyline Gardens\",\n        \"Moonlit Promenade\",\n        \"Jade Fountain\",\n        \"Willowshade Pavilion\",\n        \"Silvercrest Observatory\",\n        \"Lighthouse Point\",\n        \"Jasper Marina\",\n        \"Haven Docks\",\n        \"Opal Theater\",\n        \"Evergreen Circle\",\n        \"Twilight Harbor\",\n        \"Ironbridge Crossing\",\n        \"Shadowbridge Arcade\",\n        \"Ivory Spire Cathedral\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas.\n        \"Distance Table\": A representation of the travel distances between each pair of delivery points, which varies based on city traffic patterns and street layouts.\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the starting point while minimizing the total distance traveled.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 20,
  "adj": [
   [
    0,
    4,
    2,
    6,
    8,
    1,
    9,
    1,
    7,
    5,
    8,
    1,
    7,
    7,
    7,
    2
   ],
   [
    4,
    0,
    9,
    10,
    9,
    8,
    2,
    7,
    2,
    8,
    8,
    10,
    6,
    10,
    1,
    6
   ],
   [
    2,
    9,
    0,
    4,
    7,
    8,
    10,
    1,
    5,
    10,
    9,
    4,
    7,
    2,
    5,
    4
   ],
   [
    6,
    10,
    4,
    0,
    5,
    7,
    3,
    4,
    4,
    8,
    6,
    8,
    1,
    5,
    5,
    6
   ],
   [
    8,
    9,
    7,
    5,
    0,
    9,
    8,
    7,
    5,
    7,
    3,
    5,
    2,
    10,
    8,
    8
   ],
   [
    1,
    8,
    8,
    7,
    9,
    0,
    4,
    3,
    3,
    7,
    6,
    3,
    2,
    6,
    3,
    9
   ],
   [
    9,
    2,
    10,
    3,
    8,
    4,
    0,
    7,
    10,
    9,
    1,
    5,
    2,
    5,
    1,
    10
   ],
   [
    1,
    7,
    1,
    4,
    7,
    3,
    7,
    0,
    8,
    3,
    4,
    6,
    2,
    10,
    10,
    10
   ],
   [
    7,
    2,
    5,
    4,
    5,
    3,
    10,
    8,
    0,
    1,
    6,
    5,
    3,
    7,
    8,
    8
   ],
   [
    5,
    8,
    10,
    8,
    7,
    7,
    9,
    3,
    1,
    0,
    2,
    8,
    10,
    2,
    3,
    7
   ],
   [
    8,
    8,
    9,
    6,
    3,
    6,
    1,
    4,
    6,
    2,
    0,
    8,
    10,
    10,
    9,
    3
   ],
   [
    1,
    10,
    4,
    8,
    5,
    3,
    5,
    6,
    5,
    8,
    8,
    0,
    5,
    8,
    9,
    9
   ],
   [
    7,
    6,
    7,
    1,
    2,
    2,
    2,
    2,
    3,
    10,
    10,
    5,
    0,
    8,
    4,
    8
   ],
   [
    7,
    10,
    2,
    5,
    10,
    6,
    5,
    10,
    7,
    2,
    10,
    8,
    8,
    0,
    9,
    9
   ],
   [
    7,
    1,
    5,
    5,
    8,
    3,
    1,
    10,
    8,
    3,
    9,
    9,
    4,
    9,
    0,
    1
   ],
   [
    2,
    6,
    4,
    6,
    8,
    9,
    10,
    10,
    8,
    7,
    3,
    9,
    8,
    9,
    1,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Maplewood Conservatory",
   "Riverstone Wharf",
   "Amber Plaza",
   "Union Square Market",
   "Moonlit Promenade",
   "Copper Clock Square",
   "Flint Forge Quarter",
   "Brass Lantern Tavern",
   "King’s Row",
   "Horizon Mall",
   "Dragon’s Gate",
   "Velvet Corner",
   "Westgate Station",
   "Quarry Point",
   "Lunar Pier"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Flint Forge Quarter",
     "Riverstone Wharf",
     "Westgate Station",
     "King’s Row",
     "Brass Lantern Tavern",
     "Maplewood Conservatory",
     "Quarry Point",
     "Lunar Pier",
     "Horizon Mall",
     "Copper Clock Square",
     "Amber Plaza",
     "Velvet Corner",
     "Union Square Market",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 1.95
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Quarry Point",
     "Copper Clock Square",
     "Horizon Mall",
     "Union Square Market",
     "Velvet Corner",
     "Dragon’s Gate",
     "Flint Forge Quarter",
     "Riverstone Wharf",
     "Westgate Station",
     "King’s Row",
     "Brass Lantern Tavern",
     "Maplewood Conservatory",
     "Amber Plaza",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 47,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Velvet Corner",
     "Amber Plaza",
     "Copper Clock Square",
     "Horizon Mall",
     "King’s Row",
     "Brass Lantern Tavern",
     "Maplewood Conservatory",
     "Quarry Point",
     "Lunar Pier",
     "Riverstone Wharf",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Union Square Market",
     "Westgate Station",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Velvet Corner",
     "Amber Plaza",
     "Copper Clock Square",
     "Horizon Mall",
     "King’s Row",
     "Brass Lantern Tavern",
     "Maplewood Conservatory",
     "Quarry Point",
     "Lunar Pier",
     "Riverstone Wharf",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Union Square Market",
     "Westgate Station",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Copper Clock Square",
     "Amber Plaza",
     "Velvet Corner",
     "Flint Forge Quarter",
     "Riverstone Wharf",
     "Westgate Station",
     "King’s Row",
     "Brass Lantern Tavern",
     "Maplewood Conservatory",
     "Quarry Point",
     "Lunar Pier",
     "Horizon Mall",
     "Union Square Market",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Lunar Pier",
     "Horizon Mall",
     "Copper Clock Square",
     "Dragon’s Gate",
     "Union Square Market",
     "Velvet Corner",
     "Quarry Point",
     "Maplewood Conservatory",
     "Brass Lantern Tavern",
     "King’s Row",
     "Amber Plaza",
     "Riverstone Wharf",
     "Flint Forge Quarter",
     "Westgate Station",
     "Warehouse"
    ],
    "ans_distance": 64,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points scattered throughout the city, and the delivery driver must start from a central warehouse, drop off packages at each location, and return to the warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Maplewood Conservatory\",\n        \"Riverstone Wharf\",\n        \"Amber Plaza\",\n        \"Union Square Market\",\n        \"Moonlit Promenade\",\n        \"Copper Clock Square\",\n        \"Flint Forge Quarter\",\n        \"Brass Lantern Tavern\",\n        \"King’s Row\",\n        \"Horizon Mall\",\n        \"Dragon’s Gate\",\n        \"Velvet Corner\",\n        \"Westgate Station\",\n        \"Quarry Point\",\n        \"Lunar Pier\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Total Distance\": The cumulative distance traveled by the delivery driver while visiting all delivery points and returning to the warehouse.\",\n        \"Optimal Route\": The most efficient path that minimizes the total distance traveled while ensuring each delivery point is visited exactly once before returning to the starting point (the warehouse).\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 21,
  "adj": [
   [
    0,
    2,
    5,
    9,
    3,
    8,
    1,
    2,
    10,
    10,
    4,
    5,
    3,
    5,
    4,
    2
   ],
   [
    2,
    0,
    2,
    8,
    2,
    10,
    4,
    2,
    1,
    9,
    7,
    8,
    8,
    3,
    4,
    8
   ],
   [
    5,
    2,
    0,
    5,
    8,
    3,
    3,
    1,
    7,
    4,
    9,
    3,
    2,
    3,
    2,
    2
   ],
   [
    9,
    8,
    5,
    0,
    9,
    3,
    6,
    7,
    8,
    2,
    3,
    10,
    10,
    2,
    9,
    8
   ],
   [
    3,
    2,
    8,
    9,
    0,
    3,
    8,
    2,
    5,
    9,
    10,
    8,
    4,
    1,
    10,
    5
   ],
   [
    8,
    10,
    3,
    3,
    3,
    0,
    8,
    7,
    3,
    1,
    8,
    5,
    4,
    10,
    6,
    6
   ],
   [
    1,
    4,
    3,
    6,
    8,
    8,
    0,
    4,
    5,
    9,
    4,
    3,
    1,
    5,
    1,
    6
   ],
   [
    2,
    2,
    1,
    7,
    2,
    7,
    4,
    0,
    5,
    4,
    9,
    1,
    1,
    8,
    7,
    6
   ],
   [
    10,
    1,
    7,
    8,
    5,
    3,
    5,
    5,
    0,
    7,
    9,
    6,
    7,
    7,
    6,
    10
   ],
   [
    10,
    9,
    4,
    2,
    9,
    1,
    9,
    4,
    7,
    0,
    6,
    8,
    9,
    8,
    6,
    3
   ],
   [
    4,
    7,
    9,
    3,
    10,
    8,
    4,
    9,
    9,
    6,
    0,
    7,
    2,
    6,
    8,
    10
   ],
   [
    5,
    8,
    3,
    10,
    8,
    5,
    3,
    1,
    6,
    8,
    7,
    0,
    6,
    1,
    7,
    5
   ],
   [
    3,
    8,
    2,
    10,
    4,
    4,
    1,
    1,
    7,
    9,
    2,
    6,
    0,
    3,
    9,
    6
   ],
   [
    5,
    3,
    3,
    2,
    1,
    10,
    5,
    8,
    7,
    8,
    6,
    1,
    3,
    0,
    5,
    8
   ],
   [
    4,
    4,
    2,
    9,
    10,
    6,
    1,
    7,
    6,
    6,
    8,
    7,
    9,
    5,
    0,
    8
   ],
   [
    2,
    8,
    2,
    8,
    5,
    6,
    6,
    6,
    10,
    3,
    10,
    5,
    6,
    8,
    8,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Velvet Corner",
   "Quartz District",
   "Zenith Arena",
   "Horizon Mall",
   "Willowshade Pavilion",
   "Cobalt Market",
   "Ivory Spire Cathedral",
   "Maplewood Conservatory",
   "Oakshade Library",
   "Pennywhistle Arcade",
   "Skyline Gardens",
   "Quarry Point",
   "Echo Station",
   "Lunar Pier",
   "Amber Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Skyline Gardens",
     "Echo Station",
     "Horizon Mall",
     "Velvet Corner",
     "Maplewood Conservatory",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Zenith Arena",
     "Pennywhistle Arcade",
     "Quarry Point",
     "Cobalt Market",
     "Lunar Pier",
     "Quartz District",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 2.01
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Velvet Corner",
     "Maplewood Conservatory",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Zenith Arena",
     "Echo Station",
     "Horizon Mall",
     "Skyline Gardens",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Quarry Point",
     "Pennywhistle Arcade",
     "Cobalt Market",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Cobalt Market",
     "Quarry Point",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Velvet Corner",
     "Maplewood Conservatory",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Zenith Arena",
     "Echo Station",
     "Horizon Mall",
     "Amber Plaza",
     "Skyline Gardens",
     "Pennywhistle Arcade",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Cobalt Market",
     "Quarry Point",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Velvet Corner",
     "Maplewood Conservatory",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Zenith Arena",
     "Echo Station",
     "Horizon Mall",
     "Amber Plaza",
     "Skyline Gardens",
     "Pennywhistle Arcade",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Skyline Gardens",
     "Maplewood Conservatory",
     "Velvet Corner",
     "Horizon Mall",
     "Amber Plaza",
     "Oakshade Library",
     "Willowshade Pavilion",
     "Zenith Arena",
     "Echo Station",
     "Quartz District",
     "Lunar Pier",
     "Cobalt Market",
     "Quarry Point",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Velvet Corner",
     "Amber Plaza",
     "Oakshade Library",
     "Pennywhistle Arcade",
     "Maplewood Conservatory",
     "Willowshade Pavilion",
     "Horizon Mall",
     "Zenith Arena",
     "Ivory Spire Cathedral",
     "Quarry Point",
     "Echo Station",
     "Skyline Gardens",
     "Quartz District",
     "Lunar Pier",
     "Cobalt Market",
     "Warehouse"
    ],
    "ans_distance": 62,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves a delivery company that operates in a busy urban area with 15 distinct delivery points. The goal is to find the most efficient route for a delivery driver who starts from a central warehouse, visits each delivery point, and returns to the warehouse, minimizing the total distance traveled. This optimization is crucial for saving fuel, reducing delivery times, and improving overall operational efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Velvet Corner\",\n        \"Quartz District\",\n        \"Zenith Arena\",\n        \"Horizon Mall\",\n        \"Willowshade Pavilion\",\n        \"Cobalt Market\",\n        \"Ivory Spire Cathedral\",\n        \"Maplewood Conservatory\",\n        \"Oakshade Library\",\n        \"Pennywhistle Arcade\",\n        \"Skyline Gardens\",\n        \"Quarry Point\",\n        \"Echo Station\",\n        \"Lunar Pier\",\n        \"Amber Plaza\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Total Distance\": The sum of distances traveled by the delivery driver while visiting each delivery point and returning to the warehouse.\",\n        \"Optimal Route\": The most efficient path that minimizes the total distance traveled while ensuring each delivery point is visited exactly once before returning to the starting point (warehouse).\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 22,
  "adj": [
   [
    0,
    10,
    9,
    2,
    7,
    2,
    1,
    10,
    4,
    7,
    3,
    8,
    3,
    9,
    4,
    2
   ],
   [
    10,
    0,
    8,
    9,
    5,
    10,
    3,
    10,
    4,
    10,
    9,
    8,
    1,
    1,
    4,
    9
   ],
   [
    9,
    8,
    0,
    7,
    6,
    10,
    8,
    2,
    10,
    6,
    4,
    3,
    1,
    2,
    7,
    5
   ],
   [
    2,
    9,
    7,
    0,
    10,
    9,
    2,
    10,
    2,
    1,
    7,
    1,
    4,
    5,
    2,
    9
   ],
   [
    7,
    5,
    6,
    10,
    0,
    3,
    2,
    3,
    5,
    4,
    5,
    8,
    7,
    10,
    9,
    10
   ],
   [
    2,
    10,
    10,
    9,
    3,
    0,
    8,
    7,
    7,
    5,
    5,
    7,
    3,
    2,
    8,
    3
   ],
   [
    1,
    3,
    8,
    2,
    2,
    8,
    0,
    10,
    10,
    4,
    7,
    2,
    3,
    10,
    5,
    4
   ],
   [
    10,
    10,
    2,
    10,
    3,
    7,
    10,
    0,
    3,
    3,
    8,
    9,
    4,
    2,
    9,
    7
   ],
   [
    4,
    4,
    10,
    2,
    5,
    7,
    10,
    3,
    0,
    6,
    10,
    10,
    3,
    8,
    10,
    3
   ],
   [
    7,
    10,
    6,
    1,
    4,
    5,
    4,
    3,
    6,
    0,
    10,
    7,
    3,
    7,
    5,
    7
   ],
   [
    3,
    9,
    4,
    7,
    5,
    5,
    7,
    8,
    10,
    10,
    0,
    2,
    9,
    8,
    2,
    7
   ],
   [
    8,
    8,
    3,
    1,
    8,
    7,
    2,
    9,
    10,
    7,
    2,
    0,
    9,
    3,
    4,
    8
   ],
   [
    3,
    1,
    1,
    4,
    7,
    3,
    3,
    4,
    3,
    3,
    9,
    9,
    0,
    4,
    6,
    5
   ],
   [
    9,
    1,
    2,
    5,
    10,
    2,
    10,
    2,
    8,
    7,
    8,
    3,
    4,
    0,
    9,
    3
   ],
   [
    4,
    4,
    7,
    2,
    9,
    8,
    5,
    9,
    10,
    5,
    2,
    4,
    6,
    9,
    0,
    5
   ],
   [
    2,
    9,
    5,
    9,
    10,
    3,
    4,
    7,
    3,
    7,
    7,
    8,
    5,
    3,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Westgate Station",
   "Brass Lantern Tavern",
   "Echo Station",
   "Temple Square",
   "King’s Row",
   "Yarrow Plaza",
   "Jasper Marina",
   "Northwind Tower",
   "Twilight Harbor",
   "Pennywhistle Arcade",
   "Maplewood Conservatory",
   "Nimbus Plaza",
   "Ivory Spire Cathedral",
   "Silvercrest Observatory",
   "Flint Forge Quarter"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Temple Square",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Nimbus Plaza",
     "Brass Lantern Tavern",
     "Maplewood Conservatory",
     "Pennywhistle Arcade",
     "Silvercrest Observatory",
     "Echo Station",
     "Twilight Harbor",
     "Jasper Marina",
     "Northwind Tower",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 1.95
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flint Forge Quarter",
     "Northwind Tower",
     "Echo Station",
     "Silvercrest Observatory",
     "Pennywhistle Arcade",
     "Maplewood Conservatory",
     "Twilight Harbor",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Nimbus Plaza",
     "Brass Lantern Tavern",
     "Jasper Marina",
     "Temple Square",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Echo Station",
     "Twilight Harbor",
     "Jasper Marina",
     "Brass Lantern Tavern",
     "Nimbus Plaza",
     "Westgate Station",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Temple Square",
     "Northwind Tower",
     "Flint Forge Quarter",
     "Silvercrest Observatory",
     "Pennywhistle Arcade",
     "Maplewood Conservatory",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Echo Station",
     "Twilight Harbor",
     "Jasper Marina",
     "Brass Lantern Tavern",
     "Nimbus Plaza",
     "Westgate Station",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Temple Square",
     "Northwind Tower",
     "Flint Forge Quarter",
     "Silvercrest Observatory",
     "Pennywhistle Arcade",
     "Maplewood Conservatory",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Brass Lantern Tavern",
     "Jasper Marina",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Northwind Tower",
     "Flint Forge Quarter",
     "Yarrow Plaza",
     "Maplewood Conservatory",
     "Echo Station",
     "Silvercrest Observatory",
     "Pennywhistle Arcade",
     "Temple Square",
     "Twilight Harbor",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Brass Lantern Tavern",
     "Nimbus Plaza",
     "Westgate Station",
     "Yarrow Plaza",
     "Flint Forge Quarter",
     "King’s Row",
     "Temple Square",
     "Northwind Tower",
     "Twilight Harbor",
     "Ivory Spire Cathedral",
     "Jasper Marina",
     "Silvercrest Observatory",
     "Maplewood Conservatory",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 62,
    "cost_time": 1.4
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points scattered throughout the city, and the delivery driver must start from a central warehouse, drop off packages at each location, and return to the warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Westgate Station\",\n        \"Brass Lantern Tavern\",\n        \"Echo Station\",\n        \"Temple Square\",\n        \"King’s Row\",\n        \"Yarrow Plaza\",\n        \"Jasper Marina\",\n        \"Northwind Tower\",\n        \"Twilight Harbor\",\n        \"Pennywhistle Arcade\",\n        \"Maplewood Conservatory\",\n        \"Nimbus Plaza\",\n        \"Ivory Spire Cathedral\",\n        \"Silvercrest Observatory\",\n        \"Flint Forge Quarter\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": \"Distinct locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Distance Table\": \"A table that provides the approximate distance in kilometers between each pair of delivery points, including the warehouse.\",\n        \"Optimal Delivery Route\": \"The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse while minimizing the total distance traveled.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 23,
  "adj": [
   [
    0,
    6,
    8,
    2,
    6,
    4,
    10,
    2,
    4,
    1,
    2,
    5,
    4,
    5,
    7,
    7
   ],
   [
    6,
    0,
    4,
    5,
    9,
    4,
    9,
    10,
    1,
    9,
    3,
    4,
    7,
    8,
    9,
    2
   ],
   [
    8,
    4,
    0,
    4,
    10,
    1,
    3,
    9,
    8,
    9,
    7,
    1,
    5,
    9,
    8,
    6
   ],
   [
    2,
    5,
    4,
    0,
    1,
    2,
    6,
    7,
    2,
    7,
    8,
    7,
    1,
    5,
    8,
    4
   ],
   [
    6,
    9,
    10,
    1,
    0,
    7,
    4,
    4,
    7,
    10,
    5,
    6,
    9,
    1,
    1,
    9
   ],
   [
    4,
    4,
    1,
    2,
    7,
    0,
    5,
    4,
    7,
    1,
    3,
    2,
    3,
    1,
    10,
    8
   ],
   [
    10,
    9,
    3,
    6,
    4,
    5,
    0,
    7,
    6,
    6,
    10,
    10,
    8,
    9,
    9,
    6
   ],
   [
    2,
    10,
    9,
    7,
    4,
    4,
    7,
    0,
    10,
    10,
    9,
    4,
    5,
    4,
    3,
    4
   ],
   [
    4,
    1,
    8,
    2,
    7,
    7,
    6,
    10,
    0,
    5,
    2,
    3,
    4,
    6,
    1,
    3
   ],
   [
    1,
    9,
    9,
    7,
    10,
    1,
    6,
    10,
    5,
    0,
    3,
    4,
    3,
    6,
    4,
    1
   ],
   [
    2,
    3,
    7,
    8,
    5,
    3,
    10,
    9,
    2,
    3,
    0,
    1,
    4,
    5,
    2,
    4
   ],
   [
    5,
    4,
    1,
    7,
    6,
    2,
    10,
    4,
    3,
    4,
    1,
    0,
    3,
    4,
    2,
    4
   ],
   [
    4,
    7,
    5,
    1,
    9,
    3,
    8,
    5,
    4,
    3,
    4,
    3,
    0,
    2,
    4,
    8
   ],
   [
    5,
    8,
    9,
    5,
    1,
    1,
    9,
    4,
    6,
    6,
    5,
    4,
    2,
    0,
    9,
    10
   ],
   [
    7,
    9,
    8,
    8,
    1,
    10,
    9,
    3,
    1,
    4,
    2,
    2,
    4,
    9,
    0,
    4
   ],
   [
    7,
    2,
    6,
    4,
    9,
    8,
    6,
    4,
    3,
    1,
    4,
    4,
    8,
    10,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Ironbridge Crossing",
   "Quarry Point",
   "Umbra Theater",
   "Knight’s Market",
   "Azure Gardens",
   "Granite Plaza",
   "Echo Station",
   "Nimbus Plaza",
   "Jasper Marina",
   "Northwind Tower",
   "Flare Alley",
   "Opal Theater",
   "Maplewood Conservatory",
   "Sapphire Arena",
   "Haven Docks"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Sapphire Arena",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Haven Docks",
     "Jasper Marina",
     "Azure Gardens",
     "Maplewood Conservatory",
     "Opal Theater",
     "Umbra Theater",
     "Knight’s Market",
     "Granite Plaza",
     "Quarry Point",
     "Flare Alley",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 2.05
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Knight’s Market",
     "Maplewood Conservatory",
     "Azure Gardens",
     "Opal Theater",
     "Umbra Theater",
     "Sapphire Arena",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Northwind Tower",
     "Flare Alley",
     "Quarry Point",
     "Granite Plaza",
     "Jasper Marina",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Azure Gardens",
     "Quarry Point",
     "Flare Alley",
     "Northwind Tower",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Haven Docks",
     "Umbra Theater",
     "Knight’s Market",
     "Maplewood Conservatory",
     "Opal Theater",
     "Sapphire Arena",
     "Echo Station",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Azure Gardens",
     "Quarry Point",
     "Flare Alley",
     "Northwind Tower",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Haven Docks",
     "Umbra Theater",
     "Knight’s Market",
     "Maplewood Conservatory",
     "Opal Theater",
     "Sapphire Arena",
     "Echo Station",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Sapphire Arena",
     "Knight’s Market",
     "Umbra Theater",
     "Opal Theater",
     "Maplewood Conservatory",
     "Jasper Marina",
     "Azure Gardens",
     "Quarry Point",
     "Granite Plaza",
     "Haven Docks",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Flare Alley",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Maplewood Conservatory",
     "Northwind Tower",
     "Knight’s Market",
     "Umbra Theater",
     "Opal Theater",
     "Nimbus Plaza",
     "Sapphire Arena",
     "Jasper Marina",
     "Haven Docks",
     "Quarry Point",
     "Granite Plaza",
     "Azure Gardens",
     "Flare Alley",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to enhance efficiency, save on fuel, and reduce delivery times.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Ironbridge Crossing\",\n        \"Quarry Point\",\n        \"Umbra Theater\",\n        \"Knight’s Market\",\n        \"Azure Gardens\",\n        \"Granite Plaza\",\n        \"Echo Station\",\n        \"Nimbus Plaza\",\n        \"Jasper Marina\",\n        \"Northwind Tower\",\n        \"Flare Alley\",\n        \"Opal Theater\",\n        \"Maplewood Conservatory\",\n        \"Sapphire Arena\",\n        \"Haven Docks\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and ends their route.\",\n        \"Delivery Points\": The various locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse, minimizing the total distance traveled.\",\n        \"Distance Table\": A representation of the travel distances between each pair of delivery points, which is crucial for determining the optimal route.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 24,
  "adj": [
   [
    0,
    2,
    5,
    4,
    6,
    5,
    4,
    4,
    3,
    2,
    9,
    8,
    2,
    4,
    5,
    6
   ],
   [
    2,
    0,
    10,
    3,
    9,
    9,
    3,
    5,
    9,
    6,
    9,
    5,
    2,
    3,
    5,
    10
   ],
   [
    5,
    10,
    0,
    2,
    10,
    8,
    8,
    7,
    5,
    6,
    6,
    3,
    4,
    9,
    1,
    6
   ],
   [
    4,
    3,
    2,
    0,
    10,
    5,
    2,
    5,
    7,
    8,
    10,
    10,
    6,
    6,
    3,
    8
   ],
   [
    6,
    9,
    10,
    10,
    0,
    6,
    8,
    8,
    3,
    3,
    2,
    10,
    4,
    10,
    1,
    3
   ],
   [
    5,
    9,
    8,
    5,
    6,
    0,
    3,
    9,
    2,
    8,
    8,
    5,
    8,
    5,
    8,
    5
   ],
   [
    4,
    3,
    8,
    2,
    8,
    3,
    0,
    10,
    6,
    6,
    5,
    6,
    3,
    9,
    8,
    2
   ],
   [
    4,
    5,
    7,
    5,
    8,
    9,
    10,
    0,
    7,
    6,
    3,
    8,
    2,
    1,
    7,
    1
   ],
   [
    3,
    9,
    5,
    7,
    3,
    2,
    6,
    7,
    0,
    1,
    10,
    3,
    1,
    1,
    10,
    8
   ],
   [
    2,
    6,
    6,
    8,
    3,
    8,
    6,
    6,
    1,
    0,
    5,
    1,
    8,
    9,
    9,
    1
   ],
   [
    9,
    9,
    6,
    10,
    2,
    8,
    5,
    3,
    10,
    5,
    0,
    4,
    8,
    2,
    2,
    9
   ],
   [
    8,
    5,
    3,
    10,
    10,
    5,
    6,
    8,
    3,
    1,
    4,
    0,
    4,
    5,
    3,
    2
   ],
   [
    2,
    2,
    4,
    6,
    4,
    8,
    3,
    2,
    1,
    8,
    8,
    4,
    0,
    1,
    2,
    1
   ],
   [
    4,
    3,
    9,
    6,
    10,
    5,
    9,
    1,
    1,
    9,
    2,
    5,
    1,
    0,
    8,
    6
   ],
   [
    5,
    5,
    1,
    3,
    1,
    8,
    8,
    7,
    10,
    9,
    2,
    3,
    2,
    8,
    0,
    10
   ],
   [
    6,
    10,
    6,
    8,
    3,
    5,
    2,
    1,
    8,
    1,
    9,
    2,
    1,
    6,
    10,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Flare Alley",
   "Opal Theater",
   "Nimbus Plaza",
   "Lighthouse Point",
   "Ivory Spire Cathedral",
   "Echo Station",
   "Primrose Boulevard",
   "Beacon Tower",
   "Shadowbridge Arcade",
   "Silvercrest Observatory",
   "Evergreen Circle",
   "Riverstone Wharf",
   "Flint Forge Quarter",
   "Rosewood Hall",
   "Copper Clock Square"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Riverstone Wharf",
     "Beacon Tower",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Nimbus Plaza",
     "Opal Theater",
     "Rosewood Hall",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Flint Forge Quarter",
     "Primrose Boulevard",
     "Copper Clock Square",
     "Evergreen Circle",
     "Shadowbridge Arcade",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 1.96
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Beacon Tower",
     "Flint Forge Quarter",
     "Primrose Boulevard",
     "Copper Clock Square",
     "Echo Station",
     "Nimbus Plaza",
     "Opal Theater",
     "Rosewood Hall",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Ivory Spire Cathedral",
     "Riverstone Wharf",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Riverstone Wharf",
     "Beacon Tower",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Copper Clock Square",
     "Primrose Boulevard",
     "Flint Forge Quarter",
     "Silvercrest Observatory",
     "Lighthouse Point",
     "Rosewood Hall",
     "Opal Theater",
     "Nimbus Plaza",
     "Echo Station",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Riverstone Wharf",
     "Beacon Tower",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Copper Clock Square",
     "Primrose Boulevard",
     "Flint Forge Quarter",
     "Silvercrest Observatory",
     "Lighthouse Point",
     "Rosewood Hall",
     "Opal Theater",
     "Nimbus Plaza",
     "Echo Station",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Ivory Spire Cathedral",
     "Beacon Tower",
     "Riverstone Wharf",
     "Opal Theater",
     "Rosewood Hall",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Flint Forge Quarter",
     "Primrose Boulevard",
     "Copper Clock Square",
     "Echo Station",
     "Nimbus Plaza",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flint Forge Quarter",
     "Rosewood Hall",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Opal Theater",
     "Beacon Tower",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Riverstone Wharf",
     "Copper Clock Square",
     "Echo Station",
     "Flare Alley",
     "Nimbus Plaza",
     "Primrose Boulevard",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 60,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company that operates in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Flare Alley\",\n        \"Opal Theater\",\n        \"Nimbus Plaza\",\n        \"Lighthouse Point\",\n        \"Ivory Spire Cathedral\",\n        \"Echo Station\",\n        \"Primrose Boulevard\",\n        \"Beacon Tower\",\n        \"Shadowbridge Arcade\",\n        \"Silvercrest Observatory\",\n        \"Evergreen Circle\",\n        \"Riverstone Wharf\",\n        \"Flint Forge Quarter\",\n        \"Rosewood Hall\",\n        \"Copper Clock Square\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and ends their route.\n        \"Delivery Points\": The various locations where packages need to be dropped off, each representing different types of businesses or residential areas.\n        \"Distance Table\": A table that provides the approximate distances (in kilometers) between each pair of delivery points, including the warehouse.\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse, minimizing the total distance traveled.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 25,
  "adj": [
   [
    0,
    3,
    4,
    3,
    4,
    1,
    4,
    1,
    1,
    7,
    8,
    9,
    10,
    10,
    7,
    4
   ],
   [
    3,
    0,
    7,
    3,
    4,
    3,
    2,
    9,
    9,
    10,
    3,
    9,
    6,
    7,
    9,
    8
   ],
   [
    4,
    7,
    0,
    7,
    7,
    5,
    5,
    10,
    6,
    10,
    8,
    2,
    7,
    1,
    6,
    1
   ],
   [
    3,
    3,
    7,
    0,
    7,
    10,
    7,
    2,
    8,
    6,
    8,
    3,
    8,
    3,
    3,
    4
   ],
   [
    4,
    4,
    7,
    7,
    0,
    1,
    4,
    6,
    5,
    7,
    4,
    7,
    10,
    2,
    2,
    7
   ],
   [
    1,
    3,
    5,
    10,
    1,
    0,
    1,
    4,
    7,
    2,
    2,
    4,
    8,
    6,
    7,
    6
   ],
   [
    4,
    2,
    5,
    7,
    4,
    1,
    0,
    5,
    5,
    9,
    2,
    3,
    2,
    4,
    1,
    4
   ],
   [
    1,
    9,
    10,
    2,
    6,
    4,
    5,
    0,
    3,
    10,
    3,
    4,
    4,
    3,
    2,
    10
   ],
   [
    1,
    9,
    6,
    8,
    5,
    7,
    5,
    3,
    0,
    9,
    8,
    4,
    3,
    10,
    8,
    7
   ],
   [
    7,
    10,
    10,
    6,
    7,
    2,
    9,
    10,
    9,
    0,
    3,
    8,
    4,
    7,
    3,
    4
   ],
   [
    8,
    3,
    8,
    8,
    4,
    2,
    2,
    3,
    8,
    3,
    0,
    2,
    8,
    1,
    7,
    1
   ],
   [
    9,
    9,
    2,
    3,
    7,
    4,
    3,
    4,
    4,
    8,
    2,
    0,
    10,
    4,
    5,
    9
   ],
   [
    10,
    6,
    7,
    8,
    10,
    8,
    2,
    4,
    3,
    4,
    8,
    10,
    0,
    4,
    5,
    6
   ],
   [
    10,
    7,
    1,
    3,
    2,
    6,
    4,
    3,
    10,
    7,
    1,
    4,
    4,
    0,
    1,
    4
   ],
   [
    7,
    9,
    6,
    3,
    2,
    7,
    1,
    2,
    8,
    3,
    7,
    5,
    5,
    1,
    0,
    6
   ],
   [
    4,
    8,
    1,
    4,
    7,
    6,
    4,
    10,
    7,
    4,
    1,
    9,
    6,
    4,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Jade Fountain",
   "Ironbridge Crossing",
   "Umbra Theater",
   "Zenith Arena",
   "Echo Station",
   "Brass Lantern Tavern",
   "Lighthouse Point",
   "Amber Plaza",
   "Moonlit Promenade",
   "Maplewood Conservatory",
   "Knight’s Market",
   "Evergreen Circle",
   "Beacon Tower",
   "Westgate Station",
   "Ivory Spire Cathedral"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Umbra Theater",
     "Jade Fountain",
     "Brass Lantern Tavern",
     "Knight’s Market",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Maplewood Conservatory",
     "Beacon Tower",
     "Westgate Station",
     "Zenith Arena",
     "Echo Station",
     "Moonlit Promenade",
     "Evergreen Circle",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 1.98
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Lighthouse Point",
     "Umbra Theater",
     "Jade Fountain",
     "Brass Lantern Tavern",
     "Evergreen Circle",
     "Moonlit Promenade",
     "Echo Station",
     "Westgate Station",
     "Beacon Tower",
     "Maplewood Conservatory",
     "Knight’s Market",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Zenith Arena",
     "Beacon Tower",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Maplewood Conservatory",
     "Brass Lantern Tavern",
     "Westgate Station",
     "Lighthouse Point",
     "Umbra Theater",
     "Jade Fountain",
     "Evergreen Circle",
     "Amber Plaza",
     "Knight’s Market",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Zenith Arena",
     "Beacon Tower",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Maplewood Conservatory",
     "Brass Lantern Tavern",
     "Westgate Station",
     "Lighthouse Point",
     "Umbra Theater",
     "Jade Fountain",
     "Evergreen Circle",
     "Amber Plaza",
     "Knight’s Market",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Brass Lantern Tavern",
     "Knight’s Market",
     "Amber Plaza",
     "Evergreen Circle",
     "Jade Fountain",
     "Umbra Theater",
     "Lighthouse Point",
     "Westgate Station",
     "Moonlit Promenade",
     "Maplewood Conservatory",
     "Ivory Spire Cathedral",
     "Ironbridge Crossing",
     "Beacon Tower",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Evergreen Circle",
     "Echo Station",
     "Moonlit Promenade",
     "Ivory Spire Cathedral",
     "Ironbridge Crossing",
     "Jade Fountain",
     "Beacon Tower",
     "Westgate Station",
     "Brass Lantern Tavern",
     "Zenith Arena",
     "Knight’s Market",
     "Maplewood Conservatory",
     "Lighthouse Point",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 56,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The company is tasked with optimizing delivery routes across a busy urban area, involving 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Jade Fountain\",\n        \"Ironbridge Crossing\",\n        \"Umbra Theater\",\n        \"Zenith Arena\",\n        \"Echo Station\",\n        \"Brass Lantern Tavern\",\n        \"Lighthouse Point\",\n        \"Amber Plaza\",\n        \"Moonlit Promenade\",\n        \"Maplewood Conservatory\",\n        \"Knight’s Market\",\n        \"Evergreen Circle\",\n        \"Beacon Tower\",\n        \"Westgate Station\",\n        \"Ivory Spire Cathedral\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each with unique characteristics and requirements.\n        \"Total Distance\": The sum of distances traveled by the delivery driver during the route.\n        \"Optimal Route\": The most efficient path that minimizes the total distance while visiting each delivery point exactly once before returning to the starting point.\n        \"Urban Area\": A densely populated region characterized by significant human-built structures and infrastructure, impacting travel distances and routes.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 26,
  "adj": [
   [
    0,
    6,
    4,
    9,
    9,
    10,
    6,
    2,
    7,
    6,
    8,
    3,
    8,
    2,
    3,
    8
   ],
   [
    6,
    0,
    9,
    6,
    5,
    4,
    2,
    5,
    5,
    4,
    7,
    9,
    3,
    8,
    1,
    6
   ],
   [
    4,
    9,
    0,
    4,
    6,
    4,
    2,
    4,
    3,
    1,
    2,
    7,
    6,
    1,
    3,
    5
   ],
   [
    9,
    6,
    4,
    0,
    9,
    6,
    8,
    4,
    2,
    8,
    8,
    10,
    7,
    5,
    6,
    6
   ],
   [
    9,
    5,
    6,
    9,
    0,
    9,
    2,
    1,
    2,
    1,
    3,
    8,
    5,
    6,
    9,
    7
   ],
   [
    10,
    4,
    4,
    6,
    9,
    0,
    2,
    8,
    2,
    7,
    9,
    8,
    9,
    5,
    2,
    3
   ],
   [
    6,
    2,
    2,
    8,
    2,
    2,
    0,
    10,
    6,
    1,
    2,
    2,
    2,
    8,
    1,
    5
   ],
   [
    2,
    5,
    4,
    4,
    1,
    8,
    10,
    0,
    2,
    2,
    6,
    2,
    6,
    9,
    2,
    1
   ],
   [
    7,
    5,
    3,
    2,
    2,
    2,
    6,
    2,
    0,
    6,
    7,
    2,
    2,
    6,
    1,
    8
   ],
   [
    6,
    4,
    1,
    8,
    1,
    7,
    1,
    2,
    6,
    0,
    2,
    10,
    9,
    2,
    6,
    8
   ],
   [
    8,
    7,
    2,
    8,
    3,
    9,
    2,
    6,
    7,
    2,
    0,
    1,
    2,
    8,
    3,
    1
   ],
   [
    3,
    9,
    7,
    10,
    8,
    8,
    2,
    2,
    2,
    10,
    1,
    0,
    10,
    2,
    6,
    9
   ],
   [
    8,
    3,
    6,
    7,
    5,
    9,
    2,
    6,
    2,
    9,
    2,
    10,
    0,
    4,
    7,
    2
   ],
   [
    2,
    8,
    1,
    5,
    6,
    5,
    8,
    9,
    6,
    2,
    8,
    2,
    4,
    0,
    9,
    6
   ],
   [
    3,
    1,
    3,
    6,
    9,
    2,
    1,
    2,
    1,
    6,
    3,
    6,
    7,
    9,
    0,
    6
   ],
   [
    8,
    6,
    5,
    6,
    7,
    3,
    5,
    1,
    8,
    8,
    1,
    9,
    2,
    6,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Granite Plaza",
   "Northwind Tower",
   "Skyline Gardens",
   "Quartz District",
   "Velvet Corner",
   "Knight’s Market",
   "Moonlit Promenade",
   "Quarry Point",
   "Opal Theater",
   "Azure Gardens",
   "Primrose Boulevard",
   "Beacon Tower",
   "Zenith Arena",
   "Riverstone Wharf",
   "Brass Lantern Tavern"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Quartz District",
     "Opal Theater",
     "Northwind Tower",
     "Skyline Gardens",
     "Quarry Point",
     "Velvet Corner",
     "Knight’s Market",
     "Riverstone Wharf",
     "Granite Plaza",
     "Beacon Tower",
     "Brass Lantern Tavern",
     "Azure Gardens",
     "Primrose Boulevard",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 28,
    "cost_time": 2.06
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Azure Gardens",
     "Brass Lantern Tavern",
     "Moonlit Promenade",
     "Quartz District",
     "Opal Theater",
     "Zenith Arena",
     "Northwind Tower",
     "Knight’s Market",
     "Riverstone Wharf",
     "Velvet Corner",
     "Beacon Tower",
     "Granite Plaza",
     "Quarry Point",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Quartz District",
     "Opal Theater",
     "Northwind Tower",
     "Zenith Arena",
     "Primrose Boulevard",
     "Azure Gardens",
     "Brass Lantern Tavern",
     "Beacon Tower",
     "Knight’s Market",
     "Riverstone Wharf",
     "Granite Plaza",
     "Velvet Corner",
     "Quarry Point",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Quartz District",
     "Opal Theater",
     "Northwind Tower",
     "Zenith Arena",
     "Primrose Boulevard",
     "Azure Gardens",
     "Brass Lantern Tavern",
     "Beacon Tower",
     "Knight’s Market",
     "Riverstone Wharf",
     "Granite Plaza",
     "Velvet Corner",
     "Quarry Point",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Quarry Point",
     "Beacon Tower",
     "Granite Plaza",
     "Riverstone Wharf",
     "Velvet Corner",
     "Knight’s Market",
     "Quartz District",
     "Moonlit Promenade",
     "Brass Lantern Tavern",
     "Azure Gardens",
     "Opal Theater",
     "Northwind Tower",
     "Skyline Gardens",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Northwind Tower",
     "Skyline Gardens",
     "Granite Plaza",
     "Quartz District",
     "Beacon Tower",
     "Brass Lantern Tavern",
     "Zenith Arena",
     "Riverstone Wharf",
     "Moonlit Promenade",
     "Primrose Boulevard",
     "Quarry Point",
     "Velvet Corner",
     "Knight’s Market",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 64,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area with 15 distinct delivery points. The delivery driver must start from a central warehouse, deliver packages to each location, and return to the warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Granite Plaza\",\n        \"Northwind Tower\",\n        \"Skyline Gardens\",\n        \"Quartz District\",\n        \"Velvet Corner\",\n        \"Knight’s Market\",\n        \"Moonlit Promenade\",\n        \"Quarry Point\",\n        \"Opal Theater\",\n        \"Azure Gardens\",\n        \"Primrose Boulevard\",\n        \"Beacon Tower\",\n        \"Zenith Arena\",\n        \"Riverstone Wharf\",\n        \"Brass Lantern Tavern\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Total Distance\": The sum of the distances traveled by the delivery driver to visit each delivery point and return to the warehouse.\",\n        \"Optimal Route\": The most efficient path that minimizes the total distance traveled while visiting each delivery point exactly once before returning to the starting point (warehouse).\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 27,
  "adj": [
   [
    0,
    4,
    9,
    2,
    10,
    2,
    7,
    5,
    9,
    6,
    7,
    1,
    5,
    2,
    10,
    7
   ],
   [
    4,
    0,
    10,
    4,
    9,
    4,
    5,
    3,
    1,
    7,
    7,
    9,
    9,
    3,
    4,
    9
   ],
   [
    9,
    10,
    0,
    1,
    4,
    10,
    1,
    6,
    4,
    1,
    7,
    7,
    6,
    5,
    2,
    5
   ],
   [
    2,
    4,
    1,
    0,
    4,
    7,
    1,
    3,
    6,
    10,
    4,
    9,
    8,
    4,
    10,
    7
   ],
   [
    10,
    9,
    4,
    4,
    0,
    9,
    9,
    7,
    7,
    3,
    10,
    3,
    4,
    1,
    4,
    4
   ],
   [
    2,
    4,
    10,
    7,
    9,
    0,
    10,
    8,
    7,
    5,
    3,
    9,
    6,
    2,
    2,
    8
   ],
   [
    7,
    5,
    1,
    1,
    9,
    10,
    0,
    7,
    2,
    6,
    5,
    3,
    1,
    10,
    2,
    3
   ],
   [
    5,
    3,
    6,
    3,
    7,
    8,
    7,
    0,
    4,
    5,
    4,
    5,
    10,
    2,
    2,
    2
   ],
   [
    9,
    1,
    4,
    6,
    7,
    7,
    2,
    4,
    0,
    10,
    1,
    5,
    9,
    9,
    10,
    6
   ],
   [
    6,
    7,
    1,
    10,
    3,
    5,
    6,
    5,
    10,
    0,
    3,
    10,
    10,
    4,
    5,
    3
   ],
   [
    7,
    7,
    7,
    4,
    10,
    3,
    5,
    4,
    1,
    3,
    0,
    3,
    4,
    6,
    1,
    4
   ],
   [
    1,
    9,
    7,
    9,
    3,
    9,
    3,
    5,
    5,
    10,
    3,
    0,
    5,
    2,
    1,
    2
   ],
   [
    5,
    9,
    6,
    8,
    4,
    6,
    1,
    10,
    9,
    10,
    4,
    5,
    0,
    9,
    4,
    7
   ],
   [
    2,
    3,
    5,
    4,
    1,
    2,
    10,
    2,
    9,
    4,
    6,
    2,
    9,
    0,
    1,
    8
   ],
   [
    10,
    4,
    2,
    10,
    4,
    2,
    2,
    2,
    10,
    5,
    1,
    1,
    4,
    1,
    0,
    3
   ],
   [
    7,
    9,
    5,
    7,
    4,
    8,
    3,
    2,
    6,
    3,
    4,
    2,
    7,
    8,
    3,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Cobalt Market",
   "Sapphire Arena",
   "Beacon Tower",
   "Silvercrest Observatory",
   "Primrose Boulevard",
   "Brass Lantern Tavern",
   "Rosewood Hall",
   "Duskwood Park",
   "Granite Plaza",
   "Copper Clock Square",
   "Quarry Point",
   "Northwind Tower",
   "Knight’s Market",
   "Azure Gardens",
   "Ironbridge Crossing"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Knight’s Market",
     "Silvercrest Observatory",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Beacon Tower",
     "Sapphire Arena",
     "Granite Plaza",
     "Ironbridge Crossing",
     "Rosewood Hall",
     "Cobalt Market",
     "Duskwood Park",
     "Copper Clock Square",
     "Azure Gardens",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 1.98
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Beacon Tower",
     "Sapphire Arena",
     "Granite Plaza",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Silvercrest Observatory",
     "Knight’s Market",
     "Azure Gardens",
     "Ironbridge Crossing",
     "Rosewood Hall",
     "Cobalt Market",
     "Duskwood Park",
     "Copper Clock Square",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Azure Gardens",
     "Copper Clock Square",
     "Duskwood Park",
     "Cobalt Market",
     "Rosewood Hall",
     "Knight’s Market",
     "Silvercrest Observatory",
     "Granite Plaza",
     "Sapphire Arena",
     "Beacon Tower",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Primrose Boulevard",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Azure Gardens",
     "Copper Clock Square",
     "Duskwood Park",
     "Cobalt Market",
     "Rosewood Hall",
     "Knight’s Market",
     "Silvercrest Observatory",
     "Granite Plaza",
     "Sapphire Arena",
     "Beacon Tower",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Primrose Boulevard",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Beacon Tower",
     "Sapphire Arena",
     "Granite Plaza",
     "Ironbridge Crossing",
     "Rosewood Hall",
     "Cobalt Market",
     "Duskwood Park",
     "Copper Clock Square",
     "Azure Gardens",
     "Primrose Boulevard",
     "Knight’s Market",
     "Silvercrest Observatory",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Ironbridge Crossing",
     "Rosewood Hall",
     "Beacon Tower",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Cobalt Market",
     "Duskwood Park",
     "Primrose Boulevard",
     "Granite Plaza",
     "Sapphire Arena",
     "Silvercrest Observatory",
     "Quarry Point",
     "Azure Gardens",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 59,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts from a central warehouse, visits each location, and returns to the warehouse. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Cobalt Market\",\n        \"Sapphire Arena\",\n        \"Beacon Tower\",\n        \"Silvercrest Observatory\",\n        \"Primrose Boulevard\",\n        \"Brass Lantern Tavern\",\n        \"Rosewood Hall\",\n        \"Duskwood Park\",\n        \"Granite Plaza\",\n        \"Copper Clock Square\",\n        \"Quarry Point\",\n        \"Northwind Tower\",\n        \"Knight’s Market\",\n        \"Azure Gardens\",\n        \"Ironbridge Crossing\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Optimal Route\": The most efficient path that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the starting point (the warehouse).\",\n        \"Distance Table\": A matrix that provides the approximate travel distances between each pair of delivery points, which is influenced by city traffic patterns and street layouts.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 28,
  "adj": [
   [
    0,
    8,
    5,
    10,
    5,
    9,
    10,
    9,
    7,
    6,
    2,
    1,
    2,
    7,
    8,
    6
   ],
   [
    8,
    0,
    3,
    6,
    3,
    10,
    7,
    4,
    1,
    2,
    7,
    2,
    8,
    2,
    8,
    5
   ],
   [
    5,
    3,
    0,
    5,
    7,
    3,
    1,
    9,
    3,
    5,
    1,
    3,
    1,
    8,
    4,
    1
   ],
   [
    10,
    6,
    5,
    0,
    8,
    2,
    6,
    1,
    6,
    5,
    7,
    1,
    6,
    5,
    2,
    9
   ],
   [
    5,
    3,
    7,
    8,
    0,
    8,
    9,
    8,
    9,
    4,
    4,
    5,
    7,
    2,
    10,
    8
   ],
   [
    9,
    10,
    3,
    2,
    8,
    0,
    3,
    8,
    2,
    5,
    9,
    4,
    5,
    9,
    4,
    6
   ],
   [
    10,
    7,
    1,
    6,
    9,
    3,
    0,
    4,
    4,
    5,
    4,
    7,
    5,
    5,
    5,
    5
   ],
   [
    9,
    4,
    9,
    1,
    8,
    8,
    4,
    0,
    8,
    8,
    2,
    7,
    1,
    1,
    9,
    2
   ],
   [
    7,
    1,
    3,
    6,
    9,
    2,
    4,
    8,
    0,
    1,
    3,
    7,
    10,
    9,
    8,
    5
   ],
   [
    6,
    2,
    5,
    5,
    4,
    5,
    5,
    8,
    1,
    0,
    3,
    6,
    2,
    9,
    3,
    1
   ],
   [
    2,
    7,
    1,
    7,
    4,
    9,
    4,
    2,
    3,
    3,
    0,
    8,
    9,
    9,
    7,
    3
   ],
   [
    1,
    2,
    3,
    1,
    5,
    4,
    7,
    7,
    7,
    6,
    8,
    0,
    3,
    10,
    3,
    5
   ],
   [
    2,
    8,
    1,
    6,
    7,
    5,
    5,
    1,
    10,
    2,
    9,
    3,
    0,
    1,
    3,
    1
   ],
   [
    7,
    2,
    8,
    5,
    2,
    9,
    5,
    1,
    9,
    9,
    9,
    10,
    1,
    0,
    9,
    4
   ],
   [
    8,
    8,
    4,
    2,
    10,
    4,
    5,
    9,
    8,
    3,
    7,
    3,
    3,
    9,
    0,
    7
   ],
   [
    6,
    5,
    1,
    9,
    8,
    6,
    5,
    2,
    5,
    1,
    3,
    5,
    1,
    4,
    7,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Zenith Arena",
   "Ironbridge Crossing",
   "Lighthouse Point",
   "Flint Forge Quarter",
   "Yarrow Plaza",
   "Cobalt Market",
   "Rosewood Hall",
   "Riverstone Wharf",
   "Jade Fountain",
   "Ivory Spire Cathedral",
   "Union Square Market",
   "Velvet Corner",
   "Temple Square",
   "Skyline Gardens",
   "Maplewood Conservatory"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Ironbridge Crossing",
     "Cobalt Market",
     "Yarrow Plaza",
     "Riverstone Wharf",
     "Zenith Arena",
     "Flint Forge Quarter",
     "Temple Square",
     "Rosewood Hall",
     "Velvet Corner",
     "Maplewood Conservatory",
     "Jade Fountain",
     "Skyline Gardens",
     "Lighthouse Point",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 1.94
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Ironbridge Crossing",
     "Maplewood Conservatory",
     "Jade Fountain",
     "Riverstone Wharf",
     "Zenith Arena",
     "Flint Forge Quarter",
     "Temple Square",
     "Rosewood Hall",
     "Velvet Corner",
     "Cobalt Market",
     "Lighthouse Point",
     "Skyline Gardens",
     "Yarrow Plaza",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Lighthouse Point",
     "Rosewood Hall",
     "Velvet Corner",
     "Ironbridge Crossing",
     "Cobalt Market",
     "Yarrow Plaza",
     "Riverstone Wharf",
     "Zenith Arena",
     "Jade Fountain",
     "Maplewood Conservatory",
     "Ivory Spire Cathedral",
     "Flint Forge Quarter",
     "Temple Square",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Lighthouse Point",
     "Rosewood Hall",
     "Velvet Corner",
     "Ironbridge Crossing",
     "Cobalt Market",
     "Yarrow Plaza",
     "Riverstone Wharf",
     "Zenith Arena",
     "Jade Fountain",
     "Maplewood Conservatory",
     "Ivory Spire Cathedral",
     "Flint Forge Quarter",
     "Temple Square",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Velvet Corner",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Cobalt Market",
     "Skyline Gardens",
     "Union Square Market",
     "Lighthouse Point",
     "Yarrow Plaza",
     "Riverstone Wharf",
     "Zenith Arena",
     "Jade Fountain",
     "Maplewood Conservatory",
     "Rosewood Hall",
     "Temple Square",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Velvet Corner",
     "Flint Forge Quarter",
     "Jade Fountain",
     "Zenith Arena",
     "Lighthouse Point",
     "Temple Square",
     "Maplewood Conservatory",
     "Rosewood Hall",
     "Ivory Spire Cathedral",
     "Cobalt Market",
     "Ironbridge Crossing",
     "Union Square Market",
     "Skyline Gardens",
     "Yarrow Plaza",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 58,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts from a central warehouse, visits each location, and returns to the warehouse. This optimization is crucial for saving on fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Zenith Arena\",\n        \"Ironbridge Crossing\",\n        \"Lighthouse Point\",\n        \"Flint Forge Quarter\",\n        \"Yarrow Plaza\",\n        \"Cobalt Market\",\n        \"Rosewood Hall\",\n        \"Riverstone Wharf\",\n        \"Jade Fountain\",\n        \"Ivory Spire Cathedral\",\n        \"Union Square Market\",\n        \"Velvet Corner\",\n        \"Temple Square\",\n        \"Skyline Gardens\",\n        \"Maplewood Conservatory\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and returns after completing deliveries.\",\n        \"Delivery Points\": Distinct locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Optimal Delivery Route\": The most efficient path that the delivery driver can take to minimize the total distance traveled while visiting each delivery point exactly once before returning to the warehouse.\",\n        \"Distance Table\": A representation of the travel distances (in kilometers) between each pair of delivery points and the warehouse, which is essential for calculating the optimal route.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 29,
  "adj": [
   [
    0,
    3,
    4,
    7,
    4,
    5,
    10,
    6,
    8,
    4,
    7,
    10,
    4,
    7,
    1,
    5
   ],
   [
    3,
    0,
    1,
    4,
    5,
    4,
    10,
    5,
    10,
    2,
    7,
    10,
    8,
    4,
    5,
    4
   ],
   [
    4,
    1,
    0,
    9,
    1,
    5,
    7,
    5,
    6,
    9,
    9,
    1,
    4,
    3,
    1,
    1
   ],
   [
    7,
    4,
    9,
    0,
    2,
    7,
    7,
    10,
    5,
    1,
    6,
    9,
    3,
    1,
    10,
    4
   ],
   [
    4,
    5,
    1,
    2,
    0,
    4,
    1,
    3,
    10,
    10,
    2,
    1,
    1,
    9,
    1,
    2
   ],
   [
    5,
    4,
    5,
    7,
    4,
    0,
    8,
    10,
    6,
    1,
    5,
    4,
    7,
    10,
    5,
    3
   ],
   [
    10,
    10,
    7,
    7,
    1,
    8,
    0,
    5,
    7,
    1,
    7,
    4,
    4,
    3,
    1,
    9
   ],
   [
    6,
    5,
    5,
    10,
    3,
    10,
    5,
    0,
    9,
    1,
    6,
    8,
    5,
    4,
    7,
    1
   ],
   [
    8,
    10,
    6,
    5,
    10,
    6,
    7,
    9,
    0,
    8,
    7,
    10,
    3,
    9,
    5,
    1
   ],
   [
    4,
    2,
    9,
    1,
    10,
    1,
    1,
    1,
    8,
    0,
    6,
    1,
    9,
    4,
    3,
    7
   ],
   [
    7,
    7,
    9,
    6,
    2,
    5,
    7,
    6,
    7,
    6,
    0,
    3,
    4,
    6,
    10,
    1
   ],
   [
    10,
    10,
    1,
    9,
    1,
    4,
    4,
    8,
    10,
    1,
    3,
    0,
    9,
    7,
    7,
    2
   ],
   [
    4,
    8,
    4,
    3,
    1,
    7,
    4,
    5,
    3,
    9,
    4,
    9,
    0,
    9,
    1,
    7
   ],
   [
    7,
    4,
    3,
    1,
    9,
    10,
    3,
    4,
    9,
    4,
    6,
    7,
    9,
    0,
    8,
    3
   ],
   [
    1,
    5,
    1,
    10,
    1,
    5,
    1,
    7,
    5,
    3,
    10,
    7,
    1,
    8,
    0,
    9
   ],
   [
    5,
    4,
    1,
    4,
    2,
    3,
    9,
    1,
    1,
    7,
    1,
    2,
    7,
    3,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Umbra Theater",
   "Northwind Tower",
   "Pennywhistle Arcade",
   "Velvet Corner",
   "Beacon Tower",
   "Brass Lantern Tavern",
   "Ironbridge Crossing",
   "Temple Square",
   "Quarry Point",
   "Duskwood Park",
   "Shadowbridge Arcade",
   "Rosewood Hall",
   "Ivory Spire Cathedral",
   "Dragon’s Gate",
   "Nimbus Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Northwind Tower",
     "Shadowbridge Arcade",
     "Velvet Corner",
     "Duskwood Park",
     "Beacon Tower",
     "Quarry Point",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Temple Square",
     "Rosewood Hall",
     "Pennywhistle Arcade",
     "Ivory Spire Cathedral",
     "Brass Lantern Tavern",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 2.02
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Beacon Tower",
     "Quarry Point",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Pennywhistle Arcade",
     "Brass Lantern Tavern",
     "Velvet Corner",
     "Shadowbridge Arcade",
     "Northwind Tower",
     "Nimbus Plaza",
     "Duskwood Park",
     "Temple Square",
     "Rosewood Hall",
     "Umbra Theater",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Northwind Tower",
     "Umbra Theater",
     "Quarry Point",
     "Pennywhistle Arcade",
     "Ivory Spire Cathedral",
     "Brass Lantern Tavern",
     "Velvet Corner",
     "Shadowbridge Arcade",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Rosewood Hall",
     "Temple Square",
     "Beacon Tower",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Northwind Tower",
     "Umbra Theater",
     "Quarry Point",
     "Pennywhistle Arcade",
     "Ivory Spire Cathedral",
     "Brass Lantern Tavern",
     "Velvet Corner",
     "Shadowbridge Arcade",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Rosewood Hall",
     "Temple Square",
     "Beacon Tower",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Quarry Point",
     "Ivory Spire Cathedral",
     "Pennywhistle Arcade",
     "Rosewood Hall",
     "Dragon’s Gate",
     "Brass Lantern Tavern",
     "Velvet Corner",
     "Duskwood Park",
     "Beacon Tower",
     "Shadowbridge Arcade",
     "Northwind Tower",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Dragon’s Gate",
     "Temple Square",
     "Rosewood Hall",
     "Quarry Point",
     "Umbra Theater",
     "Ironbridge Crossing",
     "Duskwood Park",
     "Nimbus Plaza",
     "Beacon Tower",
     "Shadowbridge Arcade",
     "Velvet Corner",
     "Pennywhistle Arcade",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 61,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves a delivery company that needs to optimize the route for a driver covering 15 distinct delivery points in a busy urban area. The goal is to minimize the total distance traveled while ensuring that the driver visits each location exactly once before returning to the central warehouse. This optimization is crucial for saving on fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Umbra Theater\",\n        \"Northwind Tower\",\n        \"Pennywhistle Arcade\",\n        \"Velvet Corner\",\n        \"Beacon Tower\",\n        \"Brass Lantern Tavern\",\n        \"Ironbridge Crossing\",\n        \"Temple Square\",\n        \"Quarry Point\",\n        \"Duskwood Park\",\n        \"Shadowbridge Arcade\",\n        \"Rosewood Hall\",\n        \"Ivory Spire Cathedral\",\n        \"Dragon’s Gate\",\n        \"Nimbus Plaza\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": \"Distinct locations where packages need to be delivered, each representing different types of businesses or residential areas.\",\n        \"Central Warehouse\": \"The starting point for the delivery driver, located near the city center.\",\n        \"Optimal Route\": \"The most efficient path that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the starting point.\",\n        \"Distance Table\": \"A table that provides the approximate distances between each pair of delivery points, taking into account city traffic patterns and street layouts.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 30,
  "adj": [
   [
    0,
    10,
    6,
    5,
    6,
    2,
    4,
    9,
    5,
    2,
    8,
    3,
    7,
    2,
    4,
    9
   ],
   [
    10,
    0,
    8,
    3,
    7,
    6,
    8,
    7,
    10,
    8,
    4,
    5,
    3,
    8,
    5,
    4
   ],
   [
    6,
    8,
    0,
    3,
    4,
    5,
    2,
    8,
    3,
    4,
    1,
    4,
    2,
    10,
    8,
    10
   ],
   [
    5,
    3,
    3,
    0,
    3,
    7,
    2,
    8,
    10,
    2,
    2,
    8,
    3,
    8,
    1,
    3
   ],
   [
    6,
    7,
    4,
    3,
    0,
    9,
    9,
    9,
    6,
    4,
    4,
    2,
    4,
    1,
    4,
    9
   ],
   [
    2,
    6,
    5,
    7,
    9,
    0,
    8,
    7,
    1,
    1,
    6,
    5,
    6,
    7,
    2,
    3
   ],
   [
    4,
    8,
    2,
    2,
    9,
    8,
    0,
    3,
    8,
    2,
    6,
    7,
    10,
    2,
    10,
    2
   ],
   [
    9,
    7,
    8,
    8,
    9,
    7,
    3,
    0,
    8,
    7,
    2,
    5,
    3,
    9,
    3,
    2
   ],
   [
    5,
    10,
    3,
    10,
    6,
    1,
    8,
    8,
    0,
    10,
    9,
    6,
    6,
    8,
    5,
    5
   ],
   [
    2,
    8,
    4,
    2,
    4,
    1,
    2,
    7,
    10,
    0,
    6,
    7,
    5,
    4,
    10,
    8
   ],
   [
    8,
    4,
    1,
    2,
    4,
    6,
    6,
    2,
    9,
    6,
    0,
    8,
    9,
    10,
    5,
    3
   ],
   [
    3,
    5,
    4,
    8,
    2,
    5,
    7,
    5,
    6,
    7,
    8,
    0,
    9,
    5,
    3,
    5
   ],
   [
    7,
    3,
    2,
    3,
    4,
    6,
    10,
    3,
    6,
    5,
    9,
    9,
    0,
    4,
    6,
    7
   ],
   [
    2,
    8,
    10,
    8,
    1,
    7,
    2,
    9,
    8,
    4,
    10,
    5,
    4,
    0,
    7,
    6
   ],
   [
    4,
    5,
    8,
    1,
    4,
    2,
    10,
    3,
    5,
    10,
    5,
    3,
    6,
    7,
    0,
    2
   ],
   [
    9,
    4,
    10,
    3,
    9,
    3,
    2,
    2,
    5,
    8,
    3,
    5,
    7,
    6,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Sapphire Arena",
   "Moonlit Promenade",
   "Skyline Gardens",
   "Primrose Boulevard",
   "Dragon’s Gate",
   "Oakshade Library",
   "Ironbridge Crossing",
   "Velvet Corner",
   "King’s Row",
   "Shadowbridge Arcade",
   "Quartz District",
   "Gilded Archway",
   "Knight’s Market",
   "Haven Docks",
   "Pennywhistle Arcade"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Dragon’s Gate",
     "Velvet Corner",
     "Moonlit Promenade",
     "Shadowbridge Arcade",
     "Ironbridge Crossing",
     "Gilded Archway",
     "Sapphire Arena",
     "Skyline Gardens",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Oakshade Library",
     "Knight’s Market",
     "Primrose Boulevard",
     "Quartz District",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 2.05
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Primrose Boulevard",
     "Quartz District",
     "Haven Docks",
     "Skyline Gardens",
     "Oakshade Library",
     "Moonlit Promenade",
     "Pennywhistle Arcade",
     "Ironbridge Crossing",
     "Shadowbridge Arcade",
     "Gilded Archway",
     "Sapphire Arena",
     "King’s Row",
     "Dragon’s Gate",
     "Velvet Corner",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Velvet Corner",
     "Moonlit Promenade",
     "Shadowbridge Arcade",
     "Skyline Gardens",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Oakshade Library",
     "King’s Row",
     "Primrose Boulevard",
     "Knight’s Market",
     "Gilded Archway",
     "Sapphire Arena",
     "Quartz District",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 47,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Velvet Corner",
     "Moonlit Promenade",
     "Shadowbridge Arcade",
     "Skyline Gardens",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Oakshade Library",
     "King’s Row",
     "Primrose Boulevard",
     "Knight’s Market",
     "Gilded Archway",
     "Sapphire Arena",
     "Quartz District",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 47,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Oakshade Library",
     "Skyline Gardens",
     "Sapphire Arena",
     "Gilded Archway",
     "Velvet Corner",
     "Dragon’s Gate",
     "Quartz District",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Ironbridge Crossing",
     "Shadowbridge Arcade",
     "Moonlit Promenade",
     "Primrose Boulevard",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Knight’s Market",
     "Oakshade Library",
     "King’s Row",
     "Dragon’s Gate",
     "Skyline Gardens",
     "Primrose Boulevard",
     "Velvet Corner",
     "Gilded Archway",
     "Ironbridge Crossing",
     "Shadowbridge Arcade",
     "Sapphire Arena",
     "Quartz District",
     "Warehouse"
    ],
    "ans_distance": 66,
    "cost_time": 1.43
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Sapphire Arena\",\n        \"Moonlit Promenade\",\n        \"Skyline Gardens\",\n        \"Primrose Boulevard\",\n        \"Dragon’s Gate\",\n        \"Oakshade Library\",\n        \"Ironbridge Crossing\",\n        \"Velvet Corner\",\n        \"King’s Row\",\n        \"Shadowbridge Arcade\",\n        \"Quartz District\",\n        \"Gilded Archway\",\n        \"Knight’s Market\",\n        \"Haven Docks\",\n        \"Pennywhistle Arcade\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique requirements.\n        \"Total Distance\": The sum of all distances traveled during the delivery route, which needs to be minimized.\n        \"Route Optimization\": The process of determining the most efficient path to take in order to minimize travel distance while visiting each delivery point exactly once and returning to the starting point.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 31,
  "adj": [
   [
    0,
    7,
    6,
    8,
    10,
    2,
    8,
    7,
    2,
    8,
    9,
    10,
    5,
    1,
    6,
    10
   ],
   [
    7,
    0,
    4,
    8,
    3,
    2,
    10,
    3,
    6,
    8,
    3,
    5,
    4,
    3,
    3,
    4
   ],
   [
    6,
    4,
    0,
    9,
    6,
    7,
    9,
    2,
    9,
    9,
    2,
    4,
    7,
    7,
    6,
    8
   ],
   [
    8,
    8,
    9,
    0,
    9,
    7,
    3,
    10,
    5,
    6,
    9,
    9,
    8,
    9,
    4,
    4
   ],
   [
    10,
    3,
    6,
    9,
    0,
    3,
    1,
    7,
    10,
    4,
    2,
    2,
    8,
    8,
    4,
    3
   ],
   [
    2,
    2,
    7,
    7,
    3,
    0,
    4,
    2,
    1,
    10,
    3,
    2,
    8,
    5,
    3,
    1
   ],
   [
    8,
    10,
    9,
    3,
    1,
    4,
    0,
    5,
    9,
    3,
    3,
    8,
    8,
    10,
    2,
    6
   ],
   [
    7,
    3,
    2,
    10,
    7,
    2,
    5,
    0,
    9,
    1,
    8,
    4,
    6,
    5,
    10,
    3
   ],
   [
    2,
    6,
    9,
    5,
    10,
    1,
    9,
    9,
    0,
    5,
    5,
    2,
    7,
    10,
    9,
    10
   ],
   [
    8,
    8,
    9,
    6,
    4,
    10,
    3,
    1,
    5,
    0,
    10,
    2,
    2,
    10,
    2,
    1
   ],
   [
    9,
    3,
    2,
    9,
    2,
    3,
    3,
    8,
    5,
    10,
    0,
    1,
    2,
    2,
    3,
    1
   ],
   [
    10,
    5,
    4,
    9,
    2,
    2,
    8,
    4,
    2,
    2,
    1,
    0,
    8,
    10,
    3,
    6
   ],
   [
    5,
    4,
    7,
    8,
    8,
    8,
    8,
    6,
    7,
    2,
    2,
    8,
    0,
    1,
    6,
    7
   ],
   [
    1,
    3,
    7,
    9,
    8,
    5,
    10,
    5,
    10,
    10,
    2,
    10,
    1,
    0,
    7,
    2
   ],
   [
    6,
    3,
    6,
    4,
    4,
    3,
    2,
    10,
    9,
    2,
    3,
    3,
    6,
    7,
    0,
    5
   ],
   [
    10,
    4,
    8,
    4,
    3,
    1,
    6,
    3,
    10,
    1,
    1,
    6,
    7,
    2,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Willowshade Pavilion",
   "Haven Docks",
   "Flint Forge Quarter",
   "Pennywhistle Arcade",
   "Lighthouse Point",
   "Rosewood Hall",
   "Primrose Boulevard",
   "King’s Row",
   "Flare Alley",
   "Quarry Point",
   "Ironbridge Crossing",
   "Evergreen Circle",
   "Yarrow Plaza",
   "Granite Plaza",
   "Northwind Tower"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Lighthouse Point",
     "Northwind Tower",
     "Flare Alley",
     "Primrose Boulevard",
     "Haven Docks",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Flint Forge Quarter",
     "Rosewood Hall",
     "Pennywhistle Arcade",
     "Ironbridge Crossing",
     "Quarry Point",
     "Evergreen Circle",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 1.99
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Northwind Tower",
     "Quarry Point",
     "Pennywhistle Arcade",
     "Rosewood Hall",
     "Granite Plaza",
     "Flint Forge Quarter",
     "Flare Alley",
     "Primrose Boulevard",
     "Haven Docks",
     "Ironbridge Crossing",
     "King’s Row",
     "Willowshade Pavilion",
     "Evergreen Circle",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Evergreen Circle",
     "Flare Alley",
     "Primrose Boulevard",
     "Haven Docks",
     "Quarry Point",
     "Ironbridge Crossing",
     "Pennywhistle Arcade",
     "Rosewood Hall",
     "Granite Plaza",
     "Willowshade Pavilion",
     "Lighthouse Point",
     "King’s Row",
     "Flint Forge Quarter",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Evergreen Circle",
     "Flare Alley",
     "Primrose Boulevard",
     "Haven Docks",
     "Quarry Point",
     "Ironbridge Crossing",
     "Pennywhistle Arcade",
     "Rosewood Hall",
     "Granite Plaza",
     "Willowshade Pavilion",
     "Lighthouse Point",
     "King’s Row",
     "Flint Forge Quarter",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Ironbridge Crossing",
     "Quarry Point",
     "Evergreen Circle",
     "Flare Alley",
     "Primrose Boulevard",
     "Haven Docks",
     "Willowshade Pavilion",
     "Lighthouse Point",
     "Granite Plaza",
     "Flint Forge Quarter",
     "Rosewood Hall",
     "Pennywhistle Arcade",
     "Northwind Tower",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flint Forge Quarter",
     "Rosewood Hall",
     "Primrose Boulevard",
     "Haven Docks",
     "Granite Plaza",
     "Lighthouse Point",
     "Pennywhistle Arcade",
     "Quarry Point",
     "King’s Row",
     "Ironbridge Crossing",
     "Northwind Tower",
     "Yarrow Plaza",
     "Willowshade Pavilion",
     "Evergreen Circle",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 64,
    "cost_time": 1.43
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse while visiting each location once. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Willowshade Pavilion\",\n        \"Haven Docks\",\n        \"Flint Forge Quarter\",\n        \"Pennywhistle Arcade\",\n        \"Lighthouse Point\",\n        \"Rosewood Hall\",\n        \"Primrose Boulevard\",\n        \"King’s Row\",\n        \"Flare Alley\",\n        \"Quarry Point\",\n        \"Ironbridge Crossing\",\n        \"Evergreen Circle\",\n        \"Yarrow Plaza\",\n        \"Granite Plaza\",\n        \"Northwind Tower\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and ends their route.\n        \"Delivery Points\": The various locations where packages need to be delivered, each representing different types of businesses or residential areas.\n        \"Optimal Delivery Route\": The most efficient path that minimizes the total distance traveled while ensuring each delivery point is visited exactly once before returning to the warehouse.\n        \"Distance Table\": A table that lists the approximate distances (in kilometers) between each pair of delivery points, which is essential for calculating the optimal route.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 32,
  "adj": [
   [
    0,
    10,
    5,
    8,
    6,
    5,
    6,
    2,
    1,
    10,
    5,
    5,
    1,
    10,
    6,
    10
   ],
   [
    10,
    0,
    5,
    9,
    8,
    9,
    3,
    9,
    2,
    9,
    6,
    6,
    4,
    2,
    3,
    1
   ],
   [
    5,
    5,
    0,
    6,
    9,
    3,
    7,
    6,
    6,
    5,
    10,
    5,
    1,
    2,
    10,
    4
   ],
   [
    8,
    9,
    6,
    0,
    6,
    4,
    8,
    7,
    1,
    6,
    9,
    7,
    6,
    7,
    8,
    3
   ],
   [
    6,
    8,
    9,
    6,
    0,
    7,
    2,
    2,
    4,
    10,
    1,
    9,
    6,
    5,
    2,
    3
   ],
   [
    5,
    9,
    3,
    4,
    7,
    0,
    4,
    6,
    3,
    8,
    8,
    10,
    4,
    1,
    10,
    2
   ],
   [
    6,
    3,
    7,
    8,
    2,
    4,
    0,
    5,
    5,
    4,
    6,
    9,
    1,
    6,
    1,
    8
   ],
   [
    2,
    9,
    6,
    7,
    2,
    6,
    5,
    0,
    2,
    4,
    9,
    2,
    2,
    10,
    3,
    3
   ],
   [
    1,
    2,
    6,
    1,
    4,
    3,
    5,
    2,
    0,
    10,
    4,
    3,
    10,
    8,
    6,
    5
   ],
   [
    10,
    9,
    5,
    6,
    10,
    8,
    4,
    4,
    10,
    0,
    10,
    7,
    2,
    7,
    7,
    6
   ],
   [
    5,
    6,
    10,
    9,
    1,
    8,
    6,
    9,
    4,
    10,
    0,
    1,
    8,
    6,
    7,
    3
   ],
   [
    5,
    6,
    5,
    7,
    9,
    10,
    9,
    2,
    3,
    7,
    1,
    0,
    1,
    6,
    3,
    6
   ],
   [
    1,
    4,
    1,
    6,
    6,
    4,
    1,
    2,
    10,
    2,
    8,
    1,
    0,
    3,
    9,
    9
   ],
   [
    10,
    2,
    2,
    7,
    5,
    1,
    6,
    10,
    8,
    7,
    6,
    6,
    3,
    0,
    2,
    9
   ],
   [
    6,
    3,
    10,
    8,
    2,
    10,
    1,
    3,
    6,
    7,
    7,
    3,
    9,
    2,
    0,
    4
   ],
   [
    10,
    1,
    4,
    3,
    3,
    2,
    8,
    3,
    5,
    6,
    3,
    6,
    9,
    9,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Haven Docks",
   "Gilded Archway",
   "Flint Forge Quarter",
   "Yarrow Plaza",
   "Northwind Tower",
   "Willowshade Pavilion",
   "Westgate Station",
   "Temple Square",
   "Granite Plaza",
   "Velvet Corner",
   "Echo Station",
   "Beacon Tower",
   "Quartz District",
   "Riverstone Wharf",
   "Quarry Point"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Echo Station",
     "Velvet Corner",
     "Yarrow Plaza",
     "Riverstone Wharf",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Beacon Tower",
     "Gilded Archway",
     "Northwind Tower",
     "Quartz District",
     "Haven Docks",
     "Quarry Point",
     "Flint Forge Quarter",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 28,
    "cost_time": 1.95
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Beacon Tower",
     "Granite Plaza",
     "Echo Station",
     "Velvet Corner",
     "Yarrow Plaza",
     "Riverstone Wharf",
     "Willowshade Pavilion",
     "Gilded Archway",
     "Northwind Tower",
     "Quartz District",
     "Haven Docks",
     "Quarry Point",
     "Temple Square",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Flint Forge Quarter",
     "Quarry Point",
     "Haven Docks",
     "Quartz District",
     "Northwind Tower",
     "Gilded Archway",
     "Beacon Tower",
     "Willowshade Pavilion",
     "Riverstone Wharf",
     "Yarrow Plaza",
     "Velvet Corner",
     "Echo Station",
     "Westgate Station",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Flint Forge Quarter",
     "Quarry Point",
     "Haven Docks",
     "Quartz District",
     "Northwind Tower",
     "Gilded Archway",
     "Beacon Tower",
     "Willowshade Pavilion",
     "Riverstone Wharf",
     "Yarrow Plaza",
     "Velvet Corner",
     "Echo Station",
     "Westgate Station",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Yarrow Plaza",
     "Velvet Corner",
     "Echo Station",
     "Temple Square",
     "Flint Forge Quarter",
     "Gilded Archway",
     "Beacon Tower",
     "Granite Plaza",
     "Willowshade Pavilion",
     "Riverstone Wharf",
     "Quartz District",
     "Haven Docks",
     "Quarry Point",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Westgate Station",
     "Beacon Tower",
     "Granite Plaza",
     "Echo Station",
     "Riverstone Wharf",
     "Haven Docks",
     "Velvet Corner",
     "Yarrow Plaza",
     "Quarry Point",
     "Gilded Archway",
     "Flint Forge Quarter",
     "Northwind Tower",
     "Quartz District",
     "Willowshade Pavilion",
     "Warehouse"
    ],
    "ans_distance": 57,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts and ends at a central warehouse, visiting each delivery point once. This optimization is crucial for saving fuel, reducing delivery times, and enhancing overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Haven Docks\",\n        \"Gilded Archway\",\n        \"Flint Forge Quarter\",\n        \"Yarrow Plaza\",\n        \"Northwind Tower\",\n        \"Willowshade Pavilion\",\n        \"Westgate Station\",\n        \"Temple Square\",\n        \"Granite Plaza\",\n        \"Velvet Corner\",\n        \"Echo Station\",\n        \"Beacon Tower\",\n        \"Quartz District\",\n        \"Riverstone Wharf\",\n        \"Quarry Point\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique requirements. \n        \"Distance Table\": A matrix showing the approximate distances (in kilometers) between each pair of delivery points, which is essential for calculating the optimal route.\n        \"Optimal Route\": The most efficient path that minimizes the total distance traveled while ensuring that each delivery point is visited exactly once before returning to the starting point (the warehouse).\n        \"Urban Area\": A densely populated region characterized by significant human activity, often requiring efficient logistics and transportation solutions.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 33,
  "adj": [
   [
    0,
    2,
    6,
    1,
    9,
    9,
    5,
    1,
    4,
    3,
    5,
    4,
    9,
    6,
    1,
    10
   ],
   [
    2,
    0,
    8,
    8,
    7,
    2,
    10,
    2,
    8,
    8,
    4,
    7,
    8,
    8,
    10,
    10
   ],
   [
    6,
    8,
    0,
    4,
    2,
    10,
    10,
    5,
    10,
    2,
    10,
    1,
    2,
    3,
    9,
    1
   ],
   [
    1,
    8,
    4,
    0,
    2,
    1,
    9,
    2,
    1,
    5,
    5,
    2,
    3,
    10,
    10,
    4
   ],
   [
    9,
    7,
    2,
    2,
    0,
    1,
    4,
    8,
    4,
    3,
    10,
    9,
    3,
    4,
    6,
    5
   ],
   [
    9,
    2,
    10,
    1,
    1,
    0,
    9,
    4,
    4,
    4,
    9,
    5,
    9,
    6,
    2,
    3
   ],
   [
    5,
    10,
    10,
    9,
    4,
    9,
    0,
    10,
    8,
    6,
    4,
    2,
    9,
    10,
    8,
    8
   ],
   [
    1,
    2,
    5,
    2,
    8,
    4,
    10,
    0,
    8,
    10,
    4,
    10,
    1,
    4,
    6,
    9
   ],
   [
    4,
    8,
    10,
    1,
    4,
    4,
    8,
    8,
    0,
    2,
    10,
    9,
    6,
    10,
    8,
    4
   ],
   [
    3,
    8,
    2,
    5,
    3,
    4,
    6,
    10,
    2,
    0,
    5,
    9,
    6,
    4,
    10,
    2
   ],
   [
    5,
    4,
    10,
    5,
    10,
    9,
    4,
    4,
    10,
    5,
    0,
    1,
    2,
    7,
    10,
    8
   ],
   [
    4,
    7,
    1,
    2,
    9,
    5,
    2,
    10,
    9,
    9,
    1,
    0,
    2,
    1,
    10,
    10
   ],
   [
    9,
    8,
    2,
    3,
    3,
    9,
    9,
    1,
    6,
    6,
    2,
    2,
    0,
    8,
    8,
    4
   ],
   [
    6,
    8,
    3,
    10,
    4,
    6,
    10,
    4,
    10,
    4,
    7,
    1,
    8,
    0,
    1,
    8
   ],
   [
    1,
    10,
    9,
    10,
    6,
    2,
    8,
    6,
    8,
    10,
    10,
    10,
    8,
    1,
    0,
    3
   ],
   [
    10,
    10,
    1,
    4,
    5,
    3,
    8,
    9,
    4,
    2,
    8,
    10,
    4,
    8,
    3,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Amber Plaza",
   "Jade Fountain",
   "Oakshade Library",
   "Horizon Mall",
   "King’s Row",
   "Northwind Tower",
   "Mosaic Plaza",
   "Moonlit Promenade",
   "Duskwood Park",
   "Lunar Pier",
   "Sapphire Arena",
   "Temple Square",
   "Quarry Point",
   "Jasper Marina",
   "Rosewood Hall"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Moonlit Promenade",
     "Duskwood Park",
     "Rosewood Hall",
     "Jade Fountain",
     "Horizon Mall",
     "King’s Row",
     "Amber Plaza",
     "Mosaic Plaza",
     "Temple Square",
     "Lunar Pier",
     "Northwind Tower",
     "Sapphire Arena",
     "Quarry Point",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 2.05
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Lunar Pier",
     "Sapphire Arena",
     "Quarry Point",
     "Jasper Marina",
     "Mosaic Plaza",
     "Temple Square",
     "Jade Fountain",
     "Duskwood Park",
     "Rosewood Hall",
     "Northwind Tower",
     "Horizon Mall",
     "King’s Row",
     "Oakshade Library",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "King’s Row",
     "Horizon Mall",
     "Jade Fountain",
     "Sapphire Arena",
     "Lunar Pier",
     "Temple Square",
     "Mosaic Plaza",
     "Amber Plaza",
     "Moonlit Promenade",
     "Duskwood Park",
     "Rosewood Hall",
     "Jasper Marina",
     "Quarry Point",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "King’s Row",
     "Horizon Mall",
     "Jade Fountain",
     "Sapphire Arena",
     "Lunar Pier",
     "Temple Square",
     "Mosaic Plaza",
     "Amber Plaza",
     "Moonlit Promenade",
     "Duskwood Park",
     "Rosewood Hall",
     "Jasper Marina",
     "Quarry Point",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Mosaic Plaza",
     "Temple Square",
     "Lunar Pier",
     "Northwind Tower",
     "Sapphire Arena",
     "Quarry Point",
     "Jasper Marina",
     "Rosewood Hall",
     "Jade Fountain",
     "Duskwood Park",
     "Moonlit Promenade",
     "Horizon Mall",
     "King’s Row",
     "Oakshade Library",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "King’s Row",
     "Duskwood Park",
     "Moonlit Promenade",
     "Oakshade Library",
     "Temple Square",
     "Lunar Pier",
     "Northwind Tower",
     "Horizon Mall",
     "Rosewood Hall",
     "Jasper Marina",
     "Amber Plaza",
     "Sapphire Arena",
     "Quarry Point",
     "Jade Fountain",
     "Warehouse"
    ],
    "ans_distance": 60,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Amber Plaza\",\n        \"Jade Fountain\",\n        \"Oakshade Library\",\n        \"Horizon Mall\",\n        \"King’s Row\",\n        \"Northwind Tower\",\n        \"Mosaic Plaza\",\n        \"Moonlit Promenade\",\n        \"Duskwood Park\",\n        \"Lunar Pier\",\n        \"Sapphire Arena\",\n        \"Temple Square\",\n        \"Quarry Point\",\n        \"Jasper Marina\",\n        \"Rosewood Hall\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and ends their route.\n        \"Delivery Points\": The various locations where packages need to be delivered, each representing different types of businesses or residential areas.\n        \"Distance Table\": A table that provides the approximate distances (in kilometers) between each pair of delivery points, including the warehouse.\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse, minimizing total distance traveled.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 34,
  "adj": [
   [
    0,
    5,
    6,
    7,
    7,
    3,
    5,
    4,
    7,
    10,
    7,
    1,
    8,
    8,
    5,
    8
   ],
   [
    5,
    0,
    10,
    1,
    4,
    1,
    4,
    8,
    5,
    6,
    7,
    2,
    4,
    5,
    5,
    1
   ],
   [
    6,
    10,
    0,
    3,
    3,
    2,
    3,
    3,
    2,
    10,
    9,
    10,
    3,
    10,
    10,
    5
   ],
   [
    7,
    1,
    3,
    0,
    3,
    3,
    1,
    2,
    5,
    10,
    7,
    7,
    5,
    9,
    8,
    1
   ],
   [
    7,
    4,
    3,
    3,
    0,
    9,
    1,
    3,
    1,
    4,
    10,
    7,
    5,
    9,
    2,
    10
   ],
   [
    3,
    1,
    2,
    3,
    9,
    0,
    2,
    9,
    3,
    4,
    1,
    4,
    6,
    10,
    8,
    7
   ],
   [
    5,
    4,
    3,
    1,
    1,
    2,
    0,
    5,
    8,
    4,
    1,
    6,
    9,
    2,
    1,
    3
   ],
   [
    4,
    8,
    3,
    2,
    3,
    9,
    5,
    0,
    6,
    1,
    5,
    7,
    2,
    2,
    3,
    9
   ],
   [
    7,
    5,
    2,
    5,
    1,
    3,
    8,
    6,
    0,
    2,
    9,
    6,
    9,
    2,
    4,
    1
   ],
   [
    10,
    6,
    10,
    10,
    4,
    4,
    4,
    1,
    2,
    0,
    4,
    5,
    10,
    10,
    10,
    7
   ],
   [
    7,
    7,
    9,
    7,
    10,
    1,
    1,
    5,
    9,
    4,
    0,
    9,
    10,
    9,
    5,
    10
   ],
   [
    1,
    2,
    10,
    7,
    7,
    4,
    6,
    7,
    6,
    5,
    9,
    0,
    8,
    4,
    7,
    10
   ],
   [
    8,
    4,
    3,
    5,
    5,
    6,
    9,
    2,
    9,
    10,
    10,
    8,
    0,
    2,
    2,
    3
   ],
   [
    8,
    5,
    10,
    9,
    9,
    10,
    2,
    2,
    2,
    10,
    9,
    4,
    2,
    0,
    2,
    2
   ],
   [
    5,
    5,
    10,
    8,
    2,
    8,
    1,
    3,
    4,
    10,
    5,
    7,
    2,
    2,
    0,
    4
   ],
   [
    8,
    1,
    5,
    1,
    10,
    7,
    3,
    9,
    1,
    7,
    10,
    10,
    3,
    2,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Brass Lantern Tavern",
   "Mosaic Plaza",
   "Copper Clock Square",
   "Dragon’s Gate",
   "Haven Docks",
   "Willowshade Pavilion",
   "Amber Plaza",
   "Oakshade Library",
   "Moonlit Promenade",
   "Pennywhistle Arcade",
   "Jasper Marina",
   "Sapphire Arena",
   "Riverstone Wharf",
   "Nimbus Plaza",
   "Zenith Arena"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Willowshade Pavilion",
     "Dragon’s Gate",
     "Mosaic Plaza",
     "Oakshade Library",
     "Moonlit Promenade",
     "Amber Plaza",
     "Sapphire Arena",
     "Nimbus Plaza",
     "Riverstone Wharf",
     "Zenith Arena",
     "Copper Clock Square",
     "Brass Lantern Tavern",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 1.98
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Willowshade Pavilion",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Amber Plaza",
     "Moonlit Promenade",
     "Copper Clock Square",
     "Zenith Arena",
     "Brass Lantern Tavern",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Mosaic Plaza",
     "Oakshade Library",
     "Dragon’s Gate",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 47,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Brass Lantern Tavern",
     "Copper Clock Square",
     "Willowshade Pavilion",
     "Dragon’s Gate",
     "Oakshade Library",
     "Zenith Arena",
     "Riverstone Wharf",
     "Amber Plaza",
     "Moonlit Promenade",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Nimbus Plaza",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Brass Lantern Tavern",
     "Copper Clock Square",
     "Willowshade Pavilion",
     "Dragon’s Gate",
     "Oakshade Library",
     "Zenith Arena",
     "Riverstone Wharf",
     "Amber Plaza",
     "Moonlit Promenade",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Nimbus Plaza",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Riverstone Wharf",
     "Nimbus Plaza",
     "Sapphire Arena",
     "Zenith Arena",
     "Copper Clock Square",
     "Brass Lantern Tavern",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Willowshade Pavilion",
     "Dragon’s Gate",
     "Mosaic Plaza",
     "Oakshade Library",
     "Moonlit Promenade",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Haven Docks",
     "Pennywhistle Arcade",
     "Willowshade Pavilion",
     "Zenith Arena",
     "Oakshade Library",
     "Mosaic Plaza",
     "Dragon’s Gate",
     "Nimbus Plaza",
     "Brass Lantern Tavern",
     "Sapphire Arena",
     "Copper Clock Square",
     "Amber Plaza",
     "Moonlit Promenade",
     "Riverstone Wharf",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 1.4
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts from a central warehouse, visits each location, and returns to the warehouse. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Brass Lantern Tavern\",\n        \"Mosaic Plaza\",\n        \"Copper Clock Square\",\n        \"Dragon’s Gate\",\n        \"Haven Docks\",\n        \"Willowshade Pavilion\",\n        \"Amber Plaza\",\n        \"Oakshade Library\",\n        \"Moonlit Promenade\",\n        \"Pennywhistle Arcade\",\n        \"Jasper Marina\",\n        \"Sapphire Arena\",\n        \"Riverstone Wharf\",\n        \"Nimbus Plaza\",\n        \"Zenith Arena\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each with unique characteristics and requirements.\n        \"Total Distance\": The sum of distances traveled by the delivery driver during the route.\n        \"Optimal Route\": The most efficient path that minimizes the total distance while ensuring each delivery point is visited exactly once before returning to the starting point (warehouse).\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 35,
  "adj": [
   [
    0,
    6,
    3,
    7,
    6,
    2,
    3,
    7,
    10,
    9,
    9,
    2,
    7,
    4,
    6,
    1
   ],
   [
    6,
    0,
    5,
    1,
    1,
    5,
    1,
    4,
    6,
    8,
    8,
    3,
    5,
    10,
    1,
    9
   ],
   [
    3,
    5,
    0,
    6,
    7,
    7,
    4,
    7,
    8,
    9,
    7,
    1,
    10,
    2,
    10,
    8
   ],
   [
    7,
    1,
    6,
    0,
    2,
    6,
    7,
    9,
    9,
    4,
    3,
    2,
    1,
    8,
    10,
    8
   ],
   [
    6,
    1,
    7,
    2,
    0,
    9,
    1,
    6,
    4,
    5,
    7,
    6,
    3,
    1,
    1,
    4
   ],
   [
    2,
    5,
    7,
    6,
    9,
    0,
    1,
    4,
    2,
    2,
    3,
    7,
    5,
    6,
    10,
    10
   ],
   [
    3,
    1,
    4,
    7,
    1,
    1,
    0,
    6,
    10,
    3,
    6,
    3,
    9,
    9,
    6,
    3
   ],
   [
    7,
    4,
    7,
    9,
    6,
    4,
    6,
    0,
    7,
    4,
    5,
    4,
    3,
    7,
    6,
    8
   ],
   [
    10,
    6,
    8,
    9,
    4,
    2,
    10,
    7,
    0,
    3,
    3,
    3,
    9,
    7,
    1,
    5
   ],
   [
    9,
    8,
    9,
    4,
    5,
    2,
    3,
    4,
    3,
    0,
    6,
    8,
    9,
    3,
    9,
    9
   ],
   [
    9,
    8,
    7,
    3,
    7,
    3,
    6,
    5,
    3,
    6,
    0,
    7,
    9,
    3,
    10,
    8
   ],
   [
    2,
    3,
    1,
    2,
    6,
    7,
    3,
    4,
    3,
    8,
    7,
    0,
    10,
    3,
    6,
    2
   ],
   [
    7,
    5,
    10,
    1,
    3,
    5,
    9,
    3,
    9,
    9,
    9,
    10,
    0,
    4,
    10,
    8
   ],
   [
    4,
    10,
    2,
    8,
    1,
    6,
    9,
    7,
    7,
    3,
    3,
    3,
    4,
    0,
    4,
    2
   ],
   [
    6,
    1,
    10,
    10,
    1,
    10,
    6,
    6,
    1,
    9,
    10,
    6,
    10,
    4,
    0,
    2
   ],
   [
    1,
    9,
    8,
    8,
    4,
    10,
    3,
    8,
    5,
    9,
    8,
    2,
    8,
    2,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Azure Gardens",
   "Silvercrest Observatory",
   "Maplewood Conservatory",
   "Lighthouse Point",
   "Knight’s Market",
   "Temple Square",
   "Amber Plaza",
   "Flint Forge Quarter",
   "Haven Docks",
   "Quartz District",
   "King’s Row",
   "Oakshade Library",
   "Ironbridge Crossing",
   "Echo Station",
   "Rosewood Hall"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Haven Docks",
     "Amber Plaza",
     "Oakshade Library",
     "Maplewood Conservatory",
     "Azure Gardens",
     "Temple Square",
     "Lighthouse Point",
     "Echo Station",
     "Flint Forge Quarter",
     "Quartz District",
     "Ironbridge Crossing",
     "Silvercrest Observatory",
     "King’s Row",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 1.95
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Lighthouse Point",
     "Azure Gardens",
     "Echo Station",
     "Flint Forge Quarter",
     "Knight’s Market",
     "Haven Docks",
     "Amber Plaza",
     "Oakshade Library",
     "Maplewood Conservatory",
     "Quartz District",
     "Temple Square",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Rosewood Hall",
     "King’s Row",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Lighthouse Point",
     "Azure Gardens",
     "Maplewood Conservatory",
     "Oakshade Library",
     "Amber Plaza",
     "Knight’s Market",
     "Temple Square",
     "Haven Docks",
     "Flint Forge Quarter",
     "Echo Station",
     "Quartz District",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Rosewood Hall",
     "King’s Row",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Lighthouse Point",
     "Azure Gardens",
     "Maplewood Conservatory",
     "Oakshade Library",
     "Amber Plaza",
     "Knight’s Market",
     "Temple Square",
     "Haven Docks",
     "Flint Forge Quarter",
     "Echo Station",
     "Quartz District",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Quartz District",
     "Maplewood Conservatory",
     "Oakshade Library",
     "Amber Plaza",
     "Haven Docks",
     "Flint Forge Quarter",
     "Echo Station",
     "Azure Gardens",
     "King’s Row",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Lighthouse Point",
     "Temple Square",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Oakshade Library",
     "Haven Docks",
     "Maplewood Conservatory",
     "Azure Gardens",
     "Temple Square",
     "Quartz District",
     "Flint Forge Quarter",
     "Echo Station",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Knight’s Market",
     "King’s Row",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 61,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area with 15 distinct delivery points. The driver must start from a central warehouse, deliver packages to each location, and return to the warehouse. The goal is to minimize the total distance traveled, which is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Azure Gardens\",\n        \"Silvercrest Observatory\",\n        \"Maplewood Conservatory\",\n        \"Lighthouse Point\",\n        \"Knight’s Market\",\n        \"Temple Square\",\n        \"Amber Plaza\",\n        \"Flint Forge Quarter\",\n        \"Haven Docks\",\n        \"Quartz District\",\n        \"King’s Row\",\n        \"Oakshade Library\",\n        \"Ironbridge Crossing\",\n        \"Echo Station\",\n        \"Rosewood Hall\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": \"Distinct locations where packages need to be delivered, each representing a different type of business or residential area.\",\n        \"Distance Table\": \"A table that provides the approximate distance (in kilometers) between each pair of delivery points, including the warehouse.\",\n        \"Optimal Delivery Route\": \"The shortest possible route that allows the driver to start from the warehouse, visit each delivery point exactly once, and return to the warehouse.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 36,
  "adj": [
   [
    0,
    10,
    10,
    7,
    3,
    5,
    4,
    10,
    8,
    7,
    7,
    9,
    1,
    2,
    2,
    1
   ],
   [
    10,
    0,
    4,
    5,
    9,
    10,
    2,
    1,
    3,
    7,
    5,
    5,
    6,
    2,
    9,
    1
   ],
   [
    10,
    4,
    0,
    4,
    2,
    9,
    10,
    1,
    7,
    6,
    7,
    3,
    7,
    7,
    8,
    2
   ],
   [
    7,
    5,
    4,
    0,
    6,
    5,
    2,
    1,
    3,
    9,
    9,
    5,
    6,
    2,
    10,
    1
   ],
   [
    3,
    9,
    2,
    6,
    0,
    10,
    10,
    2,
    8,
    6,
    4,
    4,
    6,
    5,
    7,
    8
   ],
   [
    5,
    10,
    9,
    5,
    10,
    0,
    9,
    2,
    8,
    10,
    4,
    5,
    6,
    8,
    7,
    8
   ],
   [
    4,
    2,
    10,
    2,
    10,
    9,
    0,
    3,
    2,
    5,
    6,
    10,
    6,
    2,
    1,
    7
   ],
   [
    10,
    1,
    1,
    1,
    2,
    2,
    3,
    0,
    5,
    8,
    9,
    6,
    9,
    2,
    7,
    3
   ],
   [
    8,
    3,
    7,
    3,
    8,
    8,
    2,
    5,
    0,
    2,
    10,
    10,
    2,
    2,
    9,
    6
   ],
   [
    7,
    7,
    6,
    9,
    6,
    10,
    5,
    8,
    2,
    0,
    9,
    9,
    10,
    3,
    8,
    4
   ],
   [
    7,
    5,
    7,
    9,
    4,
    4,
    6,
    9,
    10,
    9,
    0,
    8,
    6,
    4,
    3,
    10
   ],
   [
    9,
    5,
    3,
    5,
    4,
    5,
    10,
    6,
    10,
    9,
    8,
    0,
    7,
    10,
    1,
    10
   ],
   [
    1,
    6,
    7,
    6,
    6,
    6,
    6,
    9,
    2,
    10,
    6,
    7,
    0,
    8,
    10,
    3
   ],
   [
    2,
    2,
    7,
    2,
    5,
    8,
    2,
    2,
    2,
    3,
    4,
    10,
    8,
    0,
    6,
    10
   ],
   [
    2,
    9,
    8,
    10,
    7,
    7,
    1,
    7,
    9,
    8,
    3,
    1,
    10,
    6,
    0,
    10
   ],
   [
    1,
    1,
    2,
    1,
    8,
    8,
    7,
    3,
    6,
    4,
    10,
    10,
    3,
    10,
    10,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Moonlit Promenade",
   "Velvet Corner",
   "Flare Alley",
   "Riverstone Wharf",
   "Temple Square",
   "Skyline Gardens",
   "Duskwood Park",
   "Westgate Station",
   "Lunar Pier",
   "Gilded Archway",
   "Oakshade Library",
   "Evergreen Circle",
   "Willowshade Pavilion",
   "Granite Plaza",
   "Amber Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Westgate Station",
     "Lunar Pier",
     "Willowshade Pavilion",
     "Moonlit Promenade",
     "Skyline Gardens",
     "Granite Plaza",
     "Oakshade Library",
     "Velvet Corner",
     "Riverstone Wharf",
     "Gilded Archway",
     "Temple Square",
     "Duskwood Park",
     "Flare Alley",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 2.02
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Oakshade Library",
     "Riverstone Wharf",
     "Velvet Corner",
     "Duskwood Park",
     "Temple Square",
     "Gilded Archway",
     "Skyline Gardens",
     "Westgate Station",
     "Lunar Pier",
     "Willowshade Pavilion",
     "Amber Plaza",
     "Moonlit Promenade",
     "Flare Alley",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 52,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Westgate Station",
     "Skyline Gardens",
     "Granite Plaza",
     "Oakshade Library",
     "Velvet Corner",
     "Duskwood Park",
     "Moonlit Promenade",
     "Amber Plaza",
     "Flare Alley",
     "Willowshade Pavilion",
     "Lunar Pier",
     "Riverstone Wharf",
     "Gilded Archway",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Westgate Station",
     "Skyline Gardens",
     "Granite Plaza",
     "Oakshade Library",
     "Velvet Corner",
     "Duskwood Park",
     "Moonlit Promenade",
     "Amber Plaza",
     "Flare Alley",
     "Willowshade Pavilion",
     "Lunar Pier",
     "Riverstone Wharf",
     "Gilded Archway",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Oakshade Library",
     "Duskwood Park",
     "Temple Square",
     "Gilded Archway",
     "Evergreen Circle",
     "Westgate Station",
     "Lunar Pier",
     "Riverstone Wharf",
     "Velvet Corner",
     "Moonlit Promenade",
     "Amber Plaza",
     "Flare Alley",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Oakshade Library",
     "Granite Plaza",
     "Gilded Archway",
     "Westgate Station",
     "Temple Square",
     "Velvet Corner",
     "Duskwood Park",
     "Moonlit Promenade",
     "Willowshade Pavilion",
     "Skyline Gardens",
     "Flare Alley",
     "Riverstone Wharf",
     "Lunar Pier",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 64,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points, and the driver must start from a central warehouse, deliver packages to each location, and return to the warehouse. The goal is to minimize the total distance traveled, which will help save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Moonlit Promenade\",\n        \"Velvet Corner\",\n        \"Flare Alley\",\n        \"Riverstone Wharf\",\n        \"Temple Square\",\n        \"Skyline Gardens\",\n        \"Duskwood Park\",\n        \"Westgate Station\",\n        \"Lunar Pier\",\n        \"Gilded Archway\",\n        \"Oakshade Library\",\n        \"Evergreen Circle\",\n        \"Willowshade Pavilion\",\n        \"Granite Plaza\",\n        \"Amber Plaza\"\n    ],\n    \"definitions\": {\n        \"delivery point\": \"A specific location where packages need to be delivered.\",\n        \"central warehouse\": \"The starting point for the delivery driver, located near the city center.\",\n        \"route optimization\": \"The process of determining the most efficient path to minimize travel distance and time.\",\n        \"urban area\": \"A densely populated region characterized by human-made structures and infrastructure.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 37,
  "adj": [
   [
    0,
    8,
    7,
    10,
    5,
    7,
    7,
    8,
    1,
    4,
    6,
    4,
    9,
    9,
    4,
    4
   ],
   [
    8,
    0,
    6,
    10,
    6,
    3,
    1,
    3,
    4,
    7,
    8,
    10,
    2,
    1,
    2,
    5
   ],
   [
    7,
    6,
    0,
    1,
    1,
    8,
    3,
    8,
    7,
    3,
    10,
    5,
    1,
    3,
    9,
    1
   ],
   [
    10,
    10,
    1,
    0,
    9,
    9,
    4,
    8,
    3,
    9,
    5,
    4,
    1,
    2,
    2,
    5
   ],
   [
    5,
    6,
    1,
    9,
    0,
    7,
    6,
    5,
    2,
    4,
    4,
    7,
    2,
    2,
    1,
    4
   ],
   [
    7,
    3,
    8,
    9,
    7,
    0,
    6,
    10,
    2,
    7,
    9,
    10,
    3,
    5,
    5,
    7
   ],
   [
    7,
    1,
    3,
    4,
    6,
    6,
    0,
    4,
    8,
    3,
    7,
    7,
    9,
    8,
    2,
    6
   ],
   [
    8,
    3,
    8,
    8,
    5,
    10,
    4,
    0,
    2,
    8,
    5,
    5,
    10,
    3,
    9,
    7
   ],
   [
    1,
    4,
    7,
    3,
    2,
    2,
    8,
    2,
    0,
    4,
    8,
    8,
    4,
    1,
    5,
    6
   ],
   [
    4,
    7,
    3,
    9,
    4,
    7,
    3,
    8,
    4,
    0,
    8,
    7,
    5,
    6,
    5,
    4
   ],
   [
    6,
    8,
    10,
    5,
    4,
    9,
    7,
    5,
    8,
    8,
    0,
    10,
    10,
    7,
    4,
    10
   ],
   [
    4,
    10,
    5,
    4,
    7,
    10,
    7,
    5,
    8,
    7,
    10,
    0,
    9,
    4,
    3,
    6
   ],
   [
    9,
    2,
    1,
    1,
    2,
    3,
    9,
    10,
    4,
    5,
    10,
    9,
    0,
    4,
    4,
    9
   ],
   [
    9,
    1,
    3,
    2,
    2,
    5,
    8,
    3,
    1,
    6,
    7,
    4,
    4,
    0,
    5,
    4
   ],
   [
    4,
    2,
    9,
    2,
    1,
    5,
    2,
    9,
    5,
    5,
    4,
    3,
    4,
    5,
    0,
    4
   ],
   [
    4,
    5,
    1,
    5,
    4,
    7,
    6,
    7,
    6,
    4,
    10,
    6,
    9,
    4,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Oakshade Library",
   "Duskwood Park",
   "Westgate Station",
   "Northwind Tower",
   "Sapphire Arena",
   "Echo Station",
   "Ivory Spire Cathedral",
   "Lunar Pier",
   "Rosewood Hall",
   "Temple Square",
   "Granite Plaza",
   "Quartz District",
   "Brass Lantern Tavern",
   "King’s Row",
   "Maplewood Conservatory"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Sapphire Arena",
     "Quartz District",
     "Westgate Station",
     "Duskwood Park",
     "Maplewood Conservatory",
     "Rosewood Hall",
     "Echo Station",
     "Oakshade Library",
     "Brass Lantern Tavern",
     "Ivory Spire Cathedral",
     "Temple Square",
     "Northwind Tower",
     "King’s Row",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 1.95
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Rosewood Hall",
     "Duskwood Park",
     "Maplewood Conservatory",
     "Northwind Tower",
     "Temple Square",
     "King’s Row",
     "Granite Plaza",
     "Westgate Station",
     "Quartz District",
     "Oakshade Library",
     "Brass Lantern Tavern",
     "Lunar Pier",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Sapphire Arena",
     "Warehouse"
    ],
    "ans_distance": 51,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Brass Lantern Tavern",
     "Oakshade Library",
     "Echo Station",
     "King’s Row",
     "Northwind Tower",
     "Duskwood Park",
     "Westgate Station",
     "Quartz District",
     "Sapphire Arena",
     "Rosewood Hall",
     "Maplewood Conservatory",
     "Granite Plaza",
     "Ivory Spire Cathedral",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Brass Lantern Tavern",
     "Oakshade Library",
     "Echo Station",
     "King’s Row",
     "Northwind Tower",
     "Duskwood Park",
     "Westgate Station",
     "Quartz District",
     "Sapphire Arena",
     "Rosewood Hall",
     "Maplewood Conservatory",
     "Granite Plaza",
     "Ivory Spire Cathedral",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "King’s Row",
     "Northwind Tower",
     "Rosewood Hall",
     "Echo Station",
     "Oakshade Library",
     "Brass Lantern Tavern",
     "Temple Square",
     "Ivory Spire Cathedral",
     "Lunar Pier",
     "Sapphire Arena",
     "Quartz District",
     "Westgate Station",
     "Duskwood Park",
     "Maplewood Conservatory",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Maplewood Conservatory",
     "Duskwood Park",
     "Quartz District",
     "Rosewood Hall",
     "Northwind Tower",
     "King’s Row",
     "Oakshade Library",
     "Echo Station",
     "Westgate Station",
     "Lunar Pier",
     "Sapphire Arena",
     "Temple Square",
     "Ivory Spire Cathedral",
     "Brass Lantern Tavern",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 53,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Oakshade Library\",\n        \"Duskwood Park\",\n        \"Westgate Station\",\n        \"Northwind Tower\",\n        \"Sapphire Arena\",\n        \"Echo Station\",\n        \"Ivory Spire Cathedral\",\n        \"Lunar Pier\",\n        \"Rosewood Hall\",\n        \"Temple Square\",\n        \"Granite Plaza\",\n        \"Quartz District\",\n        \"Brass Lantern Tavern\",\n        \"King’s Row\",\n        \"Maplewood Conservatory\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which deliveries are dispatched and to which the driver must return after completing the deliveries.\",\n        \"Delivery Points\": The various locations where packages need to be dropped off, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Distance Table\": A comprehensive list detailing the travel distances (in kilometers) between each pair of delivery points, which is crucial for determining the most efficient route.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 38,
  "adj": [
   [
    0,
    9,
    8,
    7,
    7,
    3,
    7,
    4,
    7,
    9,
    5,
    8,
    4,
    8,
    9,
    10
   ],
   [
    9,
    0,
    2,
    7,
    1,
    9,
    2,
    5,
    5,
    8,
    6,
    10,
    7,
    8,
    2,
    8
   ],
   [
    8,
    2,
    0,
    4,
    5,
    2,
    8,
    2,
    4,
    10,
    9,
    7,
    9,
    1,
    3,
    3
   ],
   [
    7,
    7,
    4,
    0,
    2,
    9,
    5,
    10,
    7,
    6,
    9,
    7,
    7,
    7,
    6,
    5
   ],
   [
    7,
    1,
    5,
    2,
    0,
    1,
    9,
    6,
    1,
    7,
    1,
    1,
    2,
    8,
    7,
    1
   ],
   [
    3,
    9,
    2,
    9,
    1,
    0,
    10,
    3,
    7,
    10,
    6,
    10,
    4,
    7,
    1,
    7
   ],
   [
    7,
    2,
    8,
    5,
    9,
    10,
    0,
    2,
    2,
    6,
    7,
    1,
    5,
    2,
    5,
    5
   ],
   [
    4,
    5,
    2,
    10,
    6,
    3,
    2,
    0,
    3,
    10,
    10,
    8,
    2,
    4,
    4,
    1
   ],
   [
    7,
    5,
    4,
    7,
    1,
    7,
    2,
    3,
    0,
    2,
    6,
    9,
    1,
    5,
    3,
    1
   ],
   [
    9,
    8,
    10,
    6,
    7,
    10,
    6,
    10,
    2,
    0,
    9,
    5,
    7,
    7,
    4,
    10
   ],
   [
    5,
    6,
    9,
    9,
    1,
    6,
    7,
    10,
    6,
    9,
    0,
    6,
    2,
    9,
    10,
    6
   ],
   [
    8,
    10,
    7,
    7,
    1,
    10,
    1,
    8,
    9,
    5,
    6,
    0,
    8,
    10,
    10,
    1
   ],
   [
    4,
    7,
    9,
    7,
    2,
    4,
    5,
    2,
    1,
    7,
    2,
    8,
    0,
    8,
    2,
    9
   ],
   [
    8,
    8,
    1,
    7,
    8,
    7,
    2,
    4,
    5,
    7,
    9,
    10,
    8,
    0,
    7,
    2
   ],
   [
    9,
    2,
    3,
    6,
    7,
    1,
    5,
    4,
    3,
    4,
    10,
    10,
    2,
    7,
    0,
    5
   ],
   [
    10,
    8,
    3,
    5,
    1,
    7,
    5,
    1,
    1,
    10,
    6,
    1,
    9,
    2,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Ironbridge Crossing",
   "Sapphire Arena",
   "Maplewood Conservatory",
   "King’s Row",
   "Horizon Mall",
   "Silvercrest Observatory",
   "Amber Plaza",
   "Opal Theater",
   "Ivory Spire Cathedral",
   "Jasper Marina",
   "Shadowbridge Arcade",
   "Velvet Corner",
   "Evergreen Circle",
   "Duskwood Park",
   "Lunar Pier"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Duskwood Park",
     "Ironbridge Crossing",
     "Sapphire Arena",
     "Evergreen Circle",
     "Silvercrest Observatory",
     "Shadowbridge Arcade",
     "Lunar Pier",
     "Amber Plaza",
     "Velvet Corner",
     "Opal Theater",
     "Ivory Spire Cathedral",
     "Maplewood Conservatory",
     "King’s Row",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 2.03
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Lunar Pier",
     "King’s Row",
     "Jasper Marina",
     "Velvet Corner",
     "Opal Theater",
     "Ivory Spire Cathedral",
     "Maplewood Conservatory",
     "Shadowbridge Arcade",
     "Silvercrest Observatory",
     "Evergreen Circle",
     "Sapphire Arena",
     "Ironbridge Crossing",
     "Horizon Mall",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "King’s Row",
     "Ironbridge Crossing",
     "Sapphire Arena",
     "Evergreen Circle",
     "Silvercrest Observatory",
     "Shadowbridge Arcade",
     "Lunar Pier",
     "Amber Plaza",
     "Velvet Corner",
     "Opal Theater",
     "Ivory Spire Cathedral",
     "Duskwood Park",
     "Maplewood Conservatory",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "King’s Row",
     "Ironbridge Crossing",
     "Sapphire Arena",
     "Evergreen Circle",
     "Silvercrest Observatory",
     "Shadowbridge Arcade",
     "Lunar Pier",
     "Amber Plaza",
     "Velvet Corner",
     "Opal Theater",
     "Ivory Spire Cathedral",
     "Duskwood Park",
     "Maplewood Conservatory",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "King’s Row",
     "Shadowbridge Arcade",
     "Lunar Pier",
     "Amber Plaza",
     "Velvet Corner",
     "Opal Theater",
     "Ivory Spire Cathedral",
     "Maplewood Conservatory",
     "Sapphire Arena",
     "Evergreen Circle",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Duskwood Park",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Lunar Pier",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Horizon Mall",
     "Duskwood Park",
     "Ivory Spire Cathedral",
     "Shadowbridge Arcade",
     "King’s Row",
     "Maplewood Conservatory",
     "Opal Theater",
     "Sapphire Arena",
     "Evergreen Circle",
     "Jasper Marina",
     "Velvet Corner",
     "Warehouse"
    ],
    "ans_distance": 61,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse while visiting each delivery point once. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Ironbridge Crossing\",\n        \"Sapphire Arena\",\n        \"Maplewood Conservatory\",\n        \"King’s Row\",\n        \"Horizon Mall\",\n        \"Silvercrest Observatory\",\n        \"Amber Plaza\",\n        \"Opal Theater\",\n        \"Ivory Spire Cathedral\",\n        \"Jasper Marina\",\n        \"Shadowbridge Arcade\",\n        \"Velvet Corner\",\n        \"Evergreen Circle\",\n        \"Duskwood Park\",\n        \"Lunar Pier\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be dropped off, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Distance Table\": A matrix showing the approximate distances (in kilometers) between each pair of delivery points, including the warehouse, which is essential for calculating the most efficient route.\",\n        \"Optimal Delivery Route\": The shortest possible path that allows the delivery driver to visit each delivery point exactly once before returning to the warehouse, minimizing total travel distance.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 39,
  "adj": [
   [
    0,
    2,
    5,
    10,
    4,
    5,
    2,
    6,
    7,
    3,
    9,
    4,
    9,
    3,
    8,
    3
   ],
   [
    2,
    0,
    10,
    6,
    4,
    9,
    8,
    7,
    7,
    4,
    1,
    8,
    7,
    2,
    3,
    3
   ],
   [
    5,
    10,
    0,
    7,
    8,
    2,
    5,
    10,
    8,
    9,
    10,
    4,
    6,
    3,
    6,
    3
   ],
   [
    10,
    6,
    7,
    0,
    10,
    3,
    10,
    7,
    8,
    7,
    1,
    3,
    2,
    6,
    9,
    5
   ],
   [
    4,
    4,
    8,
    10,
    0,
    7,
    3,
    3,
    9,
    6,
    3,
    5,
    2,
    10,
    10,
    9
   ],
   [
    5,
    9,
    2,
    3,
    7,
    0,
    4,
    10,
    9,
    2,
    1,
    10,
    8,
    3,
    1,
    7
   ],
   [
    2,
    8,
    5,
    10,
    3,
    4,
    0,
    4,
    5,
    3,
    6,
    7,
    2,
    5,
    3,
    6
   ],
   [
    6,
    7,
    10,
    7,
    3,
    10,
    4,
    0,
    4,
    9,
    3,
    10,
    1,
    3,
    10,
    6
   ],
   [
    7,
    7,
    8,
    8,
    9,
    9,
    5,
    4,
    0,
    6,
    9,
    5,
    7,
    1,
    2,
    5
   ],
   [
    3,
    4,
    9,
    7,
    6,
    2,
    3,
    9,
    6,
    0,
    5,
    7,
    4,
    1,
    5,
    6
   ],
   [
    9,
    1,
    10,
    1,
    3,
    1,
    6,
    3,
    9,
    5,
    0,
    4,
    1,
    8,
    8,
    6
   ],
   [
    4,
    8,
    4,
    3,
    5,
    10,
    7,
    10,
    5,
    7,
    4,
    0,
    8,
    8,
    5,
    10
   ],
   [
    9,
    7,
    6,
    2,
    2,
    8,
    2,
    1,
    7,
    4,
    1,
    8,
    0,
    10,
    3,
    3
   ],
   [
    3,
    2,
    3,
    6,
    10,
    3,
    5,
    3,
    1,
    1,
    8,
    8,
    10,
    0,
    3,
    3
   ],
   [
    8,
    3,
    6,
    9,
    10,
    1,
    3,
    10,
    2,
    5,
    8,
    5,
    3,
    3,
    0,
    1
   ],
   [
    3,
    3,
    3,
    5,
    9,
    7,
    6,
    6,
    5,
    6,
    6,
    10,
    3,
    3,
    1,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Zenith Arena",
   "Flint Forge Quarter",
   "Brass Lantern Tavern",
   "Willowshade Pavilion",
   "Ironbridge Crossing",
   "Flare Alley",
   "Lighthouse Point",
   "Haven Docks",
   "Gilded Archway",
   "Granite Plaza",
   "Sapphire Arena",
   "Knight’s Market",
   "Beacon Tower",
   "Horizon Mall",
   "Maplewood Conservatory"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Granite Plaza",
     "Brass Lantern Tavern",
     "Sapphire Arena",
     "Flint Forge Quarter",
     "Ironbridge Crossing",
     "Gilded Archway",
     "Beacon Tower",
     "Haven Docks",
     "Horizon Mall",
     "Maplewood Conservatory",
     "Knight’s Market",
     "Lighthouse Point",
     "Willowshade Pavilion",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 1.96
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Lighthouse Point",
     "Granite Plaza",
     "Ironbridge Crossing",
     "Gilded Archway",
     "Beacon Tower",
     "Haven Docks",
     "Zenith Arena",
     "Maplewood Conservatory",
     "Horizon Mall",
     "Flint Forge Quarter",
     "Sapphire Arena",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Granite Plaza",
     "Brass Lantern Tavern",
     "Knight’s Market",
     "Lighthouse Point",
     "Willowshade Pavilion",
     "Flare Alley",
     "Gilded Archway",
     "Beacon Tower",
     "Haven Docks",
     "Horizon Mall",
     "Ironbridge Crossing",
     "Flint Forge Quarter",
     "Maplewood Conservatory",
     "Sapphire Arena",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Granite Plaza",
     "Brass Lantern Tavern",
     "Knight’s Market",
     "Lighthouse Point",
     "Willowshade Pavilion",
     "Flare Alley",
     "Gilded Archway",
     "Beacon Tower",
     "Haven Docks",
     "Horizon Mall",
     "Ironbridge Crossing",
     "Flint Forge Quarter",
     "Maplewood Conservatory",
     "Sapphire Arena",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Gilded Archway",
     "Ironbridge Crossing",
     "Horizon Mall",
     "Haven Docks",
     "Beacon Tower",
     "Zenith Arena",
     "Granite Plaza",
     "Willowshade Pavilion",
     "Lighthouse Point",
     "Knight’s Market",
     "Brass Lantern Tavern",
     "Sapphire Arena",
     "Flint Forge Quarter",
     "Maplewood Conservatory",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Beacon Tower",
     "Flint Forge Quarter",
     "Sapphire Arena",
     "Haven Docks",
     "Horizon Mall",
     "Granite Plaza",
     "Lighthouse Point",
     "Maplewood Conservatory",
     "Zenith Arena",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Brass Lantern Tavern",
     "Ironbridge Crossing",
     "Flare Alley",
     "Gilded Archway",
     "Warehouse"
    ],
    "ans_distance": 58,
    "cost_time": 1.4
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts and ends at the central warehouse while visiting each delivery point exactly once. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Zenith Arena\",\n        \"Flint Forge Quarter\",\n        \"Brass Lantern Tavern\",\n        \"Willowshade Pavilion\",\n        \"Ironbridge Crossing\",\n        \"Flare Alley\",\n        \"Lighthouse Point\",\n        \"Haven Docks\",\n        \"Gilded Archway\",\n        \"Granite Plaza\",\n        \"Sapphire Arena\",\n        \"Knight’s Market\",\n        \"Beacon Tower\",\n        \"Horizon Mall\",\n        \"Maplewood Conservatory\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\",\n        \"Central Warehouse\": The starting and ending point for the delivery driver, located near the city center.\",\n        \"Travel Distance\": The distance between each pair of delivery points, which varies based on city traffic patterns and street layouts.\",\n        \"Optimal Delivery Route\": The most efficient path that minimizes the total distance traveled while ensuring each delivery point is visited exactly once before returning to the warehouse.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 40,
  "adj": [
   [
    0,
    7,
    10,
    3,
    3,
    8,
    6,
    3,
    10,
    4,
    9,
    2,
    9,
    9,
    7,
    2
   ],
   [
    7,
    0,
    6,
    2,
    3,
    7,
    3,
    1,
    8,
    1,
    7,
    10,
    6,
    1,
    4,
    2
   ],
   [
    10,
    6,
    0,
    8,
    1,
    9,
    5,
    8,
    6,
    10,
    8,
    2,
    4,
    7,
    2,
    3
   ],
   [
    3,
    2,
    8,
    0,
    6,
    5,
    8,
    4,
    5,
    9,
    7,
    9,
    7,
    10,
    1,
    4
   ],
   [
    3,
    3,
    1,
    6,
    0,
    4,
    3,
    7,
    1,
    8,
    6,
    4,
    8,
    6,
    10,
    1
   ],
   [
    8,
    7,
    9,
    5,
    4,
    0,
    10,
    2,
    5,
    4,
    9,
    2,
    8,
    8,
    4,
    1
   ],
   [
    6,
    3,
    5,
    8,
    3,
    10,
    0,
    9,
    4,
    3,
    4,
    8,
    7,
    7,
    9,
    7
   ],
   [
    3,
    1,
    8,
    4,
    7,
    2,
    9,
    0,
    5,
    8,
    8,
    4,
    2,
    9,
    1,
    3
   ],
   [
    10,
    8,
    6,
    5,
    1,
    5,
    4,
    5,
    0,
    6,
    1,
    1,
    8,
    1,
    10,
    2
   ],
   [
    4,
    1,
    10,
    9,
    8,
    4,
    3,
    8,
    6,
    0,
    1,
    4,
    10,
    8,
    6,
    1
   ],
   [
    9,
    7,
    8,
    7,
    6,
    9,
    4,
    8,
    1,
    1,
    0,
    3,
    8,
    7,
    3,
    2
   ],
   [
    2,
    10,
    2,
    9,
    4,
    2,
    8,
    4,
    1,
    4,
    3,
    0,
    2,
    4,
    6,
    1
   ],
   [
    9,
    6,
    4,
    7,
    8,
    8,
    7,
    2,
    8,
    10,
    8,
    2,
    0,
    3,
    8,
    8
   ],
   [
    9,
    1,
    7,
    10,
    6,
    8,
    7,
    9,
    1,
    8,
    7,
    4,
    3,
    0,
    9,
    5
   ],
   [
    7,
    4,
    2,
    1,
    10,
    4,
    9,
    1,
    10,
    6,
    3,
    6,
    8,
    9,
    0,
    6
   ],
   [
    2,
    2,
    3,
    4,
    1,
    1,
    7,
    3,
    2,
    1,
    2,
    1,
    8,
    5,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Twilight Harbor",
   "Riverstone Wharf",
   "Azure Gardens",
   "Flint Forge Quarter",
   "Knight’s Market",
   "Horizon Mall",
   "Brass Lantern Tavern",
   "Rosewood Hall",
   "Oakshade Library",
   "Westgate Station",
   "Duskwood Park",
   "Cobalt Market",
   "Opal Theater",
   "Nimbus Plaza",
   "Umbra Theater"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Nimbus Plaza",
     "Riverstone Wharf",
     "Flint Forge Quarter",
     "Horizon Mall",
     "Twilight Harbor",
     "Opal Theater",
     "Rosewood Hall",
     "Westgate Station",
     "Oakshade Library",
     "Umbra Theater",
     "Knight’s Market",
     "Brass Lantern Tavern",
     "Cobalt Market",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 1.97
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Nimbus Plaza",
     "Brass Lantern Tavern",
     "Knight’s Market",
     "Umbra Theater",
     "Flint Forge Quarter",
     "Horizon Mall",
     "Twilight Harbor",
     "Opal Theater",
     "Rosewood Hall",
     "Westgate Station",
     "Oakshade Library",
     "Cobalt Market",
     "Riverstone Wharf",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Rosewood Hall",
     "Flint Forge Quarter",
     "Riverstone Wharf",
     "Nimbus Plaza",
     "Azure Gardens",
     "Twilight Harbor",
     "Brass Lantern Tavern",
     "Knight’s Market",
     "Umbra Theater",
     "Oakshade Library",
     "Westgate Station",
     "Horizon Mall",
     "Cobalt Market",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Rosewood Hall",
     "Flint Forge Quarter",
     "Riverstone Wharf",
     "Nimbus Plaza",
     "Azure Gardens",
     "Twilight Harbor",
     "Brass Lantern Tavern",
     "Knight’s Market",
     "Umbra Theater",
     "Oakshade Library",
     "Westgate Station",
     "Horizon Mall",
     "Cobalt Market",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Knight’s Market",
     "Brass Lantern Tavern",
     "Nimbus Plaza",
     "Riverstone Wharf",
     "Duskwood Park",
     "Cobalt Market",
     "Opal Theater",
     "Rosewood Hall",
     "Westgate Station",
     "Oakshade Library",
     "Twilight Harbor",
     "Horizon Mall",
     "Flint Forge Quarter",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Riverstone Wharf",
     "Westgate Station",
     "Oakshade Library",
     "Brass Lantern Tavern",
     "Twilight Harbor",
     "Horizon Mall",
     "Cobalt Market",
     "Opal Theater",
     "Rosewood Hall",
     "Flint Forge Quarter",
     "Knight’s Market",
     "Azure Gardens",
     "Umbra Theater",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 58,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points, and the driver must start from a central warehouse, deliver packages to each location, and return to the warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Twilight Harbor\",\n        \"Riverstone Wharf\",\n        \"Azure Gardens\",\n        \"Flint Forge Quarter\",\n        \"Knight’s Market\",\n        \"Horizon Mall\",\n        \"Brass Lantern Tavern\",\n        \"Rosewood Hall\",\n        \"Oakshade Library\",\n        \"Westgate Station\",\n        \"Duskwood Park\",\n        \"Cobalt Market\",\n        \"Opal Theater\",\n        \"Nimbus Plaza\",\n        \"Umbra Theater\"\n    ],\n    \"definitions\": {\n        \"Warehouse\": The central location from which the delivery driver starts and returns after completing deliveries.\",\n        \"Delivery Points\": The various locations where packages need to be delivered, each representing different types of businesses or residential areas with unique delivery requirements.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 41,
  "adj": [
   [
    0,
    5,
    4,
    6,
    4,
    4,
    4,
    1,
    8,
    8,
    7,
    2,
    2,
    10,
    6,
    1
   ],
   [
    5,
    0,
    9,
    5,
    6,
    8,
    10,
    2,
    9,
    7,
    2,
    10,
    9,
    1,
    2,
    5
   ],
   [
    4,
    9,
    0,
    1,
    4,
    6,
    8,
    2,
    6,
    1,
    6,
    9,
    6,
    10,
    10,
    10
   ],
   [
    6,
    5,
    1,
    0,
    7,
    6,
    5,
    10,
    2,
    5,
    10,
    4,
    1,
    1,
    7,
    6
   ],
   [
    4,
    6,
    4,
    7,
    0,
    5,
    7,
    7,
    1,
    10,
    8,
    4,
    1,
    9,
    10,
    1
   ],
   [
    4,
    8,
    6,
    6,
    5,
    0,
    4,
    7,
    8,
    10,
    10,
    7,
    2,
    5,
    6,
    10
   ],
   [
    4,
    10,
    8,
    5,
    7,
    4,
    0,
    7,
    3,
    9,
    1,
    1,
    3,
    7,
    3,
    10
   ],
   [
    1,
    2,
    2,
    10,
    7,
    7,
    7,
    0,
    10,
    10,
    3,
    3,
    6,
    5,
    4,
    10
   ],
   [
    8,
    9,
    6,
    2,
    1,
    8,
    3,
    10,
    0,
    6,
    2,
    2,
    5,
    5,
    6,
    10
   ],
   [
    8,
    7,
    1,
    5,
    10,
    10,
    9,
    10,
    6,
    0,
    6,
    4,
    8,
    2,
    10,
    7
   ],
   [
    7,
    2,
    6,
    10,
    8,
    10,
    1,
    3,
    2,
    6,
    0,
    8,
    5,
    10,
    5,
    6
   ],
   [
    2,
    10,
    9,
    4,
    4,
    7,
    1,
    3,
    2,
    4,
    8,
    0,
    2,
    3,
    3,
    9
   ],
   [
    2,
    9,
    6,
    1,
    1,
    2,
    3,
    6,
    5,
    8,
    5,
    2,
    0,
    3,
    5,
    3
   ],
   [
    10,
    1,
    10,
    1,
    9,
    5,
    7,
    5,
    5,
    2,
    10,
    3,
    3,
    0,
    8,
    6
   ],
   [
    6,
    2,
    10,
    7,
    10,
    6,
    3,
    4,
    6,
    10,
    5,
    3,
    5,
    8,
    0,
    4
   ],
   [
    1,
    5,
    10,
    6,
    1,
    10,
    10,
    10,
    10,
    7,
    6,
    9,
    3,
    6,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Horizon Mall",
   "Union Square Market",
   "Gilded Archway",
   "King’s Row",
   "Pennywhistle Arcade",
   "Lunar Pier",
   "Northwind Tower",
   "Copper Clock Square",
   "Mosaic Plaza",
   "Moonlit Promenade",
   "Knight’s Market",
   "Silvercrest Observatory",
   "Oakshade Library",
   "Rosewood Hall",
   "Amber Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Silvercrest Observatory",
     "Gilded Archway",
     "Oakshade Library",
     "Mosaic Plaza",
     "Union Square Market",
     "Northwind Tower",
     "Horizon Mall",
     "Rosewood Hall",
     "Knight’s Market",
     "Lunar Pier",
     "Moonlit Promenade",
     "Copper Clock Square",
     "King’s Row",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 2.05
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Lunar Pier",
     "Moonlit Promenade",
     "Rosewood Hall",
     "Horizon Mall",
     "Oakshade Library",
     "Gilded Archway",
     "Mosaic Plaza",
     "Union Square Market",
     "Silvercrest Observatory",
     "Pennywhistle Arcade",
     "King’s Row",
     "Copper Clock Square",
     "Amber Plaza",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Horizon Mall",
     "Oakshade Library",
     "Gilded Archway",
     "Union Square Market",
     "Mosaic Plaza",
     "Knight’s Market",
     "Lunar Pier",
     "Moonlit Promenade",
     "Copper Clock Square",
     "King’s Row",
     "Silvercrest Observatory",
     "Pennywhistle Arcade",
     "Rosewood Hall",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Horizon Mall",
     "Oakshade Library",
     "Gilded Archway",
     "Union Square Market",
     "Mosaic Plaza",
     "Knight’s Market",
     "Lunar Pier",
     "Moonlit Promenade",
     "Copper Clock Square",
     "King’s Row",
     "Silvercrest Observatory",
     "Pennywhistle Arcade",
     "Rosewood Hall",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Horizon Mall",
     "Oakshade Library",
     "Gilded Archway",
     "Silvercrest Observatory",
     "Pennywhistle Arcade",
     "Rosewood Hall",
     "Amber Plaza",
     "Moonlit Promenade",
     "Lunar Pier",
     "Knight’s Market",
     "Copper Clock Square",
     "King’s Row",
     "Union Square Market",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Union Square Market",
     "Mosaic Plaza",
     "Knight’s Market",
     "King’s Row",
     "Copper Clock Square",
     "Lunar Pier",
     "Moonlit Promenade",
     "Horizon Mall",
     "Rosewood Hall",
     "Amber Plaza",
     "Pennywhistle Arcade",
     "Oakshade Library",
     "Northwind Tower",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 57,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points scattered throughout the city, and the delivery driver must start from a central warehouse, drop off packages at each location, and return to the warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Horizon Mall\",\n        \"Union Square Market\",\n        \"Gilded Archway\",\n        \"King’s Row\",\n        \"Pennywhistle Arcade\",\n        \"Lunar Pier\",\n        \"Northwind Tower\",\n        \"Copper Clock Square\",\n        \"Mosaic Plaza\",\n        \"Moonlit Promenade\",\n        \"Knight’s Market\",\n        \"Silvercrest Observatory\",\n        \"Oakshade Library\",\n        \"Rosewood Hall\",\n        \"Amber Plaza\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": \"Locations where packages need to be delivered, each representing different types of businesses or residential areas.\",\n        \"Central Warehouse\": \"The starting point for the delivery driver, located near the city center.\",\n        \"Travel Distance\": \"The distance between each pair of delivery points, which varies based on city traffic patterns and street layouts.\",\n        \"Optimal Delivery Route\": \"The most efficient path that allows the driver to visit each delivery point exactly once and return to the warehouse while minimizing total distance traveled.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 42,
  "adj": [
   [
    0,
    8,
    9,
    4,
    6,
    2,
    3,
    3,
    7,
    7,
    2,
    8,
    8,
    7,
    1,
    5
   ],
   [
    8,
    0,
    3,
    8,
    8,
    7,
    4,
    8,
    6,
    9,
    9,
    7,
    7,
    6,
    8,
    3
   ],
   [
    9,
    3,
    0,
    5,
    9,
    10,
    10,
    3,
    10,
    7,
    4,
    3,
    9,
    10,
    6,
    7
   ],
   [
    4,
    8,
    5,
    0,
    9,
    7,
    7,
    4,
    1,
    5,
    10,
    6,
    4,
    3,
    7,
    3
   ],
   [
    6,
    8,
    9,
    9,
    0,
    3,
    1,
    1,
    6,
    10,
    9,
    6,
    3,
    10,
    10,
    7
   ],
   [
    2,
    7,
    10,
    7,
    3,
    0,
    3,
    3,
    1,
    8,
    7,
    8,
    3,
    2,
    9,
    2
   ],
   [
    3,
    4,
    10,
    7,
    1,
    3,
    0,
    7,
    4,
    8,
    9,
    5,
    4,
    1,
    10,
    7
   ],
   [
    3,
    8,
    3,
    4,
    1,
    3,
    7,
    0,
    5,
    3,
    6,
    10,
    7,
    2,
    10,
    4
   ],
   [
    7,
    6,
    10,
    1,
    6,
    1,
    4,
    5,
    0,
    6,
    2,
    9,
    3,
    10,
    9,
    10
   ],
   [
    7,
    9,
    7,
    5,
    10,
    8,
    8,
    3,
    6,
    0,
    6,
    4,
    2,
    2,
    5,
    1
   ],
   [
    2,
    9,
    4,
    10,
    9,
    7,
    9,
    6,
    2,
    6,
    0,
    9,
    2,
    5,
    7,
    1
   ],
   [
    8,
    7,
    3,
    6,
    6,
    8,
    5,
    10,
    9,
    4,
    9,
    0,
    8,
    9,
    1,
    9
   ],
   [
    8,
    7,
    9,
    4,
    3,
    3,
    4,
    7,
    3,
    2,
    2,
    8,
    0,
    6,
    2,
    10
   ],
   [
    7,
    6,
    10,
    3,
    10,
    2,
    1,
    2,
    10,
    2,
    5,
    9,
    6,
    0,
    2,
    1
   ],
   [
    1,
    8,
    6,
    7,
    10,
    9,
    10,
    10,
    9,
    5,
    7,
    1,
    2,
    2,
    0,
    9
   ],
   [
    5,
    3,
    7,
    3,
    7,
    2,
    7,
    4,
    10,
    1,
    1,
    9,
    10,
    1,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Copper Clock Square",
   "Primrose Boulevard",
   "Westgate Station",
   "Flare Alley",
   "Umbra Theater",
   "Jasper Marina",
   "Flint Forge Quarter",
   "Maplewood Conservatory",
   "Union Square Market",
   "Gilded Archway",
   "Velvet Corner",
   "Amber Plaza",
   "Knight’s Market",
   "Riverstone Wharf",
   "Oakshade Library"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Maplewood Conservatory",
     "Westgate Station",
     "Flint Forge Quarter",
     "Flare Alley",
     "Jasper Marina",
     "Knight’s Market",
     "Union Square Market",
     "Amber Plaza",
     "Gilded Archway",
     "Oakshade Library",
     "Copper Clock Square",
     "Primrose Boulevard",
     "Velvet Corner",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 1.98
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flint Forge Quarter",
     "Flare Alley",
     "Jasper Marina",
     "Knight’s Market",
     "Oakshade Library",
     "Gilded Archway",
     "Umbra Theater",
     "Maplewood Conservatory",
     "Westgate Station",
     "Amber Plaza",
     "Union Square Market",
     "Copper Clock Square",
     "Primrose Boulevard",
     "Velvet Corner",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Velvet Corner",
     "Primrose Boulevard",
     "Copper Clock Square",
     "Oakshade Library",
     "Union Square Market",
     "Amber Plaza",
     "Gilded Archway",
     "Maplewood Conservatory",
     "Westgate Station",
     "Knight’s Market",
     "Jasper Marina",
     "Flare Alley",
     "Flint Forge Quarter",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Velvet Corner",
     "Primrose Boulevard",
     "Copper Clock Square",
     "Oakshade Library",
     "Union Square Market",
     "Amber Plaza",
     "Gilded Archway",
     "Maplewood Conservatory",
     "Westgate Station",
     "Knight’s Market",
     "Jasper Marina",
     "Flare Alley",
     "Flint Forge Quarter",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Velvet Corner",
     "Primrose Boulevard",
     "Copper Clock Square",
     "Knight’s Market",
     "Jasper Marina",
     "Flare Alley",
     "Umbra Theater",
     "Maplewood Conservatory",
     "Westgate Station",
     "Amber Plaza",
     "Gilded Archway",
     "Oakshade Library",
     "Union Square Market",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Umbra Theater",
     "Maplewood Conservatory",
     "Gilded Archway",
     "Union Square Market",
     "Amber Plaza",
     "Riverstone Wharf",
     "Knight’s Market",
     "Jasper Marina",
     "Flare Alley",
     "Velvet Corner",
     "Westgate Station",
     "Primrose Boulevard",
     "Copper Clock Square",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 55,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at a central warehouse. This optimization is crucial for saving fuel, reducing delivery times, and improving overall operational efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Copper Clock Square\",\n        \"Primrose Boulevard\",\n        \"Westgate Station\",\n        \"Flare Alley\",\n        \"Umbra Theater\",\n        \"Jasper Marina\",\n        \"Flint Forge Quarter\",\n        \"Maplewood Conservatory\",\n        \"Union Square Market\",\n        \"Gilded Archway\",\n        \"Velvet Corner\",\n        \"Amber Plaza\",\n        \"Knight’s Market\",\n        \"Riverstone Wharf\",\n        \"Oakshade Library\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be dropped off, each with unique characteristics and requirements.\n        \"Distance Table\": A matrix that shows the travel distances between each pair of delivery points, which varies based on city traffic patterns and street layouts.\n        \"Optimal Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the starting point, minimizing the total distance traveled.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 43,
  "adj": [
   [
    0,
    3,
    2,
    10,
    2,
    1,
    8,
    5,
    7,
    8,
    7,
    4,
    6,
    9,
    4,
    1
   ],
   [
    3,
    0,
    8,
    9,
    10,
    2,
    7,
    2,
    3,
    8,
    8,
    4,
    5,
    4,
    1,
    7
   ],
   [
    2,
    8,
    0,
    2,
    4,
    10,
    4,
    9,
    5,
    2,
    7,
    2,
    2,
    2,
    10,
    6
   ],
   [
    10,
    9,
    2,
    0,
    7,
    2,
    9,
    9,
    7,
    8,
    2,
    7,
    5,
    7,
    9,
    5
   ],
   [
    2,
    10,
    4,
    7,
    0,
    9,
    3,
    3,
    4,
    3,
    3,
    7,
    5,
    1,
    3,
    7
   ],
   [
    1,
    2,
    10,
    2,
    9,
    0,
    6,
    5,
    4,
    4,
    3,
    5,
    1,
    6,
    4,
    3
   ],
   [
    8,
    7,
    4,
    9,
    3,
    6,
    0,
    9,
    10,
    6,
    10,
    4,
    9,
    10,
    6,
    3
   ],
   [
    5,
    2,
    9,
    9,
    3,
    5,
    9,
    0,
    4,
    3,
    4,
    8,
    5,
    7,
    8,
    8
   ],
   [
    7,
    3,
    5,
    7,
    4,
    4,
    10,
    4,
    0,
    10,
    2,
    8,
    1,
    1,
    10,
    5
   ],
   [
    8,
    8,
    2,
    8,
    3,
    4,
    6,
    3,
    10,
    0,
    3,
    10,
    6,
    5,
    7,
    2
   ],
   [
    7,
    8,
    7,
    2,
    3,
    3,
    10,
    4,
    2,
    3,
    0,
    9,
    10,
    1,
    3,
    5
   ],
   [
    4,
    4,
    2,
    7,
    7,
    5,
    4,
    8,
    8,
    10,
    9,
    0,
    4,
    7,
    8,
    6
   ],
   [
    6,
    5,
    2,
    5,
    5,
    1,
    9,
    5,
    1,
    6,
    10,
    4,
    0,
    8,
    2,
    1
   ],
   [
    9,
    4,
    2,
    7,
    1,
    6,
    10,
    7,
    1,
    5,
    1,
    7,
    8,
    0,
    1,
    10
   ],
   [
    4,
    1,
    10,
    9,
    3,
    4,
    6,
    8,
    10,
    7,
    3,
    8,
    2,
    1,
    0,
    4
   ],
   [
    1,
    7,
    6,
    5,
    7,
    3,
    3,
    8,
    5,
    2,
    5,
    6,
    1,
    10,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Lighthouse Point",
   "Ironbridge Crossing",
   "King’s Row",
   "Westgate Station",
   "Amber Plaza",
   "Skyline Gardens",
   "Opal Theater",
   "Copper Clock Square",
   "Moonlit Promenade",
   "Pennywhistle Arcade",
   "Evergreen Circle",
   "Gilded Archway",
   "Willowshade Pavilion",
   "Azure Gardens",
   "Zenith Arena"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Gilded Archway",
     "Copper Clock Square",
     "Pennywhistle Arcade",
     "King’s Row",
     "Ironbridge Crossing",
     "Evergreen Circle",
     "Skyline Gardens",
     "Westgate Station",
     "Willowshade Pavilion",
     "Azure Gardens",
     "Lighthouse Point",
     "Opal Theater",
     "Moonlit Promenade",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 1.96
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Ironbridge Crossing",
     "Moonlit Promenade",
     "Opal Theater",
     "Lighthouse Point",
     "Azure Gardens",
     "Willowshade Pavilion",
     "Pennywhistle Arcade",
     "King’s Row",
     "Evergreen Circle",
     "Skyline Gardens",
     "Westgate Station",
     "Copper Clock Square",
     "Gilded Archway",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Gilded Archway",
     "Copper Clock Square",
     "Willowshade Pavilion",
     "Westgate Station",
     "Skyline Gardens",
     "Zenith Arena",
     "Moonlit Promenade",
     "Ironbridge Crossing",
     "King’s Row",
     "Pennywhistle Arcade",
     "Azure Gardens",
     "Lighthouse Point",
     "Opal Theater",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Gilded Archway",
     "Copper Clock Square",
     "Willowshade Pavilion",
     "Westgate Station",
     "Skyline Gardens",
     "Zenith Arena",
     "Moonlit Promenade",
     "Ironbridge Crossing",
     "King’s Row",
     "Pennywhistle Arcade",
     "Azure Gardens",
     "Lighthouse Point",
     "Opal Theater",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Gilded Archway",
     "Azure Gardens",
     "Lighthouse Point",
     "Opal Theater",
     "Amber Plaza",
     "King’s Row",
     "Pennywhistle Arcade",
     "Copper Clock Square",
     "Willowshade Pavilion",
     "Westgate Station",
     "Moonlit Promenade",
     "Ironbridge Crossing",
     "Skyline Gardens",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Gilded Archway",
     "Evergreen Circle",
     "Skyline Gardens",
     "Amber Plaza",
     "Zenith Arena",
     "King’s Row",
     "Ironbridge Crossing",
     "Opal Theater",
     "Pennywhistle Arcade",
     "Westgate Station",
     "Moonlit Promenade",
     "Willowshade Pavilion",
     "Azure Gardens",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 61,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts from a central warehouse, visits each delivery point, and returns to the warehouse. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Lighthouse Point\",\n        \"Ironbridge Crossing\",\n        \"King’s Row\",\n        \"Westgate Station\",\n        \"Amber Plaza\",\n        \"Skyline Gardens\",\n        \"Opal Theater\",\n        \"Copper Clock Square\",\n        \"Moonlit Promenade\",\n        \"Pennywhistle Arcade\",\n        \"Evergreen Circle\",\n        \"Gilded Archway\",\n        \"Willowshade Pavilion\",\n        \"Azure Gardens\",\n        \"Zenith Arena\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each with unique characteristics and requirements.\n        \"Total Distance\": The sum of distances traveled by the delivery driver during the route.\n        \"Optimal Route\": The most efficient path that minimizes the total distance while visiting each delivery point exactly once and returning to the starting point.\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 44,
  "adj": [
   [
    0,
    9,
    10,
    2,
    8,
    8,
    7,
    6,
    8,
    5,
    4,
    1,
    2,
    8,
    4,
    8
   ],
   [
    9,
    0,
    5,
    6,
    4,
    3,
    6,
    4,
    7,
    1,
    9,
    7,
    10,
    9,
    4,
    4
   ],
   [
    10,
    5,
    0,
    8,
    8,
    6,
    3,
    3,
    6,
    8,
    3,
    7,
    3,
    9,
    8,
    8
   ],
   [
    2,
    6,
    8,
    0,
    3,
    3,
    9,
    2,
    6,
    7,
    7,
    4,
    8,
    5,
    9,
    10
   ],
   [
    8,
    4,
    8,
    3,
    0,
    1,
    10,
    5,
    2,
    8,
    9,
    10,
    9,
    6,
    5,
    3
   ],
   [
    8,
    3,
    6,
    3,
    1,
    0,
    6,
    1,
    10,
    10,
    1,
    9,
    1,
    6,
    1,
    3
   ],
   [
    7,
    6,
    3,
    9,
    10,
    6,
    0,
    6,
    4,
    1,
    7,
    10,
    6,
    6,
    1,
    6
   ],
   [
    6,
    4,
    3,
    2,
    5,
    1,
    6,
    0,
    5,
    2,
    5,
    2,
    10,
    1,
    2,
    3
   ],
   [
    8,
    7,
    6,
    6,
    2,
    10,
    4,
    5,
    0,
    10,
    6,
    3,
    6,
    3,
    7,
    3
   ],
   [
    5,
    1,
    8,
    7,
    8,
    10,
    1,
    2,
    10,
    0,
    4,
    1,
    7,
    10,
    9,
    9
   ],
   [
    4,
    9,
    3,
    7,
    9,
    1,
    7,
    5,
    6,
    4,
    0,
    2,
    1,
    8,
    9,
    2
   ],
   [
    1,
    7,
    7,
    4,
    10,
    9,
    10,
    2,
    3,
    1,
    2,
    0,
    3,
    8,
    2,
    5
   ],
   [
    2,
    10,
    3,
    8,
    9,
    1,
    6,
    10,
    6,
    7,
    1,
    3,
    0,
    4,
    7,
    10
   ],
   [
    8,
    9,
    9,
    5,
    6,
    6,
    6,
    1,
    3,
    10,
    8,
    8,
    4,
    0,
    4,
    10
   ],
   [
    4,
    4,
    8,
    9,
    5,
    1,
    1,
    2,
    7,
    9,
    9,
    2,
    7,
    4,
    0,
    5
   ],
   [
    8,
    4,
    8,
    10,
    3,
    3,
    6,
    3,
    3,
    9,
    2,
    5,
    10,
    10,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Twilight Harbor",
   "Oakshade Library",
   "King’s Row",
   "Azure Gardens",
   "Jasper Marina",
   "Duskwood Park",
   "Quartz District",
   "Lunar Pier",
   "Cobalt Market",
   "Skyline Gardens",
   "Evergreen Circle",
   "Willowshade Pavilion",
   "Nimbus Plaza",
   "Northwind Tower",
   "Moonlit Promenade"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Quartz District",
     "Nimbus Plaza",
     "Lunar Pier",
     "Azure Gardens",
     "Jasper Marina",
     "Northwind Tower",
     "Duskwood Park",
     "Oakshade Library",
     "Willowshade Pavilion",
     "Skyline Gardens",
     "Moonlit Promenade",
     "Twilight Harbor",
     "Cobalt Market",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 2.04
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Nimbus Plaza",
     "Quartz District",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Skyline Gardens",
     "Moonlit Promenade",
     "Lunar Pier",
     "Azure Gardens",
     "Northwind Tower",
     "Duskwood Park",
     "Oakshade Library",
     "Cobalt Market",
     "Twilight Harbor",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Cobalt Market",
     "Twilight Harbor",
     "Jasper Marina",
     "Azure Gardens",
     "Lunar Pier",
     "Nimbus Plaza",
     "Quartz District",
     "King’s Row",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Duskwood Park",
     "Northwind Tower",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Cobalt Market",
     "Twilight Harbor",
     "Jasper Marina",
     "Azure Gardens",
     "Lunar Pier",
     "Nimbus Plaza",
     "Quartz District",
     "King’s Row",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Duskwood Park",
     "Northwind Tower",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Quartz District",
     "Nimbus Plaza",
     "Lunar Pier",
     "Moonlit Promenade",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Twilight Harbor",
     "Cobalt Market",
     "Duskwood Park",
     "Northwind Tower",
     "Jasper Marina",
     "Azure Gardens",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Cobalt Market",
     "Azure Gardens",
     "Twilight Harbor",
     "Quartz District",
     "Moonlit Promenade",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Nimbus Plaza",
     "Lunar Pier",
     "King’s Row",
     "Jasper Marina",
     "Northwind Tower",
     "Duskwood Park",
     "Oakshade Library",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 56,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at the central warehouse while visiting each location exactly once. This optimization is crucial for saving fuel, reducing delivery times, and improving overall operational efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Twilight Harbor\",\n        \"Oakshade Library\",\n        \"King’s Row\",\n        \"Azure Gardens\",\n        \"Jasper Marina\",\n        \"Duskwood Park\",\n        \"Quartz District\",\n        \"Lunar Pier\",\n        \"Cobalt Market\",\n        \"Skyline Gardens\",\n        \"Evergreen Circle\",\n        \"Willowshade Pavilion\",\n        \"Nimbus Plaza\",\n        \"Northwind Tower\",\n        \"Moonlit Promenade\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": \"Locations where packages need to be delivered, each representing different types of businesses or residential areas.\",\n        \"Total Distance\": \"The sum of the distances traveled during the delivery route, which needs to be minimized.\",\n        \"Route Optimization\": \"The process of determining the most efficient path to take in order to minimize travel distance while visiting all specified points.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 45,
  "adj": [
   [
    0,
    7,
    7,
    7,
    4,
    7,
    4,
    6,
    10,
    4,
    3,
    1,
    9,
    2,
    8,
    7
   ],
   [
    7,
    0,
    2,
    8,
    1,
    2,
    1,
    6,
    3,
    1,
    3,
    1,
    6,
    7,
    4,
    1
   ],
   [
    7,
    2,
    0,
    7,
    4,
    2,
    2,
    3,
    8,
    7,
    9,
    2,
    9,
    2,
    3,
    7
   ],
   [
    7,
    8,
    7,
    0,
    4,
    2,
    8,
    6,
    2,
    6,
    5,
    2,
    5,
    6,
    8,
    8
   ],
   [
    4,
    1,
    4,
    4,
    0,
    1,
    10,
    6,
    7,
    1,
    5,
    9,
    5,
    7,
    9,
    3
   ],
   [
    7,
    2,
    2,
    2,
    1,
    0,
    5,
    3,
    8,
    10,
    6,
    8,
    1,
    7,
    3,
    2
   ],
   [
    4,
    1,
    2,
    8,
    10,
    5,
    0,
    10,
    5,
    4,
    8,
    1,
    5,
    9,
    2,
    3
   ],
   [
    6,
    6,
    3,
    6,
    6,
    3,
    10,
    0,
    2,
    10,
    9,
    7,
    1,
    9,
    2,
    4
   ],
   [
    10,
    3,
    8,
    2,
    7,
    8,
    5,
    2,
    0,
    4,
    7,
    7,
    1,
    3,
    3,
    8
   ],
   [
    4,
    1,
    7,
    6,
    1,
    10,
    4,
    10,
    4,
    0,
    2,
    4,
    4,
    10,
    9,
    10
   ],
   [
    3,
    3,
    9,
    5,
    5,
    6,
    8,
    9,
    7,
    2,
    0,
    5,
    7,
    4,
    4,
    3
   ],
   [
    1,
    1,
    2,
    2,
    9,
    8,
    1,
    7,
    7,
    4,
    5,
    0,
    2,
    1,
    9,
    8
   ],
   [
    9,
    6,
    9,
    5,
    5,
    1,
    5,
    1,
    1,
    4,
    7,
    2,
    0,
    2,
    10,
    9
   ],
   [
    2,
    7,
    2,
    6,
    7,
    7,
    9,
    9,
    3,
    10,
    4,
    1,
    2,
    0,
    4,
    5
   ],
   [
    8,
    4,
    3,
    8,
    9,
    3,
    2,
    2,
    3,
    9,
    4,
    9,
    10,
    4,
    0,
    2
   ],
   [
    7,
    1,
    7,
    8,
    3,
    2,
    3,
    4,
    8,
    10,
    3,
    8,
    9,
    5,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Willowshade Pavilion",
   "Silvercrest Observatory",
   "Copper Clock Square",
   "Granite Plaza",
   "Beacon Tower",
   "Yarrow Plaza",
   "Nimbus Plaza",
   "Opal Theater",
   "Northwind Tower",
   "Union Square Market",
   "Skyline Gardens",
   "Ironbridge Crossing",
   "Horizon Mall",
   "Lunar Pier",
   "Cobalt Market"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Northwind Tower",
     "Granite Plaza",
     "Beacon Tower",
     "Copper Clock Square",
     "Opal Theater",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Lunar Pier",
     "Cobalt Market",
     "Willowshade Pavilion",
     "Yarrow Plaza",
     "Silvercrest Observatory",
     "Horizon Mall",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 1.96
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Horizon Mall",
     "Silvercrest Observatory",
     "Willowshade Pavilion",
     "Cobalt Market",
     "Union Square Market",
     "Northwind Tower",
     "Yarrow Plaza",
     "Lunar Pier",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Opal Theater",
     "Beacon Tower",
     "Copper Clock Square",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Beacon Tower",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Opal Theater",
     "Copper Clock Square",
     "Union Square Market",
     "Northwind Tower",
     "Yarrow Plaza",
     "Silvercrest Observatory",
     "Horizon Mall",
     "Lunar Pier",
     "Cobalt Market",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Beacon Tower",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Opal Theater",
     "Copper Clock Square",
     "Union Square Market",
     "Northwind Tower",
     "Yarrow Plaza",
     "Silvercrest Observatory",
     "Horizon Mall",
     "Lunar Pier",
     "Cobalt Market",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Horizon Mall",
     "Skyline Gardens",
     "Copper Clock Square",
     "Beacon Tower",
     "Ironbridge Crossing",
     "Opal Theater",
     "Nimbus Plaza",
     "Silvercrest Observatory",
     "Lunar Pier",
     "Cobalt Market",
     "Granite Plaza",
     "Northwind Tower",
     "Willowshade Pavilion",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Yarrow Plaza",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Northwind Tower",
     "Opal Theater",
     "Nimbus Plaza",
     "Lunar Pier",
     "Cobalt Market",
     "Ironbridge Crossing",
     "Union Square Market",
     "Copper Clock Square",
     "Beacon Tower",
     "Silvercrest Observatory",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 52,
    "cost_time": 1.42
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points that the driver must visit, starting and ending at a central warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Willowshade Pavilion\",\n        \"Silvercrest Observatory\",\n        \"Copper Clock Square\",\n        \"Granite Plaza\",\n        \"Beacon Tower\",\n        \"Yarrow Plaza\",\n        \"Nimbus Plaza\",\n        \"Opal Theater\",\n        \"Northwind Tower\",\n        \"Union Square Market\",\n        \"Skyline Gardens\",\n        \"Ironbridge Crossing\",\n        \"Horizon Mall\",\n        \"Lunar Pier\",\n        \"Cobalt Market\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each representing different types of businesses or residential areas with unique requirements.\n        \"Total Distance\": The sum of all distances traveled during the delivery route, which the company aims to minimize.\n        \"Route Optimization\": The process of finding the most efficient path that allows the driver to visit each delivery point exactly once and return to the starting point (the warehouse).\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 46,
  "adj": [
   [
    0,
    10,
    1,
    2,
    7,
    10,
    2,
    9,
    5,
    2,
    4,
    9,
    1,
    1,
    9,
    2
   ],
   [
    10,
    0,
    1,
    4,
    3,
    3,
    3,
    1,
    3,
    3,
    3,
    3,
    2,
    1,
    3,
    1
   ],
   [
    1,
    1,
    0,
    8,
    2,
    8,
    9,
    3,
    9,
    7,
    9,
    2,
    4,
    9,
    8,
    1
   ],
   [
    2,
    4,
    8,
    0,
    6,
    5,
    8,
    5,
    8,
    10,
    9,
    4,
    4,
    2,
    1,
    7
   ],
   [
    7,
    3,
    2,
    6,
    0,
    1,
    1,
    8,
    10,
    3,
    5,
    1,
    8,
    10,
    3,
    4
   ],
   [
    10,
    3,
    8,
    5,
    1,
    0,
    4,
    6,
    5,
    3,
    5,
    9,
    1,
    9,
    5,
    3
   ],
   [
    2,
    3,
    9,
    8,
    1,
    4,
    0,
    4,
    10,
    6,
    3,
    7,
    5,
    4,
    1,
    1
   ],
   [
    9,
    1,
    3,
    5,
    8,
    6,
    4,
    0,
    4,
    5,
    3,
    6,
    8,
    8,
    4,
    3
   ],
   [
    5,
    3,
    9,
    8,
    10,
    5,
    10,
    4,
    0,
    2,
    5,
    10,
    3,
    7,
    1,
    2
   ],
   [
    2,
    3,
    7,
    10,
    3,
    3,
    6,
    5,
    2,
    0,
    3,
    8,
    6,
    9,
    5,
    10
   ],
   [
    4,
    3,
    9,
    9,
    5,
    5,
    3,
    3,
    5,
    3,
    0,
    4,
    8,
    4,
    7,
    2
   ],
   [
    9,
    3,
    2,
    4,
    1,
    9,
    7,
    6,
    10,
    8,
    4,
    0,
    8,
    10,
    9,
    4
   ],
   [
    1,
    2,
    4,
    4,
    8,
    1,
    5,
    8,
    3,
    6,
    8,
    8,
    0,
    7,
    5,
    4
   ],
   [
    1,
    1,
    9,
    2,
    10,
    9,
    4,
    8,
    7,
    9,
    4,
    10,
    7,
    0,
    1,
    10
   ],
   [
    9,
    3,
    8,
    1,
    3,
    5,
    1,
    4,
    1,
    5,
    7,
    9,
    5,
    1,
    0,
    5
   ],
   [
    2,
    1,
    1,
    7,
    4,
    3,
    1,
    3,
    2,
    10,
    2,
    4,
    4,
    10,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Evergreen Circle",
   "Horizon Mall",
   "Echo Station",
   "Nimbus Plaza",
   "Moonlit Promenade",
   "Lighthouse Point",
   "Yarrow Plaza",
   "Velvet Corner",
   "Granite Plaza",
   "Amber Plaza",
   "Brass Lantern Tavern",
   "Pennywhistle Arcade",
   "Copper Clock Square",
   "Jade Fountain",
   "Shadowbridge Arcade"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Brass Lantern Tavern",
     "Nimbus Plaza",
     "Lighthouse Point",
     "Shadowbridge Arcade",
     "Amber Plaza",
     "Yarrow Plaza",
     "Evergreen Circle",
     "Copper Clock Square",
     "Echo Station",
     "Jade Fountain",
     "Velvet Corner",
     "Granite Plaza",
     "Moonlit Promenade",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 24,
    "cost_time": 2.03
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Velvet Corner",
     "Jade Fountain",
     "Echo Station",
     "Lighthouse Point",
     "Nimbus Plaza",
     "Brass Lantern Tavern",
     "Moonlit Promenade",
     "Pennywhistle Arcade",
     "Copper Clock Square",
     "Evergreen Circle",
     "Shadowbridge Arcade",
     "Amber Plaza",
     "Yarrow Plaza",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Evergreen Circle",
     "Yarrow Plaza",
     "Amber Plaza",
     "Shadowbridge Arcade",
     "Lighthouse Point",
     "Nimbus Plaza",
     "Moonlit Promenade",
     "Pennywhistle Arcade",
     "Velvet Corner",
     "Jade Fountain",
     "Echo Station",
     "Copper Clock Square",
     "Granite Plaza",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Evergreen Circle",
     "Yarrow Plaza",
     "Amber Plaza",
     "Shadowbridge Arcade",
     "Lighthouse Point",
     "Nimbus Plaza",
     "Moonlit Promenade",
     "Pennywhistle Arcade",
     "Velvet Corner",
     "Jade Fountain",
     "Echo Station",
     "Copper Clock Square",
     "Granite Plaza",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Lighthouse Point",
     "Nimbus Plaza",
     "Brass Lantern Tavern",
     "Horizon Mall",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Yarrow Plaza",
     "Jade Fountain",
     "Velvet Corner",
     "Granite Plaza",
     "Moonlit Promenade",
     "Pennywhistle Arcade",
     "Echo Station",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Amber Plaza",
     "Brass Lantern Tavern",
     "Nimbus Plaza",
     "Moonlit Promenade",
     "Echo Station",
     "Copper Clock Square",
     "Lighthouse Point",
     "Evergreen Circle",
     "Shadowbridge Arcade",
     "Horizon Mall",
     "Yarrow Plaza",
     "Velvet Corner",
     "Jade Fountain",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves optimizing delivery routes for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver who starts and ends at the central warehouse, covering each delivery point exactly once. This optimization is crucial for saving fuel, reducing delivery times, and improving overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Evergreen Circle\",\n        \"Horizon Mall\",\n        \"Echo Station\",\n        \"Nimbus Plaza\",\n        \"Moonlit Promenade\",\n        \"Lighthouse Point\",\n        \"Yarrow Plaza\",\n        \"Velvet Corner\",\n        \"Granite Plaza\",\n        \"Amber Plaza\",\n        \"Brass Lantern Tavern\",\n        \"Pennywhistle Arcade\",\n        \"Copper Clock Square\",\n        \"Jade Fountain\",\n        \"Shadowbridge Arcade\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each with unique characteristics and requirements.\n        \"Total Distance\": The sum of distances traveled by the delivery driver during the route.\n        \"Optimal Route\": The most efficient path that minimizes total distance while visiting each delivery point exactly once and returning to the starting point (warehouse).\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 47,
  "adj": [
   [
    0,
    8,
    5,
    3,
    9,
    8,
    3,
    2,
    1,
    10,
    7,
    10,
    6,
    10,
    7,
    5
   ],
   [
    8,
    0,
    7,
    8,
    4,
    2,
    9,
    2,
    7,
    1,
    1,
    9,
    4,
    8,
    4,
    8
   ],
   [
    5,
    7,
    0,
    4,
    8,
    5,
    6,
    6,
    9,
    10,
    3,
    2,
    3,
    6,
    7,
    9
   ],
   [
    3,
    8,
    4,
    0,
    6,
    1,
    3,
    5,
    1,
    10,
    7,
    6,
    4,
    7,
    1,
    6
   ],
   [
    9,
    4,
    8,
    6,
    0,
    4,
    1,
    7,
    3,
    5,
    5,
    8,
    3,
    6,
    5,
    5
   ],
   [
    8,
    2,
    5,
    1,
    4,
    0,
    2,
    6,
    1,
    7,
    10,
    1,
    9,
    9,
    2,
    3
   ],
   [
    3,
    9,
    6,
    3,
    1,
    2,
    0,
    2,
    5,
    1,
    3,
    9,
    5,
    7,
    5,
    5
   ],
   [
    2,
    2,
    6,
    5,
    7,
    6,
    2,
    0,
    4,
    3,
    4,
    9,
    4,
    8,
    9,
    4
   ],
   [
    1,
    7,
    9,
    1,
    3,
    1,
    5,
    4,
    0,
    8,
    1,
    8,
    8,
    8,
    2,
    7
   ],
   [
    10,
    1,
    10,
    10,
    5,
    7,
    1,
    3,
    8,
    0,
    3,
    8,
    6,
    4,
    5,
    8
   ],
   [
    7,
    1,
    3,
    7,
    5,
    10,
    3,
    4,
    1,
    3,
    0,
    9,
    2,
    9,
    10,
    4
   ],
   [
    10,
    9,
    2,
    6,
    8,
    1,
    9,
    9,
    8,
    8,
    9,
    0,
    3,
    3,
    8,
    3
   ],
   [
    6,
    4,
    3,
    4,
    3,
    9,
    5,
    4,
    8,
    6,
    2,
    3,
    0,
    4,
    10,
    7
   ],
   [
    10,
    8,
    6,
    7,
    6,
    9,
    7,
    8,
    8,
    4,
    9,
    3,
    4,
    0,
    6,
    10
   ],
   [
    7,
    4,
    7,
    1,
    5,
    2,
    5,
    9,
    2,
    5,
    10,
    8,
    10,
    6,
    0,
    9
   ],
   [
    5,
    8,
    9,
    6,
    5,
    3,
    5,
    4,
    7,
    8,
    4,
    3,
    7,
    10,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Union Square Market",
   "Maplewood Conservatory",
   "Velvet Corner",
   "Cobalt Market",
   "Beacon Tower",
   "Northwind Tower",
   "Ironbridge Crossing",
   "Copper Clock Square",
   "King’s Row",
   "Flint Forge Quarter",
   "Dragon’s Gate",
   "Sapphire Arena",
   "Nimbus Plaza",
   "Yarrow Plaza",
   "Moonlit Promenade"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Union Square Market",
     "King’s Row",
     "Northwind Tower",
     "Cobalt Market",
     "Sapphire Arena",
     "Nimbus Plaza",
     "Dragon’s Gate",
     "Maplewood Conservatory",
     "Flint Forge Quarter",
     "Moonlit Promenade",
     "Beacon Tower",
     "Velvet Corner",
     "Yarrow Plaza",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 1.95
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Moonlit Promenade",
     "Beacon Tower",
     "Copper Clock Square",
     "Flint Forge Quarter",
     "Sapphire Arena",
     "Cobalt Market",
     "Northwind Tower",
     "King’s Row",
     "Union Square Market",
     "Maplewood Conservatory",
     "Dragon’s Gate",
     "Nimbus Plaza",
     "Velvet Corner",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Velvet Corner",
     "Beacon Tower",
     "Dragon’s Gate",
     "Maplewood Conservatory",
     "Flint Forge Quarter",
     "Union Square Market",
     "King’s Row",
     "Northwind Tower",
     "Cobalt Market",
     "Sapphire Arena",
     "Ironbridge Crossing",
     "Moonlit Promenade",
     "Yarrow Plaza",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 49,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Velvet Corner",
     "Beacon Tower",
     "Dragon’s Gate",
     "Maplewood Conservatory",
     "Flint Forge Quarter",
     "Union Square Market",
     "King’s Row",
     "Northwind Tower",
     "Cobalt Market",
     "Sapphire Arena",
     "Ironbridge Crossing",
     "Moonlit Promenade",
     "Yarrow Plaza",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 49,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Yarrow Plaza",
     "Northwind Tower",
     "Cobalt Market",
     "Sapphire Arena",
     "Velvet Corner",
     "Beacon Tower",
     "Dragon’s Gate",
     "Maplewood Conservatory",
     "Nimbus Plaza",
     "King’s Row",
     "Union Square Market",
     "Flint Forge Quarter",
     "Moonlit Promenade",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Cobalt Market",
     "Dragon’s Gate",
     "Moonlit Promenade",
     "Beacon Tower",
     "Velvet Corner",
     "Northwind Tower",
     "King’s Row",
     "Yarrow Plaza",
     "Nimbus Plaza",
     "Sapphire Arena",
     "Union Square Market",
     "Flint Forge Quarter",
     "Maplewood Conservatory",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 1.4
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area. The company has 15 distinct delivery points scattered throughout the city, and the driver must start from a central warehouse, deliver packages to each location, and return to the warehouse. The goal is to minimize the total distance traveled to save on fuel, reduce delivery times, and improve overall efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Union Square Market\",\n        \"Maplewood Conservatory\",\n        \"Velvet Corner\",\n        \"Cobalt Market\",\n        \"Beacon Tower\",\n        \"Northwind Tower\",\n        \"Ironbridge Crossing\",\n        \"Copper Clock Square\",\n        \"King’s Row\",\n        \"Flint Forge Quarter\",\n        \"Dragon’s Gate\",\n        \"Sapphire Arena\",\n        \"Nimbus Plaza\",\n        \"Yarrow Plaza\",\n        \"Moonlit Promenade\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered. Each point represents a different type of business or residential area with unique delivery requirements.\",\n        \"Distance Table\": A table that shows the approximate distance (in kilometers) between each pair of delivery points, which is influenced by city traffic patterns and street layouts.\",\n        \"Optimal Delivery Route\": The most efficient path that allows the driver to visit each delivery point exactly once and return to the starting point (warehouse) while minimizing the total distance traveled.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 48,
  "adj": [
   [
    0,
    9,
    9,
    10,
    7,
    9,
    10,
    1,
    3,
    8,
    8,
    5,
    1,
    3,
    2,
    8
   ],
   [
    9,
    0,
    5,
    7,
    2,
    3,
    8,
    6,
    8,
    6,
    10,
    5,
    10,
    3,
    10,
    3
   ],
   [
    9,
    5,
    0,
    8,
    10,
    6,
    3,
    7,
    7,
    10,
    6,
    1,
    4,
    7,
    5,
    1
   ],
   [
    10,
    7,
    8,
    0,
    8,
    7,
    7,
    3,
    3,
    1,
    2,
    5,
    6,
    8,
    7,
    10
   ],
   [
    7,
    2,
    10,
    8,
    0,
    5,
    10,
    4,
    4,
    8,
    5,
    10,
    2,
    8,
    10,
    3
   ],
   [
    9,
    3,
    6,
    7,
    5,
    0,
    10,
    4,
    7,
    10,
    6,
    10,
    1,
    4,
    8,
    5
   ],
   [
    10,
    8,
    3,
    7,
    10,
    10,
    0,
    2,
    2,
    3,
    5,
    3,
    2,
    3,
    10,
    8
   ],
   [
    1,
    6,
    7,
    3,
    4,
    4,
    2,
    0,
    4,
    6,
    10,
    4,
    9,
    8,
    7,
    7
   ],
   [
    3,
    8,
    7,
    3,
    4,
    7,
    2,
    4,
    0,
    3,
    3,
    4,
    9,
    10,
    7,
    3
   ],
   [
    8,
    6,
    10,
    1,
    8,
    10,
    3,
    6,
    3,
    0,
    5,
    9,
    3,
    3,
    3,
    2
   ],
   [
    8,
    10,
    6,
    2,
    5,
    6,
    5,
    10,
    3,
    5,
    0,
    4,
    8,
    9,
    5,
    5
   ],
   [
    5,
    5,
    1,
    5,
    10,
    10,
    3,
    4,
    4,
    9,
    4,
    0,
    9,
    10,
    7,
    8
   ],
   [
    1,
    10,
    4,
    6,
    2,
    1,
    2,
    9,
    9,
    3,
    8,
    9,
    0,
    1,
    4,
    1
   ],
   [
    3,
    3,
    7,
    8,
    8,
    4,
    3,
    8,
    10,
    3,
    9,
    10,
    1,
    0,
    2,
    8
   ],
   [
    2,
    10,
    5,
    7,
    10,
    8,
    10,
    7,
    7,
    3,
    5,
    7,
    4,
    2,
    0,
    1
   ],
   [
    8,
    3,
    1,
    10,
    3,
    5,
    8,
    7,
    3,
    2,
    5,
    8,
    1,
    8,
    1,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Flare Alley",
   "Rosewood Hall",
   "Nimbus Plaza",
   "Westgate Station",
   "Quartz District",
   "Velvet Corner",
   "Horizon Mall",
   "Twilight Harbor",
   "Lunar Pier",
   "Silvercrest Observatory",
   "Haven Docks",
   "Ironbridge Crossing",
   "Temple Square",
   "Opal Theater",
   "Jasper Marina"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Westgate Station",
     "Flare Alley",
     "Quartz District",
     "Ironbridge Crossing",
     "Temple Square",
     "Lunar Pier",
     "Nimbus Plaza",
     "Silvercrest Observatory",
     "Twilight Harbor",
     "Velvet Corner",
     "Haven Docks",
     "Rosewood Hall",
     "Jasper Marina",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 2.02
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Jasper Marina",
     "Opal Theater",
     "Temple Square",
     "Quartz District",
     "Westgate Station",
     "Flare Alley",
     "Haven Docks",
     "Rosewood Hall",
     "Lunar Pier",
     "Nimbus Plaza",
     "Silvercrest Observatory",
     "Twilight Harbor",
     "Velvet Corner",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Velvet Corner",
     "Twilight Harbor",
     "Nimbus Plaza",
     "Lunar Pier",
     "Jasper Marina",
     "Rosewood Hall",
     "Haven Docks",
     "Silvercrest Observatory",
     "Westgate Station",
     "Flare Alley",
     "Quartz District",
     "Ironbridge Crossing",
     "Temple Square",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Velvet Corner",
     "Twilight Harbor",
     "Nimbus Plaza",
     "Lunar Pier",
     "Jasper Marina",
     "Rosewood Hall",
     "Haven Docks",
     "Silvercrest Observatory",
     "Westgate Station",
     "Flare Alley",
     "Quartz District",
     "Ironbridge Crossing",
     "Temple Square",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Flare Alley",
     "Jasper Marina",
     "Lunar Pier",
     "Nimbus Plaza",
     "Twilight Harbor",
     "Silvercrest Observatory",
     "Opal Theater",
     "Temple Square",
     "Ironbridge Crossing",
     "Quartz District",
     "Rosewood Hall",
     "Haven Docks",
     "Velvet Corner",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Opal Theater",
     "Jasper Marina",
     "Rosewood Hall",
     "Flare Alley",
     "Temple Square",
     "Haven Docks",
     "Velvet Corner",
     "Lunar Pier",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Quartz District",
     "Horizon Mall",
     "Westgate Station",
     "Silvercrest Observatory",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 55,
    "cost_time": 1.41
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area with 15 distinct delivery points. The goal is to minimize the total distance traveled by the delivery driver, who starts and ends at the central warehouse, while visiting each delivery point exactly once. This optimization is crucial for saving on fuel, reducing delivery times, and improving overall operational efficiency.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Flare Alley\",\n        \"Rosewood Hall\",\n        \"Nimbus Plaza\",\n        \"Westgate Station\",\n        \"Quartz District\",\n        \"Velvet Corner\",\n        \"Horizon Mall\",\n        \"Twilight Harbor\",\n        \"Lunar Pier\",\n        \"Silvercrest Observatory\",\n        \"Haven Docks\",\n        \"Ironbridge Crossing\",\n        \"Temple Square\",\n        \"Opal Theater\",\n        \"Jasper Marina\"\n    ],\n    \"definitions\": {\n        \"Delivery Points\": Locations where packages need to be delivered, each with unique characteristics and requirements.\n        \"Total Distance\": The sum of distances traveled by the delivery driver during the route.\n        \"Optimal Route\": The path that results in the shortest total distance while visiting each delivery point exactly once and returning to the starting point (warehouse).\n        \"Urban Area\": A densely populated area characterized by significant human-made structures and infrastructure, often requiring efficient logistics for deliveries.\"\n    }\n}"
 },
 {
  "file_name": "graph_15.json",
  "graph_index": 49,
  "adj": [
   [
    0,
    3,
    10,
    4,
    5,
    3,
    9,
    1,
    7,
    9,
    3,
    4,
    5,
    2,
    2,
    6
   ],
   [
    3,
    0,
    2,
    4,
    4,
    3,
    7,
    6,
    1,
    2,
    6,
    3,
    9,
    7,
    4,
    10
   ],
   [
    10,
    2,
    0,
    6,
    2,
    6,
    2,
    9,
    9,
    2,
    10,
    1,
    1,
    2,
    3,
    5
   ],
   [
    4,
    4,
    6,
    0,
    3,
    5,
    2,
    6,
    6,
    4,
    6,
    10,
    8,
    1,
    8,
    10
   ],
   [
    5,
    4,
    2,
    3,
    0,
    4,
    5,
    5,
    10,
    3,
    7,
    7,
    1,
    3,
    9,
    4
   ],
   [
    3,
    3,
    6,
    5,
    4,
    0,
    8,
    6,
    7,
    8,
    1,
    8,
    9,
    4,
    2,
    3
   ],
   [
    9,
    7,
    2,
    2,
    5,
    8,
    0,
    2,
    4,
    10,
    1,
    4,
    2,
    4,
    1,
    3
   ],
   [
    1,
    6,
    9,
    6,
    5,
    6,
    2,
    0,
    8,
    4,
    8,
    10,
    8,
    9,
    3,
    9
   ],
   [
    7,
    1,
    9,
    6,
    10,
    7,
    4,
    8,
    0,
    3,
    10,
    3,
    2,
    5,
    5,
    10
   ],
   [
    9,
    2,
    2,
    4,
    3,
    8,
    10,
    4,
    3,
    0,
    3,
    8,
    2,
    6,
    8,
    9
   ],
   [
    3,
    6,
    10,
    6,
    7,
    1,
    1,
    8,
    10,
    3,
    0,
    1,
    6,
    9,
    8,
    9
   ],
   [
    4,
    3,
    1,
    10,
    7,
    8,
    4,
    10,
    3,
    8,
    1,
    0,
    8,
    4,
    1,
    10
   ],
   [
    5,
    9,
    1,
    8,
    1,
    9,
    2,
    8,
    2,
    2,
    6,
    8,
    0,
    8,
    1,
    1
   ],
   [
    2,
    7,
    2,
    1,
    3,
    4,
    4,
    9,
    5,
    6,
    9,
    4,
    8,
    0,
    6,
    5
   ],
   [
    2,
    4,
    3,
    8,
    9,
    2,
    1,
    3,
    5,
    8,
    8,
    1,
    1,
    6,
    0,
    9
   ],
   [
    6,
    10,
    5,
    10,
    4,
    3,
    3,
    9,
    10,
    9,
    9,
    10,
    1,
    5,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Yarrow Plaza",
   "Ivory Spire Cathedral",
   "Opal Theater",
   "Quartz District",
   "Amber Plaza",
   "Flare Alley",
   "Duskwood Park",
   "Mosaic Plaza",
   "Skyline Gardens",
   "Evergreen Circle",
   "Maplewood Conservatory",
   "Silvercrest Observatory",
   "Rosewood Hall",
   "Westgate Station",
   "Lighthouse Point"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Flare Alley",
     "Westgate Station",
     "Maplewood Conservatory",
     "Evergreen Circle",
     "Amber Plaza",
     "Lighthouse Point",
     "Silvercrest Observatory",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Skyline Gardens",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Opal Theater",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 2.06
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Flare Alley",
     "Evergreen Circle",
     "Amber Plaza",
     "Maplewood Conservatory",
     "Ivory Spire Cathedral",
     "Skyline Gardens",
     "Yarrow Plaza",
     "Mosaic Plaza",
     "Silvercrest Observatory",
     "Lighthouse Point",
     "Quartz District",
     "Opal Theater",
     "Rosewood Hall",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Flare Alley",
     "Evergreen Circle",
     "Amber Plaza",
     "Westgate Station",
     "Maplewood Conservatory",
     "Ivory Spire Cathedral",
     "Silvercrest Observatory",
     "Quartz District",
     "Opal Theater",
     "Rosewood Hall",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Skyline Gardens",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Flare Alley",
     "Evergreen Circle",
     "Amber Plaza",
     "Westgate Station",
     "Maplewood Conservatory",
     "Ivory Spire Cathedral",
     "Silvercrest Observatory",
     "Quartz District",
     "Opal Theater",
     "Rosewood Hall",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Skyline Gardens",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Maplewood Conservatory",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Skyline Gardens",
     "Silvercrest Observatory",
     "Ivory Spire Cathedral",
     "Flare Alley",
     "Duskwood Park",
     "Opal Theater",
     "Rosewood Hall",
     "Quartz District",
     "Lighthouse Point",
     "Amber Plaza",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Rosewood Hall",
     "Maplewood Conservatory",
     "Evergreen Circle",
     "Flare Alley",
     "Opal Theater",
     "Mosaic Plaza",
     "Westgate Station",
     "Silvercrest Observatory",
     "Skyline Gardens",
     "Ivory Spire Cathedral",
     "Yarrow Plaza",
     "Lighthouse Point",
     "Amber Plaza",
     "Quartz District",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 51,
    "cost_time": 1.43
   }
  },
  "response": "{\n    \"context\": \"The problem involves planning an efficient delivery route for a company operating in a busy urban area with 15 distinct delivery points. The objective is to minimize the total distance traveled by the delivery driver, who starts and ends at the central warehouse while visiting each delivery point exactly once. The delivery points are located in various parts of the city, each representing different types of businesses or residential areas, which adds complexity to the routing due to varying traffic patterns and street layouts.\",\n    \"entities\": [\n        \"Warehouse\",\n        \"Yarrow Plaza\",\n        \"Ivory Spire Cathedral\",\n        \"Opal Theater\",\n        \"Quartz District\",\n        \"Amber Plaza\",\n        \"Flare Alley\",\n        \"Duskwood Park\",\n        \"Mosaic Plaza\",\n        \"Skyline Gardens\",\n        \"Evergreen Circle\",\n        \"Maplewood Conservatory\",\n        \"Silvercrest Observatory\",\n        \"Rosewood Hall\",\n        \"Westgate Station\",\n        \"Lighthouse Point\"\n    ],\n    \"definitions\": {\n        \"Delivery Point\": A specific location where packages need to be dropped off, each with unique characteristics and delivery requirements.\",\n        \"Route Optimization\": The process of determining the most efficient path for travel, minimizing distance or time while fulfilling all necessary stops.\",\n        \"Total Distance\": The cumulative distance traveled during the delivery route, which needs to be minimized for efficiency.\",\n        \"Urban Area\": A densely populated region characterized by significant human-made structures and infrastructure, affecting travel dynamics.\"\n    }\n}"
 }
]