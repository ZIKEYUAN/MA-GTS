[
 {
  "file_name": "graph_14.json",
  "graph_index": 0,
  "adj": [
   [
    0,
    2,
    7,
    1,
    10,
    9,
    3,
    3,
    1,
    7,
    10,
    1,
    1,
    4,
    1
   ],
   [
    2,
    0,
    2,
    3,
    3,
    7,
    2,
    1,
    10,
    10,
    8,
    2,
    4,
    2,
    3
   ],
   [
    7,
    2,
    0,
    8,
    2,
    6,
    1,
    5,
    4,
    4,
    9,
    5,
    8,
    1,
    9
   ],
   [
    1,
    3,
    8,
    0,
    10,
    1,
    2,
    4,
    7,
    7,
    7,
    7,
    2,
    6,
    1
   ],
   [
    10,
    3,
    2,
    10,
    0,
    4,
    2,
    6,
    6,
    6,
    2,
    2,
    4,
    1,
    2
   ],
   [
    9,
    7,
    6,
    1,
    4,
    0,
    3,
    1,
    8,
    7,
    8,
    7,
    3,
    3,
    2
   ],
   [
    3,
    2,
    1,
    2,
    2,
    3,
    0,
    9,
    7,
    1,
    1,
    8,
    7,
    4,
    4
   ],
   [
    3,
    1,
    5,
    4,
    6,
    1,
    9,
    0,
    1,
    7,
    3,
    6,
    3,
    8,
    10
   ],
   [
    1,
    10,
    4,
    7,
    6,
    8,
    7,
    1,
    0,
    3,
    6,
    8,
    10,
    7,
    8
   ],
   [
    7,
    10,
    4,
    7,
    6,
    7,
    1,
    7,
    3,
    0,
    1,
    8,
    4,
    8,
    5
   ],
   [
    10,
    8,
    9,
    7,
    2,
    8,
    1,
    3,
    6,
    1,
    0,
    2,
    10,
    8,
    3
   ],
   [
    1,
    2,
    5,
    7,
    2,
    7,
    8,
    6,
    8,
    8,
    2,
    0,
    2,
    3,
    7
   ],
   [
    1,
    4,
    8,
    2,
    4,
    3,
    7,
    3,
    10,
    4,
    10,
    2,
    0,
    3,
    5
   ],
   [
    4,
    2,
    1,
    6,
    1,
    3,
    4,
    8,
    7,
    8,
    8,
    3,
    3,
    0,
    7
   ],
   [
    1,
    3,
    9,
    1,
    2,
    2,
    4,
    10,
    8,
    5,
    3,
    7,
    5,
    7,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Horizon Mall",
   "Quartz District",
   "Copper Clock Square",
   "Jasper Marina",
   "Evergreen Circle",
   "Riverstone Wharf",
   "Silvercrest Observatory",
   "King’s Row",
   "Cobalt Market",
   "Moonlit Promenade",
   "Twilight Harbor",
   "Echo Station",
   "Skyline Gardens",
   "Brass Lantern Tavern"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Silvercrest Observatory",
     "Horizon Mall",
     "Twilight Harbor",
     "Moonlit Promenade",
     "Cobalt Market",
     "Riverstone Wharf",
     "Quartz District",
     "Skyline Gardens",
     "Jasper Marina",
     "Brass Lantern Tavern",
     "Copper Clock Square",
     "Evergreen Circle",
     "Echo Station",
     "Warehouse"
    ],
    "ans_distance": 20,
    "cost_time": 0.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Twilight Harbor",
     "King’s Row",
     "Brass Lantern Tavern",
     "Jasper Marina",
     "Skyline Gardens",
     "Quartz District",
     "Riverstone Wharf",
     "Moonlit Promenade",
     "Cobalt Market",
     "Horizon Mall",
     "Silvercrest Observatory",
     "Evergreen Circle",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Evergreen Circle",
     "Silvercrest Observatory",
     "Horizon Mall",
     "Quartz District",
     "Riverstone Wharf",
     "Cobalt Market",
     "Moonlit Promenade",
     "Jasper Marina",
     "Skyline Gardens",
     "Twilight Harbor",
     "Echo Station",
     "Brass Lantern Tavern",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Evergreen Circle",
     "Silvercrest Observatory",
     "Horizon Mall",
     "Quartz District",
     "Riverstone Wharf",
     "Cobalt Market",
     "Moonlit Promenade",
     "Jasper Marina",
     "Skyline Gardens",
     "Twilight Harbor",
     "Echo Station",
     "Brass Lantern Tavern",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Moonlit Promenade",
     "Cobalt Market",
     "King’s Row",
     "Quartz District",
     "Skyline Gardens",
     "Jasper Marina",
     "Riverstone Wharf",
     "Horizon Mall",
     "Silvercrest Observatory",
     "Evergreen Circle",
     "Brass Lantern Tavern",
     "Copper Clock Square",
     "Echo Station",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Jasper Marina",
     "Skyline Gardens",
     "Echo Station",
     "Evergreen Circle",
     "Moonlit Promenade",
     "Cobalt Market",
     "Quartz District",
     "Horizon Mall",
     "Riverstone Wharf",
     "Copper Clock Square",
     "Brass Lantern Tavern",
     "King’s Row",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 1,
  "adj": [
   [
    0,
    7,
    6,
    10,
    4,
    8,
    1,
    6,
    5,
    4,
    5,
    8,
    3,
    2,
    3
   ],
   [
    7,
    0,
    5,
    8,
    7,
    1,
    10,
    3,
    5,
    8,
    6,
    7,
    1,
    5,
    7
   ],
   [
    6,
    5,
    0,
    8,
    7,
    6,
    1,
    1,
    10,
    10,
    4,
    10,
    6,
    4,
    1
   ],
   [
    10,
    8,
    8,
    0,
    8,
    8,
    3,
    2,
    10,
    4,
    10,
    10,
    2,
    1,
    5
   ],
   [
    4,
    7,
    7,
    8,
    0,
    2,
    3,
    2,
    7,
    8,
    9,
    8,
    5,
    1,
    5
   ],
   [
    8,
    1,
    6,
    8,
    2,
    0,
    2,
    4,
    3,
    7,
    9,
    2,
    3,
    6,
    3
   ],
   [
    1,
    10,
    1,
    3,
    3,
    2,
    0,
    9,
    5,
    6,
    5,
    9,
    8,
    8,
    10
   ],
   [
    6,
    3,
    1,
    2,
    2,
    4,
    9,
    0,
    9,
    1,
    5,
    8,
    8,
    3,
    9
   ],
   [
    5,
    5,
    10,
    10,
    7,
    3,
    5,
    9,
    0,
    1,
    3,
    9,
    8,
    9,
    3
   ],
   [
    4,
    8,
    10,
    4,
    8,
    7,
    6,
    1,
    1,
    0,
    5,
    3,
    5,
    1,
    4
   ],
   [
    5,
    6,
    4,
    10,
    9,
    9,
    5,
    5,
    3,
    5,
    0,
    3,
    5,
    8,
    8
   ],
   [
    8,
    7,
    10,
    10,
    8,
    2,
    9,
    8,
    9,
    3,
    3,
    0,
    1,
    6,
    7
   ],
   [
    3,
    1,
    6,
    2,
    5,
    3,
    8,
    8,
    8,
    5,
    5,
    1,
    0,
    2,
    9
   ],
   [
    2,
    5,
    4,
    1,
    1,
    6,
    8,
    3,
    9,
    1,
    8,
    6,
    2,
    0,
    8
   ],
   [
    3,
    7,
    1,
    5,
    5,
    3,
    10,
    9,
    3,
    4,
    8,
    7,
    9,
    8,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Twilight Harbor",
   "Nimbus Plaza",
   "Sapphire Arena",
   "Granite Plaza",
   "King’s Row",
   "Lunar Pier",
   "Willowshade Pavilion",
   "Knight’s Market",
   "Skyline Gardens",
   "Umbra Theater",
   "Flare Alley",
   "Jasper Marina",
   "Dragon’s Gate",
   "Gilded Archway"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Sapphire Arena",
     "Dragon’s Gate",
     "Granite Plaza",
     "King’s Row",
     "Twilight Harbor",
     "Jasper Marina",
     "Flare Alley",
     "Umbra Theater",
     "Knight’s Market",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Nimbus Plaza",
     "Gilded Archway",
     "Warehouse"
    ],
    "ans_distance": 24,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Knight’s Market",
     "Skyline Gardens",
     "Dragon’s Gate",
     "Granite Plaza",
     "King’s Row",
     "Twilight Harbor",
     "Jasper Marina",
     "Flare Alley",
     "Sapphire Arena",
     "Willowshade Pavilion",
     "Nimbus Plaza",
     "Gilded Archway",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Nimbus Plaza",
     "Willowshade Pavilion",
     "Skyline Gardens",
     "Knight’s Market",
     "King’s Row",
     "Twilight Harbor",
     "Jasper Marina",
     "Flare Alley",
     "Umbra Theater",
     "Dragon’s Gate",
     "Sapphire Arena",
     "Gilded Archway",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Nimbus Plaza",
     "Willowshade Pavilion",
     "Skyline Gardens",
     "Knight’s Market",
     "King’s Row",
     "Twilight Harbor",
     "Jasper Marina",
     "Flare Alley",
     "Umbra Theater",
     "Dragon’s Gate",
     "Sapphire Arena",
     "Gilded Archway",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Flare Alley",
     "Umbra Theater",
     "Knight’s Market",
     "Skyline Gardens",
     "Willowshade Pavilion",
     "Twilight Harbor",
     "King’s Row",
     "Gilded Archway",
     "Nimbus Plaza",
     "Lunar Pier",
     "Sapphire Arena",
     "Dragon’s Gate",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Nimbus Plaza",
     "Jasper Marina",
     "King’s Row",
     "Gilded Archway",
     "Sapphire Arena",
     "Granite Plaza",
     "Dragon’s Gate",
     "Willowshade Pavilion",
     "Skyline Gardens",
     "Flare Alley",
     "Twilight Harbor",
     "Knight’s Market",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 55,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled during the delivery route.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 2,
  "adj": [
   [
    0,
    6,
    4,
    1,
    4,
    10,
    4,
    8,
    5,
    8,
    4,
    4,
    1,
    5,
    3
   ],
   [
    6,
    0,
    7,
    8,
    7,
    1,
    7,
    1,
    2,
    2,
    6,
    10,
    7,
    5,
    6
   ],
   [
    4,
    7,
    0,
    9,
    10,
    2,
    7,
    5,
    1,
    10,
    1,
    2,
    9,
    6,
    4
   ],
   [
    1,
    8,
    9,
    0,
    10,
    1,
    8,
    3,
    6,
    7,
    2,
    3,
    4,
    6,
    10
   ],
   [
    4,
    7,
    10,
    10,
    0,
    10,
    9,
    6,
    9,
    6,
    6,
    10,
    2,
    6,
    2
   ],
   [
    10,
    1,
    2,
    1,
    10,
    0,
    2,
    5,
    3,
    9,
    4,
    1,
    4,
    5,
    5
   ],
   [
    4,
    7,
    7,
    8,
    9,
    2,
    0,
    4,
    3,
    10,
    8,
    5,
    5,
    5,
    7
   ],
   [
    8,
    1,
    5,
    3,
    6,
    5,
    4,
    0,
    8,
    7,
    5,
    1,
    6,
    3,
    6
   ],
   [
    5,
    2,
    1,
    6,
    9,
    3,
    3,
    8,
    0,
    3,
    1,
    8,
    2,
    4,
    6
   ],
   [
    8,
    2,
    10,
    7,
    6,
    9,
    10,
    7,
    3,
    0,
    4,
    2,
    2,
    7,
    8
   ],
   [
    4,
    6,
    1,
    2,
    6,
    4,
    8,
    5,
    1,
    4,
    0,
    6,
    9,
    10,
    9
   ],
   [
    4,
    10,
    2,
    3,
    10,
    1,
    5,
    1,
    8,
    2,
    6,
    0,
    1,
    1,
    1
   ],
   [
    1,
    7,
    9,
    4,
    2,
    4,
    5,
    6,
    2,
    2,
    9,
    1,
    0,
    9,
    10
   ],
   [
    5,
    5,
    6,
    6,
    6,
    5,
    5,
    3,
    4,
    7,
    10,
    1,
    9,
    0,
    4
   ],
   [
    3,
    6,
    4,
    10,
    2,
    5,
    7,
    6,
    6,
    8,
    9,
    1,
    10,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Lunar Pier",
   "Copper Clock Square",
   "Nimbus Plaza",
   "Opal Theater",
   "Umbra Theater",
   "Mosaic Plaza",
   "Echo Station",
   "Azure Gardens",
   "Haven Docks",
   "Moonlit Promenade",
   "Northwind Tower",
   "Oakshade Library",
   "Flare Alley",
   "Gilded Archway"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Umbra Theater",
     "Mosaic Plaza",
     "Azure Gardens",
     "Copper Clock Square",
     "Moonlit Promenade",
     "Haven Docks",
     "Lunar Pier",
     "Echo Station",
     "Flare Alley",
     "Northwind Tower",
     "Gilded Archway",
     "Opal Theater",
     "Oakshade Library",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.83
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Opal Theater",
     "Gilded Archway",
     "Northwind Tower",
     "Flare Alley",
     "Umbra Theater",
     "Mosaic Plaza",
     "Echo Station",
     "Lunar Pier",
     "Haven Docks",
     "Moonlit Promenade",
     "Copper Clock Square",
     "Azure Gardens",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Umbra Theater",
     "Lunar Pier",
     "Echo Station",
     "Northwind Tower",
     "Oakshade Library",
     "Opal Theater",
     "Gilded Archway",
     "Copper Clock Square",
     "Azure Gardens",
     "Moonlit Promenade",
     "Haven Docks",
     "Flare Alley",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Umbra Theater",
     "Lunar Pier",
     "Echo Station",
     "Northwind Tower",
     "Oakshade Library",
     "Opal Theater",
     "Gilded Archway",
     "Copper Clock Square",
     "Azure Gardens",
     "Moonlit Promenade",
     "Haven Docks",
     "Flare Alley",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Flare Alley",
     "Northwind Tower",
     "Copper Clock Square",
     "Moonlit Promenade",
     "Azure Gardens",
     "Haven Docks",
     "Oakshade Library",
     "Opal Theater",
     "Gilded Archway",
     "Echo Station",
     "Lunar Pier",
     "Umbra Theater",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Oakshade Library",
     "Northwind Tower",
     "Umbra Theater",
     "Mosaic Plaza",
     "Gilded Archway",
     "Echo Station",
     "Flare Alley",
     "Opal Theater",
     "Moonlit Promenade",
     "Copper Clock Square",
     "Azure Gardens",
     "Haven Docks",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 3,
  "adj": [
   [
    0,
    9,
    6,
    9,
    2,
    9,
    6,
    2,
    3,
    1,
    2,
    2,
    9,
    3,
    8
   ],
   [
    9,
    0,
    6,
    4,
    2,
    8,
    4,
    3,
    10,
    3,
    4,
    2,
    5,
    1,
    2
   ],
   [
    6,
    6,
    0,
    10,
    3,
    3,
    3,
    5,
    7,
    1,
    9,
    4,
    9,
    1,
    9
   ],
   [
    9,
    4,
    10,
    0,
    9,
    10,
    3,
    1,
    9,
    4,
    2,
    1,
    10,
    4,
    9
   ],
   [
    2,
    2,
    3,
    9,
    0,
    4,
    7,
    5,
    8,
    5,
    8,
    1,
    3,
    9,
    3
   ],
   [
    9,
    8,
    3,
    10,
    4,
    0,
    4,
    6,
    4,
    5,
    5,
    6,
    5,
    8,
    6
   ],
   [
    6,
    4,
    3,
    3,
    7,
    4,
    0,
    8,
    10,
    8,
    8,
    8,
    3,
    5,
    3
   ],
   [
    2,
    3,
    5,
    1,
    5,
    6,
    8,
    0,
    1,
    6,
    8,
    5,
    8,
    1,
    2
   ],
   [
    3,
    10,
    7,
    9,
    8,
    4,
    10,
    1,
    0,
    3,
    1,
    9,
    3,
    5,
    3
   ],
   [
    1,
    3,
    1,
    4,
    5,
    5,
    8,
    6,
    3,
    0,
    9,
    8,
    4,
    1,
    2
   ],
   [
    2,
    4,
    9,
    2,
    8,
    5,
    8,
    8,
    1,
    9,
    0,
    4,
    8,
    4,
    10
   ],
   [
    2,
    2,
    4,
    1,
    1,
    6,
    8,
    5,
    9,
    8,
    4,
    0,
    5,
    2,
    3
   ],
   [
    9,
    5,
    9,
    10,
    3,
    5,
    3,
    8,
    3,
    4,
    8,
    5,
    0,
    2,
    5
   ],
   [
    3,
    1,
    1,
    4,
    9,
    8,
    5,
    1,
    5,
    1,
    4,
    2,
    2,
    0,
    1
   ],
   [
    8,
    2,
    9,
    9,
    3,
    6,
    3,
    2,
    3,
    2,
    10,
    3,
    5,
    1,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Westgate Station",
   "Jasper Marina",
   "Knight’s Market",
   "King’s Row",
   "Yarrow Plaza",
   "Beacon Tower",
   "Flint Forge Quarter",
   "Nimbus Plaza",
   "Copper Clock Square",
   "Evergreen Circle",
   "Union Square Market",
   "Primrose Boulevard",
   "Willowshade Pavilion",
   "Zenith Arena"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Jasper Marina",
     "Yarrow Plaza",
     "Beacon Tower",
     "Primrose Boulevard",
     "Willowshade Pavilion",
     "Zenith Arena",
     "Westgate Station",
     "King’s Row",
     "Union Square Market",
     "Knight’s Market",
     "Flint Forge Quarter",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Nimbus Plaza",
     "Flint Forge Quarter",
     "Zenith Arena",
     "Willowshade Pavilion",
     "Primrose Boulevard",
     "Beacon Tower",
     "Jasper Marina",
     "Yarrow Plaza",
     "King’s Row",
     "Union Square Market",
     "Knight’s Market",
     "Westgate Station",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Westgate Station",
     "King’s Row",
     "Union Square Market",
     "Knight’s Market",
     "Flint Forge Quarter",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Yarrow Plaza",
     "Beacon Tower",
     "Primrose Boulevard",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Westgate Station",
     "King’s Row",
     "Union Square Market",
     "Knight’s Market",
     "Flint Forge Quarter",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Yarrow Plaza",
     "Beacon Tower",
     "Primrose Boulevard",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Union Square Market",
     "Knight’s Market",
     "Beacon Tower",
     "Primrose Boulevard",
     "Willowshade Pavilion",
     "Jasper Marina",
     "Copper Clock Square",
     "Zenith Arena",
     "Westgate Station",
     "Flint Forge Quarter",
     "Nimbus Plaza",
     "Yarrow Plaza",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Knight’s Market",
     "Evergreen Circle",
     "Willowshade Pavilion",
     "Westgate Station",
     "King’s Row",
     "Jasper Marina",
     "Copper Clock Square",
     "Nimbus Plaza",
     "Zenith Arena",
     "Beacon Tower",
     "Primrose Boulevard",
     "Yarrow Plaza",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Determine the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the central warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 4,
  "adj": [
   [
    0,
    6,
    10,
    1,
    7,
    3,
    9,
    7,
    2,
    9,
    1,
    9,
    2,
    10,
    1
   ],
   [
    6,
    0,
    4,
    3,
    5,
    4,
    8,
    8,
    9,
    5,
    8,
    3,
    10,
    1,
    7
   ],
   [
    10,
    4,
    0,
    8,
    3,
    7,
    7,
    10,
    5,
    4,
    9,
    7,
    7,
    4,
    3
   ],
   [
    1,
    3,
    8,
    0,
    3,
    8,
    1,
    8,
    1,
    10,
    7,
    7,
    8,
    5,
    9
   ],
   [
    7,
    5,
    3,
    3,
    0,
    2,
    7,
    4,
    4,
    4,
    1,
    2,
    9,
    10,
    10
   ],
   [
    3,
    4,
    7,
    8,
    2,
    0,
    10,
    10,
    4,
    3,
    2,
    7,
    5,
    1,
    6
   ],
   [
    9,
    8,
    7,
    1,
    7,
    10,
    0,
    9,
    2,
    3,
    7,
    7,
    7,
    8,
    4
   ],
   [
    7,
    8,
    10,
    8,
    4,
    10,
    9,
    0,
    5,
    9,
    7,
    1,
    9,
    7,
    2
   ],
   [
    2,
    9,
    5,
    1,
    4,
    4,
    2,
    5,
    0,
    10,
    5,
    8,
    8,
    6,
    9
   ],
   [
    9,
    5,
    4,
    10,
    4,
    3,
    3,
    9,
    10,
    0,
    2,
    4,
    10,
    6,
    6
   ],
   [
    1,
    8,
    9,
    7,
    1,
    2,
    7,
    7,
    5,
    2,
    0,
    8,
    8,
    4,
    9
   ],
   [
    9,
    3,
    7,
    7,
    2,
    7,
    7,
    1,
    8,
    4,
    8,
    0,
    10,
    4,
    4
   ],
   [
    2,
    10,
    7,
    8,
    9,
    5,
    7,
    9,
    8,
    10,
    8,
    10,
    0,
    6,
    6
   ],
   [
    10,
    1,
    4,
    5,
    10,
    1,
    8,
    7,
    6,
    6,
    4,
    4,
    6,
    0,
    6
   ],
   [
    1,
    7,
    3,
    9,
    10,
    6,
    4,
    2,
    9,
    6,
    9,
    4,
    6,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "King’s Row",
   "Haven Docks",
   "Amber Plaza",
   "Lighthouse Point",
   "Silvercrest Observatory",
   "Zenith Arena",
   "Dragon’s Gate",
   "Oakshade Library",
   "Mosaic Plaza",
   "Twilight Harbor",
   "Skyline Gardens",
   "Rosewood Hall",
   "Horizon Mall",
   "Jasper Marina"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Oakshade Library",
     "Zenith Arena",
     "Mosaic Plaza",
     "Twilight Harbor",
     "Lighthouse Point",
     "Haven Docks",
     "Jasper Marina",
     "Dragon’s Gate",
     "Skyline Gardens",
     "King’s Row",
     "Horizon Mall",
     "Silvercrest Observatory",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Dragon’s Gate",
     "Skyline Gardens",
     "Lighthouse Point",
     "Twilight Harbor",
     "Mosaic Plaza",
     "Rosewood Hall",
     "Haven Docks",
     "Silvercrest Observatory",
     "Horizon Mall",
     "King’s Row",
     "Amber Plaza",
     "Oakshade Library",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Zenith Arena",
     "Oakshade Library",
     "Lighthouse Point",
     "Twilight Harbor",
     "Silvercrest Observatory",
     "Horizon Mall",
     "King’s Row",
     "Skyline Gardens",
     "Dragon’s Gate",
     "Jasper Marina",
     "Haven Docks",
     "Mosaic Plaza",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Zenith Arena",
     "Oakshade Library",
     "Lighthouse Point",
     "Twilight Harbor",
     "Silvercrest Observatory",
     "Horizon Mall",
     "King’s Row",
     "Skyline Gardens",
     "Dragon’s Gate",
     "Jasper Marina",
     "Haven Docks",
     "Mosaic Plaza",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Skyline Gardens",
     "King’s Row",
     "Horizon Mall",
     "Rosewood Hall",
     "Silvercrest Observatory",
     "Mosaic Plaza",
     "Haven Docks",
     "Jasper Marina",
     "Zenith Arena",
     "Oakshade Library",
     "Amber Plaza",
     "Lighthouse Point",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Silvercrest Observatory",
     "Lighthouse Point",
     "Amber Plaza",
     "Zenith Arena",
     "Mosaic Plaza",
     "Skyline Gardens",
     "King’s Row",
     "Haven Docks",
     "Dragon’s Gate",
     "Jasper Marina",
     "Oakshade Library",
     "Horizon Mall",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 58,
    "cost_time": 1.4
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled during the delivery route.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 5,
  "adj": [
   [
    0,
    3,
    9,
    4,
    6,
    4,
    7,
    9,
    9,
    2,
    8,
    4,
    4,
    8,
    5
   ],
   [
    3,
    0,
    9,
    6,
    7,
    8,
    2,
    6,
    5,
    5,
    6,
    6,
    4,
    3,
    1
   ],
   [
    9,
    9,
    0,
    2,
    6,
    1,
    3,
    4,
    10,
    10,
    8,
    9,
    6,
    5,
    4
   ],
   [
    4,
    6,
    2,
    0,
    2,
    10,
    10,
    4,
    2,
    9,
    6,
    3,
    7,
    9,
    2
   ],
   [
    6,
    7,
    6,
    2,
    0,
    9,
    4,
    6,
    8,
    7,
    3,
    10,
    4,
    8,
    4
   ],
   [
    4,
    8,
    1,
    10,
    9,
    0,
    4,
    8,
    5,
    2,
    1,
    2,
    4,
    10,
    1
   ],
   [
    7,
    2,
    3,
    10,
    4,
    4,
    0,
    4,
    1,
    7,
    5,
    4,
    5,
    8,
    8
   ],
   [
    9,
    6,
    4,
    4,
    6,
    8,
    4,
    0,
    1,
    6,
    6,
    5,
    5,
    4,
    2
   ],
   [
    9,
    5,
    10,
    2,
    8,
    5,
    1,
    1,
    0,
    3,
    5,
    4,
    6,
    7,
    6
   ],
   [
    2,
    5,
    10,
    9,
    7,
    2,
    7,
    6,
    3,
    0,
    2,
    3,
    3,
    4,
    1
   ],
   [
    8,
    6,
    8,
    6,
    3,
    1,
    5,
    6,
    5,
    2,
    0,
    9,
    1,
    9,
    1
   ],
   [
    4,
    6,
    9,
    3,
    10,
    2,
    4,
    5,
    4,
    3,
    9,
    0,
    1,
    1,
    6
   ],
   [
    4,
    4,
    6,
    7,
    4,
    4,
    5,
    5,
    6,
    3,
    1,
    1,
    0,
    5,
    4
   ],
   [
    8,
    3,
    5,
    9,
    8,
    10,
    8,
    4,
    7,
    4,
    9,
    1,
    5,
    0,
    1
   ],
   [
    5,
    1,
    4,
    2,
    4,
    1,
    8,
    2,
    6,
    1,
    1,
    6,
    4,
    1,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Mosaic Plaza",
   "Shadowbridge Arcade",
   "Moonlit Promenade",
   "Zenith Arena",
   "Union Square Market",
   "Amber Plaza",
   "Rosewood Hall",
   "Maplewood Conservatory",
   "Jasper Marina",
   "Pennywhistle Arcade",
   "Flint Forge Quarter",
   "Evergreen Circle",
   "Yarrow Plaza",
   "Cobalt Market"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Amber Plaza",
     "Maplewood Conservatory",
     "Rosewood Hall",
     "Cobalt Market",
     "Yarrow Plaza",
     "Flint Forge Quarter",
     "Evergreen Circle",
     "Pennywhistle Arcade",
     "Zenith Arena",
     "Moonlit Promenade",
     "Shadowbridge Arcade",
     "Union Square Market",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Moonlit Promenade",
     "Shadowbridge Arcade",
     "Union Square Market",
     "Cobalt Market",
     "Pennywhistle Arcade",
     "Evergreen Circle",
     "Flint Forge Quarter",
     "Yarrow Plaza",
     "Rosewood Hall",
     "Maplewood Conservatory",
     "Amber Plaza",
     "Mosaic Plaza",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Cobalt Market",
     "Mosaic Plaza",
     "Amber Plaza",
     "Maplewood Conservatory",
     "Rosewood Hall",
     "Shadowbridge Arcade",
     "Union Square Market",
     "Pennywhistle Arcade",
     "Evergreen Circle",
     "Flint Forge Quarter",
     "Yarrow Plaza",
     "Zenith Arena",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Cobalt Market",
     "Mosaic Plaza",
     "Amber Plaza",
     "Maplewood Conservatory",
     "Rosewood Hall",
     "Shadowbridge Arcade",
     "Union Square Market",
     "Pennywhistle Arcade",
     "Evergreen Circle",
     "Flint Forge Quarter",
     "Yarrow Plaza",
     "Zenith Arena",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Shadowbridge Arcade",
     "Moonlit Promenade",
     "Maplewood Conservatory",
     "Rosewood Hall",
     "Cobalt Market",
     "Zenith Arena",
     "Amber Plaza",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Flint Forge Quarter",
     "Evergreen Circle",
     "Pennywhistle Arcade",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Cobalt Market",
     "Jasper Marina",
     "Pennywhistle Arcade",
     "Zenith Arena",
     "Amber Plaza",
     "Yarrow Plaza",
     "Maplewood Conservatory",
     "Rosewood Hall",
     "Moonlit Promenade",
     "Evergreen Circle",
     "Flint Forge Quarter",
     "Union Square Market",
     "Shadowbridge Arcade",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled during the delivery route.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 6,
  "adj": [
   [
    0,
    7,
    7,
    8,
    1,
    5,
    8,
    9,
    6,
    7,
    5,
    10,
    2,
    4,
    3
   ],
   [
    7,
    0,
    6,
    3,
    3,
    3,
    7,
    5,
    6,
    6,
    10,
    2,
    4,
    10,
    6
   ],
   [
    7,
    6,
    0,
    8,
    7,
    7,
    9,
    10,
    2,
    5,
    6,
    7,
    2,
    1,
    5
   ],
   [
    8,
    3,
    8,
    0,
    10,
    10,
    4,
    1,
    1,
    9,
    5,
    1,
    8,
    4,
    8
   ],
   [
    1,
    3,
    7,
    10,
    0,
    6,
    10,
    6,
    3,
    7,
    2,
    6,
    4,
    2,
    6
   ],
   [
    5,
    3,
    7,
    10,
    6,
    0,
    2,
    8,
    9,
    1,
    6,
    10,
    3,
    8,
    1
   ],
   [
    8,
    7,
    9,
    4,
    10,
    2,
    0,
    1,
    8,
    8,
    6,
    8,
    5,
    8,
    7
   ],
   [
    9,
    5,
    10,
    1,
    6,
    8,
    1,
    0,
    4,
    9,
    6,
    7,
    7,
    9,
    5
   ],
   [
    6,
    6,
    2,
    1,
    3,
    9,
    8,
    4,
    0,
    9,
    1,
    8,
    6,
    9,
    3
   ],
   [
    7,
    6,
    5,
    9,
    7,
    1,
    8,
    9,
    9,
    0,
    5,
    7,
    9,
    3,
    3
   ],
   [
    5,
    10,
    6,
    5,
    2,
    6,
    6,
    6,
    1,
    5,
    0,
    10,
    2,
    3,
    9
   ],
   [
    10,
    2,
    7,
    1,
    6,
    10,
    8,
    7,
    8,
    7,
    10,
    0,
    7,
    6,
    8
   ],
   [
    2,
    4,
    2,
    8,
    4,
    3,
    5,
    7,
    6,
    9,
    2,
    7,
    0,
    8,
    1
   ],
   [
    4,
    10,
    1,
    4,
    2,
    8,
    8,
    9,
    9,
    3,
    3,
    6,
    8,
    0,
    7
   ],
   [
    3,
    6,
    5,
    8,
    6,
    1,
    7,
    5,
    3,
    3,
    9,
    8,
    1,
    7,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Yarrow Plaza",
   "Ironbridge Crossing",
   "Flare Alley",
   "Quartz District",
   "Skyline Gardens",
   "Amber Plaza",
   "Northwind Tower",
   "Horizon Mall",
   "Cobalt Market",
   "Jade Fountain",
   "Brass Lantern Tavern",
   "Ivory Spire Cathedral",
   "Quarry Point",
   "Velvet Corner"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Yarrow Plaza",
     "Brass Lantern Tavern",
     "Flare Alley",
     "Northwind Tower",
     "Amber Plaza",
     "Skyline Gardens",
     "Cobalt Market",
     "Quarry Point",
     "Ironbridge Crossing",
     "Horizon Mall",
     "Jade Fountain",
     "Ivory Spire Cathedral",
     "Velvet Corner",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Ironbridge Crossing",
     "Velvet Corner",
     "Skyline Gardens",
     "Cobalt Market",
     "Quarry Point",
     "Horizon Mall",
     "Jade Fountain",
     "Flare Alley",
     "Amber Plaza",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Yarrow Plaza",
     "Quartz District",
     "Warehouse"
    ],
    "ans_distance": 47,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Jade Fountain",
     "Horizon Mall",
     "Flare Alley",
     "Northwind Tower",
     "Amber Plaza",
     "Skyline Gardens",
     "Cobalt Market",
     "Quarry Point",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Velvet Corner",
     "Yarrow Plaza",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Jade Fountain",
     "Horizon Mall",
     "Flare Alley",
     "Northwind Tower",
     "Amber Plaza",
     "Skyline Gardens",
     "Cobalt Market",
     "Quarry Point",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Velvet Corner",
     "Yarrow Plaza",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Jade Fountain",
     "Quarry Point",
     "Ironbridge Crossing",
     "Cobalt Market",
     "Skyline Gardens",
     "Amber Plaza",
     "Northwind Tower",
     "Yarrow Plaza",
     "Brass Lantern Tavern",
     "Flare Alley",
     "Horizon Mall",
     "Velvet Corner",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Yarrow Plaza",
     "Cobalt Market",
     "Skyline Gardens",
     "Amber Plaza",
     "Northwind Tower",
     "Jade Fountain",
     "Quartz District",
     "Brass Lantern Tavern",
     "Flare Alley",
     "Velvet Corner",
     "Ivory Spire Cathedral",
     "Ironbridge Crossing",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 53,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the most efficient route for the delivery driver to minimize the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 7,
  "adj": [
   [
    0,
    8,
    5,
    10,
    9,
    10,
    8,
    4,
    1,
    4,
    3,
    5,
    6,
    7,
    1
   ],
   [
    8,
    0,
    9,
    1,
    8,
    6,
    1,
    9,
    5,
    9,
    8,
    7,
    10,
    2,
    1
   ],
   [
    5,
    9,
    0,
    10,
    8,
    8,
    6,
    4,
    9,
    2,
    1,
    5,
    10,
    9,
    6
   ],
   [
    10,
    1,
    10,
    0,
    9,
    2,
    9,
    7,
    7,
    6,
    8,
    7,
    2,
    6,
    9
   ],
   [
    9,
    8,
    8,
    9,
    0,
    8,
    1,
    6,
    4,
    9,
    6,
    8,
    7,
    4,
    2
   ],
   [
    10,
    6,
    8,
    2,
    8,
    0,
    7,
    8,
    2,
    9,
    2,
    5,
    7,
    5,
    4
   ],
   [
    8,
    1,
    6,
    9,
    1,
    7,
    0,
    8,
    1,
    3,
    8,
    4,
    8,
    2,
    8
   ],
   [
    4,
    9,
    4,
    7,
    6,
    8,
    8,
    0,
    2,
    10,
    7,
    8,
    7,
    7,
    5
   ],
   [
    1,
    5,
    9,
    7,
    4,
    2,
    1,
    2,
    0,
    9,
    5,
    2,
    6,
    4,
    7
   ],
   [
    4,
    9,
    2,
    6,
    9,
    9,
    3,
    10,
    9,
    0,
    7,
    2,
    9,
    4,
    5
   ],
   [
    3,
    8,
    1,
    8,
    6,
    2,
    8,
    7,
    5,
    7,
    0,
    2,
    3,
    4,
    8
   ],
   [
    5,
    7,
    5,
    7,
    8,
    5,
    4,
    8,
    2,
    2,
    2,
    0,
    3,
    4,
    6
   ],
   [
    6,
    10,
    10,
    2,
    7,
    7,
    8,
    7,
    6,
    9,
    3,
    3,
    0,
    1,
    9
   ],
   [
    7,
    2,
    9,
    6,
    4,
    5,
    2,
    7,
    4,
    4,
    4,
    4,
    1,
    0,
    7
   ],
   [
    1,
    1,
    6,
    9,
    2,
    4,
    8,
    5,
    7,
    5,
    8,
    6,
    9,
    7,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Gilded Archway",
   "Sapphire Arena",
   "Moonlit Promenade",
   "Granite Plaza",
   "Jade Fountain",
   "Opal Theater",
   "Jasper Marina",
   "Silvercrest Observatory",
   "Mosaic Plaza",
   "Union Square Market",
   "Copper Clock Square",
   "Umbra Theater",
   "Willowshade Pavilion",
   "Lunar Pier"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Silvercrest Observatory",
     "Copper Clock Square",
     "Mosaic Plaza",
     "Sapphire Arena",
     "Union Square Market",
     "Jade Fountain",
     "Moonlit Promenade",
     "Umbra Theater",
     "Willowshade Pavilion",
     "Gilded Archway",
     "Opal Theater",
     "Granite Plaza",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Gilded Archway",
     "Willowshade Pavilion",
     "Umbra Theater",
     "Granite Plaza",
     "Opal Theater",
     "Moonlit Promenade",
     "Jade Fountain",
     "Union Square Market",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Copper Clock Square",
     "Silvercrest Observatory",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Silvercrest Observatory",
     "Opal Theater",
     "Gilded Archway",
     "Moonlit Promenade",
     "Jade Fountain",
     "Union Square Market",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Copper Clock Square",
     "Umbra Theater",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Lunar Pier",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Silvercrest Observatory",
     "Opal Theater",
     "Gilded Archway",
     "Moonlit Promenade",
     "Jade Fountain",
     "Union Square Market",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Copper Clock Square",
     "Umbra Theater",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Lunar Pier",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Silvercrest Observatory",
     "Jade Fountain",
     "Lunar Pier",
     "Gilded Archway",
     "Moonlit Promenade",
     "Umbra Theater",
     "Willowshade Pavilion",
     "Opal Theater",
     "Granite Plaza",
     "Jasper Marina",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Copper Clock Square",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Silvercrest Observatory",
     "Jasper Marina",
     "Lunar Pier",
     "Gilded Archway",
     "Moonlit Promenade",
     "Umbra Theater",
     "Copper Clock Square",
     "Jade Fountain",
     "Granite Plaza",
     "Willowshade Pavilion",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 56,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the most efficient route for the delivery driver to minimize the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 8,
  "adj": [
   [
    0,
    5,
    10,
    6,
    4,
    10,
    6,
    4,
    1,
    3,
    6,
    10,
    6,
    6,
    5
   ],
   [
    5,
    0,
    8,
    9,
    5,
    7,
    2,
    10,
    7,
    1,
    5,
    3,
    6,
    3,
    5
   ],
   [
    10,
    8,
    0,
    1,
    6,
    3,
    7,
    7,
    5,
    5,
    3,
    3,
    1,
    7,
    6
   ],
   [
    6,
    9,
    1,
    0,
    7,
    9,
    4,
    3,
    1,
    2,
    8,
    2,
    7,
    10,
    4
   ],
   [
    4,
    5,
    6,
    7,
    0,
    8,
    2,
    4,
    1,
    2,
    8,
    7,
    3,
    1,
    8
   ],
   [
    10,
    7,
    3,
    9,
    8,
    0,
    5,
    2,
    2,
    9,
    7,
    2,
    5,
    6,
    5
   ],
   [
    6,
    2,
    7,
    4,
    2,
    5,
    0,
    4,
    8,
    2,
    5,
    2,
    1,
    4,
    5
   ],
   [
    4,
    10,
    7,
    3,
    4,
    2,
    4,
    0,
    2,
    10,
    2,
    6,
    7,
    8,
    3
   ],
   [
    1,
    7,
    5,
    1,
    1,
    2,
    8,
    2,
    0,
    2,
    2,
    5,
    2,
    10,
    9
   ],
   [
    3,
    1,
    5,
    2,
    2,
    9,
    2,
    10,
    2,
    0,
    9,
    7,
    5,
    7,
    3
   ],
   [
    6,
    5,
    3,
    8,
    8,
    7,
    5,
    2,
    2,
    9,
    0,
    2,
    2,
    1,
    5
   ],
   [
    10,
    3,
    3,
    2,
    7,
    2,
    2,
    6,
    5,
    7,
    2,
    0,
    5,
    8,
    3
   ],
   [
    6,
    6,
    1,
    7,
    3,
    5,
    1,
    7,
    2,
    5,
    2,
    5,
    0,
    9,
    3
   ],
   [
    6,
    3,
    7,
    10,
    1,
    6,
    4,
    8,
    10,
    7,
    1,
    8,
    9,
    0,
    2
   ],
   [
    5,
    5,
    6,
    4,
    8,
    5,
    5,
    3,
    9,
    3,
    5,
    3,
    3,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Amber Plaza",
   "Maplewood Conservatory",
   "Shadowbridge Arcade",
   "Echo Station",
   "Moonlit Promenade",
   "Flare Alley",
   "Horizon Mall",
   "Cobalt Market",
   "Velvet Corner",
   "Yarrow Plaza",
   "Ironbridge Crossing",
   "Riverstone Wharf",
   "Oakshade Library",
   "Brass Lantern Tavern"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Oakshade Library",
     "Yarrow Plaza",
     "Horizon Mall",
     "Moonlit Promenade",
     "Ironbridge Crossing",
     "Brass Lantern Tavern",
     "Velvet Corner",
     "Amber Plaza",
     "Flare Alley",
     "Riverstone Wharf",
     "Maplewood Conservatory",
     "Shadowbridge Arcade",
     "Cobalt Market",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Velvet Corner",
     "Amber Plaza",
     "Flare Alley",
     "Riverstone Wharf",
     "Maplewood Conservatory",
     "Shadowbridge Arcade",
     "Ironbridge Crossing",
     "Cobalt Market",
     "Moonlit Promenade",
     "Horizon Mall",
     "Brass Lantern Tavern",
     "Oakshade Library",
     "Yarrow Plaza",
     "Echo Station",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Cobalt Market",
     "Shadowbridge Arcade",
     "Maplewood Conservatory",
     "Riverstone Wharf",
     "Flare Alley",
     "Amber Plaza",
     "Velvet Corner",
     "Echo Station",
     "Oakshade Library",
     "Yarrow Plaza",
     "Horizon Mall",
     "Moonlit Promenade",
     "Ironbridge Crossing",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Cobalt Market",
     "Shadowbridge Arcade",
     "Maplewood Conservatory",
     "Riverstone Wharf",
     "Flare Alley",
     "Amber Plaza",
     "Velvet Corner",
     "Echo Station",
     "Oakshade Library",
     "Yarrow Plaza",
     "Horizon Mall",
     "Moonlit Promenade",
     "Ironbridge Crossing",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Brass Lantern Tavern",
     "Ironbridge Crossing",
     "Moonlit Promenade",
     "Maplewood Conservatory",
     "Shadowbridge Arcade",
     "Velvet Corner",
     "Amber Plaza",
     "Flare Alley",
     "Riverstone Wharf",
     "Echo Station",
     "Oakshade Library",
     "Yarrow Plaza",
     "Horizon Mall",
     "Cobalt Market",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Shadowbridge Arcade",
     "Cobalt Market",
     "Moonlit Promenade",
     "Flare Alley",
     "Ironbridge Crossing",
     "Riverstone Wharf",
     "Yarrow Plaza",
     "Horizon Mall",
     "Brass Lantern Tavern",
     "Maplewood Conservatory",
     "Velvet Corner",
     "Amber Plaza",
     "Oakshade Library",
     "Echo Station",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 9,
  "adj": [
   [
    0,
    1,
    3,
    8,
    2,
    3,
    5,
    9,
    5,
    10,
    8,
    4,
    10,
    8,
    1
   ],
   [
    1,
    0,
    2,
    9,
    5,
    2,
    4,
    2,
    10,
    1,
    10,
    9,
    1,
    1,
    8
   ],
   [
    3,
    2,
    0,
    1,
    2,
    2,
    9,
    2,
    2,
    6,
    8,
    10,
    4,
    8,
    4
   ],
   [
    8,
    9,
    1,
    0,
    8,
    8,
    7,
    4,
    6,
    4,
    6,
    10,
    4,
    8,
    4
   ],
   [
    2,
    5,
    2,
    8,
    0,
    8,
    1,
    4,
    10,
    7,
    6,
    1,
    1,
    9,
    7
   ],
   [
    3,
    2,
    2,
    8,
    8,
    0,
    1,
    5,
    4,
    10,
    9,
    5,
    10,
    1,
    10
   ],
   [
    5,
    4,
    9,
    7,
    1,
    1,
    0,
    1,
    4,
    4,
    10,
    7,
    7,
    8,
    2
   ],
   [
    9,
    2,
    2,
    4,
    4,
    5,
    1,
    0,
    10,
    10,
    6,
    1,
    2,
    6,
    8
   ],
   [
    5,
    10,
    2,
    6,
    10,
    4,
    4,
    10,
    0,
    10,
    6,
    2,
    1,
    9,
    3
   ],
   [
    10,
    1,
    6,
    4,
    7,
    10,
    4,
    10,
    10,
    0,
    6,
    7,
    5,
    1,
    4
   ],
   [
    8,
    10,
    8,
    6,
    6,
    9,
    10,
    6,
    6,
    6,
    0,
    1,
    6,
    10,
    9
   ],
   [
    4,
    9,
    10,
    10,
    1,
    5,
    7,
    1,
    2,
    7,
    1,
    0,
    3,
    2,
    1
   ],
   [
    10,
    1,
    4,
    4,
    1,
    10,
    7,
    2,
    1,
    5,
    6,
    3,
    0,
    6,
    10
   ],
   [
    8,
    1,
    8,
    8,
    9,
    1,
    8,
    6,
    9,
    1,
    10,
    2,
    6,
    0,
    1
   ],
   [
    1,
    8,
    4,
    4,
    7,
    10,
    2,
    8,
    3,
    4,
    9,
    1,
    10,
    1,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Dragon’s Gate",
   "Evergreen Circle",
   "Jade Fountain",
   "Lunar Pier",
   "Jasper Marina",
   "Granite Plaza",
   "Amber Plaza",
   "Velvet Corner",
   "Cobalt Market",
   "Horizon Mall",
   "Maplewood Conservatory",
   "Westgate Station",
   "Knight’s Market",
   "King’s Row"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Cobalt Market",
     "Knight’s Market",
     "Jasper Marina",
     "Evergreen Circle",
     "Jade Fountain",
     "Horizon Mall",
     "Maplewood Conservatory",
     "Amber Plaza",
     "Granite Plaza",
     "Lunar Pier",
     "Westgate Station",
     "Velvet Corner",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 23,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Velvet Corner",
     "Westgate Station",
     "Lunar Pier",
     "Maplewood Conservatory",
     "Horizon Mall",
     "Jade Fountain",
     "Evergreen Circle",
     "Dragon’s Gate",
     "Knight’s Market",
     "Jasper Marina",
     "Granite Plaza",
     "Amber Plaza",
     "Cobalt Market",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Cobalt Market",
     "Knight’s Market",
     "Jasper Marina",
     "Granite Plaza",
     "Lunar Pier",
     "Maplewood Conservatory",
     "Amber Plaza",
     "Evergreen Circle",
     "Jade Fountain",
     "Westgate Station",
     "Velvet Corner",
     "King’s Row",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Cobalt Market",
     "Knight’s Market",
     "Jasper Marina",
     "Granite Plaza",
     "Lunar Pier",
     "Maplewood Conservatory",
     "Amber Plaza",
     "Evergreen Circle",
     "Jade Fountain",
     "Westgate Station",
     "Velvet Corner",
     "King’s Row",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Velvet Corner",
     "Westgate Station",
     "Lunar Pier",
     "Granite Plaza",
     "Amber Plaza",
     "Maplewood Conservatory",
     "Horizon Mall",
     "Jade Fountain",
     "Cobalt Market",
     "Dragon’s Gate",
     "Knight’s Market",
     "Jasper Marina",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 28,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Jade Fountain",
     "Granite Plaza",
     "Lunar Pier",
     "Dragon’s Gate",
     "Amber Plaza",
     "Horizon Mall",
     "Westgate Station",
     "Velvet Corner",
     "Cobalt Market",
     "King’s Row",
     "Maplewood Conservatory",
     "Knight’s Market",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 53,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 10,
  "adj": [
   [
    0,
    2,
    5,
    6,
    5,
    7,
    7,
    4,
    10,
    10,
    7,
    9,
    5,
    7,
    6
   ],
   [
    2,
    0,
    7,
    2,
    5,
    10,
    6,
    9,
    7,
    2,
    9,
    2,
    5,
    1,
    2
   ],
   [
    5,
    7,
    0,
    8,
    4,
    1,
    3,
    1,
    10,
    6,
    10,
    2,
    5,
    8,
    6
   ],
   [
    6,
    2,
    8,
    0,
    8,
    3,
    4,
    7,
    6,
    5,
    6,
    7,
    9,
    5,
    2
   ],
   [
    5,
    5,
    4,
    8,
    0,
    3,
    5,
    1,
    8,
    10,
    4,
    4,
    1,
    10,
    10
   ],
   [
    7,
    10,
    1,
    3,
    3,
    0,
    4,
    2,
    2,
    4,
    9,
    1,
    3,
    9,
    6
   ],
   [
    7,
    6,
    3,
    4,
    5,
    4,
    0,
    6,
    4,
    10,
    1,
    5,
    2,
    6,
    2
   ],
   [
    4,
    9,
    1,
    7,
    1,
    2,
    6,
    0,
    4,
    6,
    5,
    2,
    8,
    1,
    6
   ],
   [
    10,
    7,
    10,
    6,
    8,
    2,
    4,
    4,
    0,
    9,
    1,
    1,
    3,
    1,
    7
   ],
   [
    10,
    2,
    6,
    5,
    10,
    4,
    10,
    6,
    9,
    0,
    8,
    8,
    4,
    2,
    9
   ],
   [
    7,
    9,
    10,
    6,
    4,
    9,
    1,
    5,
    1,
    8,
    0,
    6,
    6,
    4,
    5
   ],
   [
    9,
    2,
    2,
    7,
    4,
    1,
    5,
    2,
    1,
    8,
    6,
    0,
    1,
    10,
    1
   ],
   [
    5,
    5,
    5,
    9,
    1,
    3,
    2,
    8,
    3,
    4,
    6,
    1,
    0,
    3,
    1
   ],
   [
    7,
    1,
    8,
    5,
    10,
    9,
    6,
    1,
    1,
    2,
    4,
    10,
    3,
    0,
    5
   ],
   [
    6,
    2,
    6,
    2,
    10,
    6,
    2,
    6,
    7,
    9,
    5,
    1,
    1,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Pennywhistle Arcade",
   "Flint Forge Quarter",
   "Mosaic Plaza",
   "Opal Theater",
   "Velvet Corner",
   "Nimbus Plaza",
   "Union Square Market",
   "Lighthouse Point",
   "Temple Square",
   "Maplewood Conservatory",
   "Ironbridge Crossing",
   "Yarrow Plaza",
   "Riverstone Wharf",
   "Flare Alley"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Temple Square",
     "Riverstone Wharf",
     "Lighthouse Point",
     "Maplewood Conservatory",
     "Nimbus Plaza",
     "Yarrow Plaza",
     "Opal Theater",
     "Union Square Market",
     "Flint Forge Quarter",
     "Velvet Corner",
     "Ironbridge Crossing",
     "Flare Alley",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Opal Theater",
     "Yarrow Plaza",
     "Nimbus Plaza",
     "Maplewood Conservatory",
     "Lighthouse Point",
     "Ironbridge Crossing",
     "Flare Alley",
     "Velvet Corner",
     "Flint Forge Quarter",
     "Riverstone Wharf",
     "Pennywhistle Arcade",
     "Temple Square",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Riverstone Wharf",
     "Union Square Market",
     "Flint Forge Quarter",
     "Velvet Corner",
     "Ironbridge Crossing",
     "Lighthouse Point",
     "Maplewood Conservatory",
     "Nimbus Plaza",
     "Yarrow Plaza",
     "Opal Theater",
     "Mosaic Plaza",
     "Flare Alley",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Riverstone Wharf",
     "Union Square Market",
     "Flint Forge Quarter",
     "Velvet Corner",
     "Ironbridge Crossing",
     "Lighthouse Point",
     "Maplewood Conservatory",
     "Nimbus Plaza",
     "Yarrow Plaza",
     "Opal Theater",
     "Mosaic Plaza",
     "Flare Alley",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Opal Theater",
     "Yarrow Plaza",
     "Ironbridge Crossing",
     "Flare Alley",
     "Nimbus Plaza",
     "Maplewood Conservatory",
     "Mosaic Plaza",
     "Pennywhistle Arcade",
     "Temple Square",
     "Riverstone Wharf",
     "Lighthouse Point",
     "Velvet Corner",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Flint Forge Quarter",
     "Maplewood Conservatory",
     "Lighthouse Point",
     "Ironbridge Crossing",
     "Yarrow Plaza",
     "Pennywhistle Arcade",
     "Opal Theater",
     "Velvet Corner",
     "Temple Square",
     "Riverstone Wharf",
     "Flare Alley",
     "Mosaic Plaza",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 55,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 11,
  "adj": [
   [
    0,
    7,
    3,
    4,
    7,
    10,
    5,
    8,
    3,
    3,
    9,
    5,
    7,
    2,
    6
   ],
   [
    7,
    0,
    2,
    4,
    1,
    4,
    5,
    2,
    4,
    5,
    5,
    3,
    4,
    6,
    9
   ],
   [
    3,
    2,
    0,
    10,
    2,
    10,
    3,
    6,
    2,
    10,
    10,
    8,
    5,
    6,
    2
   ],
   [
    4,
    4,
    10,
    0,
    2,
    8,
    2,
    10,
    9,
    2,
    7,
    8,
    4,
    8,
    5
   ],
   [
    7,
    1,
    2,
    2,
    0,
    9,
    7,
    4,
    7,
    6,
    8,
    9,
    2,
    1,
    9
   ],
   [
    10,
    4,
    10,
    8,
    9,
    0,
    8,
    3,
    3,
    1,
    8,
    7,
    5,
    5,
    6
   ],
   [
    5,
    5,
    3,
    2,
    7,
    8,
    0,
    4,
    10,
    4,
    1,
    2,
    6,
    2,
    6
   ],
   [
    8,
    2,
    6,
    10,
    4,
    3,
    4,
    0,
    1,
    4,
    3,
    9,
    9,
    9,
    4
   ],
   [
    3,
    4,
    2,
    9,
    7,
    3,
    10,
    1,
    0,
    4,
    5,
    10,
    6,
    3,
    8
   ],
   [
    3,
    5,
    10,
    2,
    6,
    1,
    4,
    4,
    4,
    0,
    7,
    3,
    1,
    9,
    3
   ],
   [
    9,
    5,
    10,
    7,
    8,
    8,
    1,
    3,
    5,
    7,
    0,
    8,
    9,
    9,
    4
   ],
   [
    5,
    3,
    8,
    8,
    9,
    7,
    2,
    9,
    10,
    3,
    8,
    0,
    6,
    3,
    6
   ],
   [
    7,
    4,
    5,
    4,
    2,
    5,
    6,
    9,
    6,
    1,
    9,
    6,
    0,
    1,
    10
   ],
   [
    2,
    6,
    6,
    8,
    1,
    5,
    2,
    9,
    3,
    9,
    9,
    3,
    1,
    0,
    8
   ],
   [
    6,
    9,
    2,
    5,
    9,
    6,
    6,
    4,
    8,
    3,
    4,
    6,
    10,
    8,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Quarry Point",
   "Nimbus Plaza",
   "Horizon Mall",
   "Skyline Gardens",
   "Oakshade Library",
   "Union Square Market",
   "Lunar Pier",
   "Jade Fountain",
   "Opal Theater",
   "Lighthouse Point",
   "Silvercrest Observatory",
   "Jasper Marina",
   "Riverstone Wharf",
   "Haven Docks"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Skyline Gardens",
     "Quarry Point",
     "Silvercrest Observatory",
     "Union Square Market",
     "Lighthouse Point",
     "Haven Docks",
     "Nimbus Plaza",
     "Jade Fountain",
     "Lunar Pier",
     "Oakshade Library",
     "Opal Theater",
     "Jasper Marina",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Jasper Marina",
     "Opal Theater",
     "Oakshade Library",
     "Jade Fountain",
     "Lunar Pier",
     "Quarry Point",
     "Nimbus Plaza",
     "Haven Docks",
     "Lighthouse Point",
     "Union Square Market",
     "Silvercrest Observatory",
     "Horizon Mall",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Skyline Gardens",
     "Quarry Point",
     "Nimbus Plaza",
     "Jade Fountain",
     "Lunar Pier",
     "Oakshade Library",
     "Opal Theater",
     "Jasper Marina",
     "Horizon Mall",
     "Union Square Market",
     "Lighthouse Point",
     "Haven Docks",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Skyline Gardens",
     "Quarry Point",
     "Nimbus Plaza",
     "Jade Fountain",
     "Lunar Pier",
     "Oakshade Library",
     "Opal Theater",
     "Jasper Marina",
     "Horizon Mall",
     "Union Square Market",
     "Lighthouse Point",
     "Haven Docks",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Haven Docks",
     "Lighthouse Point",
     "Lunar Pier",
     "Jade Fountain",
     "Oakshade Library",
     "Opal Theater",
     "Horizon Mall",
     "Jasper Marina",
     "Riverstone Wharf",
     "Skyline Gardens",
     "Quarry Point",
     "Silvercrest Observatory",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Jasper Marina",
     "Lighthouse Point",
     "Haven Docks",
     "Nimbus Plaza",
     "Quarry Point",
     "Lunar Pier",
     "Oakshade Library",
     "Skyline Gardens",
     "Opal Theater",
     "Jade Fountain",
     "Horizon Mall",
     "Union Square Market",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 62,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 12,
  "adj": [
   [
    0,
    4,
    4,
    1,
    9,
    4,
    10,
    1,
    2,
    4,
    10,
    1,
    5,
    5,
    7
   ],
   [
    4,
    0,
    6,
    3,
    9,
    8,
    9,
    3,
    3,
    3,
    3,
    4,
    9,
    5,
    2
   ],
   [
    4,
    6,
    0,
    7,
    8,
    7,
    1,
    3,
    9,
    9,
    8,
    5,
    8,
    6,
    2
   ],
   [
    1,
    3,
    7,
    0,
    5,
    1,
    9,
    3,
    6,
    8,
    8,
    2,
    8,
    6,
    10
   ],
   [
    9,
    9,
    8,
    5,
    0,
    5,
    10,
    2,
    1,
    5,
    9,
    9,
    5,
    9,
    3
   ],
   [
    4,
    8,
    7,
    1,
    5,
    0,
    8,
    10,
    4,
    6,
    6,
    8,
    3,
    8,
    4
   ],
   [
    10,
    9,
    1,
    9,
    10,
    8,
    0,
    3,
    8,
    8,
    8,
    2,
    1,
    5,
    3
   ],
   [
    1,
    3,
    3,
    3,
    2,
    10,
    3,
    0,
    3,
    8,
    1,
    4,
    9,
    2,
    10
   ],
   [
    2,
    3,
    9,
    6,
    1,
    4,
    8,
    3,
    0,
    6,
    10,
    8,
    1,
    2,
    1
   ],
   [
    4,
    3,
    9,
    8,
    5,
    6,
    8,
    8,
    6,
    0,
    1,
    3,
    1,
    4,
    8
   ],
   [
    10,
    3,
    8,
    8,
    9,
    6,
    8,
    1,
    10,
    1,
    0,
    7,
    2,
    8,
    5
   ],
   [
    1,
    4,
    5,
    2,
    9,
    8,
    2,
    4,
    8,
    3,
    7,
    0,
    3,
    8,
    1
   ],
   [
    5,
    9,
    8,
    8,
    5,
    3,
    1,
    9,
    1,
    1,
    2,
    3,
    0,
    4,
    3
   ],
   [
    5,
    5,
    6,
    6,
    9,
    8,
    5,
    2,
    2,
    4,
    8,
    8,
    4,
    0,
    10
   ],
   [
    7,
    2,
    2,
    10,
    3,
    4,
    3,
    10,
    1,
    8,
    5,
    1,
    3,
    10,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Ivory Spire Cathedral",
   "Brass Lantern Tavern",
   "Mosaic Plaza",
   "Willowshade Pavilion",
   "Copper Clock Square",
   "Flint Forge Quarter",
   "Northwind Tower",
   "Union Square Market",
   "Moonlit Promenade",
   "Gilded Archway",
   "Duskwood Park",
   "Quarry Point",
   "Haven Docks",
   "Lighthouse Point"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Copper Clock Square",
     "Willowshade Pavilion",
     "Union Square Market",
     "Haven Docks",
     "Northwind Tower",
     "Ivory Spire Cathedral",
     "Gilded Archway",
     "Moonlit Promenade",
     "Quarry Point",
     "Flint Forge Quarter",
     "Brass Lantern Tavern",
     "Lighthouse Point",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Duskwood Park",
     "Northwind Tower",
     "Haven Docks",
     "Gilded Archway",
     "Moonlit Promenade",
     "Quarry Point",
     "Union Square Market",
     "Willowshade Pavilion",
     "Lighthouse Point",
     "Ivory Spire Cathedral",
     "Brass Lantern Tavern",
     "Flint Forge Quarter",
     "Copper Clock Square",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Copper Clock Square",
     "Quarry Point",
     "Flint Forge Quarter",
     "Brass Lantern Tavern",
     "Lighthouse Point",
     "Union Square Market",
     "Willowshade Pavilion",
     "Northwind Tower",
     "Gilded Archway",
     "Moonlit Promenade",
     "Ivory Spire Cathedral",
     "Duskwood Park",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Copper Clock Square",
     "Quarry Point",
     "Flint Forge Quarter",
     "Brass Lantern Tavern",
     "Lighthouse Point",
     "Union Square Market",
     "Willowshade Pavilion",
     "Northwind Tower",
     "Gilded Archway",
     "Moonlit Promenade",
     "Ivory Spire Cathedral",
     "Duskwood Park",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Willowshade Pavilion",
     "Union Square Market",
     "Lighthouse Point",
     "Duskwood Park",
     "Moonlit Promenade",
     "Gilded Archway",
     "Quarry Point",
     "Flint Forge Quarter",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Haven Docks",
     "Ivory Spire Cathedral",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Union Square Market",
     "Lighthouse Point",
     "Ivory Spire Cathedral",
     "Haven Docks",
     "Willowshade Pavilion",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Flint Forge Quarter",
     "Quarry Point",
     "Gilded Archway",
     "Copper Clock Square",
     "Mosaic Plaza",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Determine the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 13,
  "adj": [
   [
    0,
    3,
    1,
    3,
    7,
    2,
    8,
    5,
    1,
    7,
    1,
    9,
    3,
    10,
    7
   ],
   [
    3,
    0,
    5,
    7,
    1,
    4,
    8,
    3,
    1,
    4,
    7,
    3,
    5,
    1,
    8
   ],
   [
    1,
    5,
    0,
    6,
    7,
    5,
    10,
    3,
    2,
    3,
    9,
    7,
    3,
    5,
    10
   ],
   [
    3,
    7,
    6,
    0,
    6,
    4,
    8,
    2,
    9,
    4,
    5,
    4,
    6,
    1,
    2
   ],
   [
    7,
    1,
    7,
    6,
    0,
    2,
    1,
    10,
    2,
    5,
    2,
    1,
    7,
    2,
    7
   ],
   [
    2,
    4,
    5,
    4,
    2,
    0,
    3,
    1,
    9,
    5,
    5,
    9,
    4,
    10,
    10
   ],
   [
    8,
    8,
    10,
    8,
    1,
    3,
    0,
    5,
    3,
    9,
    3,
    1,
    2,
    7,
    8
   ],
   [
    5,
    3,
    3,
    2,
    10,
    1,
    5,
    0,
    1,
    7,
    10,
    5,
    9,
    1,
    9
   ],
   [
    1,
    1,
    2,
    9,
    2,
    9,
    3,
    1,
    0,
    2,
    2,
    10,
    7,
    3,
    6
   ],
   [
    7,
    4,
    3,
    4,
    5,
    5,
    9,
    7,
    2,
    0,
    7,
    10,
    3,
    10,
    10
   ],
   [
    1,
    7,
    9,
    5,
    2,
    5,
    3,
    10,
    2,
    7,
    0,
    8,
    2,
    10,
    7
   ],
   [
    9,
    3,
    7,
    4,
    1,
    9,
    1,
    5,
    10,
    10,
    8,
    0,
    2,
    10,
    9
   ],
   [
    3,
    5,
    3,
    6,
    7,
    4,
    2,
    9,
    7,
    3,
    2,
    2,
    0,
    5,
    9
   ],
   [
    10,
    1,
    5,
    1,
    2,
    10,
    7,
    1,
    3,
    10,
    10,
    10,
    5,
    0,
    4
   ],
   [
    7,
    8,
    10,
    2,
    7,
    10,
    8,
    9,
    6,
    10,
    7,
    9,
    9,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Knight’s Market",
   "Quarry Point",
   "Sapphire Arena",
   "Pennywhistle Arcade",
   "Lighthouse Point",
   "Umbra Theater",
   "Mosaic Plaza",
   "Willowshade Pavilion",
   "Beacon Tower",
   "Westgate Station",
   "Flare Alley",
   "Ivory Spire Cathedral",
   "Northwind Tower",
   "Silvercrest Observatory"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Beacon Tower",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Northwind Tower",
     "Silvercrest Observatory",
     "Sapphire Arena",
     "Mosaic Plaza",
     "Lighthouse Point",
     "Pennywhistle Arcade",
     "Umbra Theater",
     "Flare Alley",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Mosaic Plaza",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Pennywhistle Arcade",
     "Flare Alley",
     "Ivory Spire Cathedral",
     "Umbra Theater",
     "Northwind Tower",
     "Sapphire Arena",
     "Silvercrest Observatory",
     "Westgate Station",
     "Beacon Tower",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Pennywhistle Arcade",
     "Umbra Theater",
     "Flare Alley",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Sapphire Arena",
     "Northwind Tower",
     "Mosaic Plaza",
     "Lighthouse Point",
     "Beacon Tower",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Pennywhistle Arcade",
     "Umbra Theater",
     "Flare Alley",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Sapphire Arena",
     "Northwind Tower",
     "Mosaic Plaza",
     "Lighthouse Point",
     "Beacon Tower",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Sapphire Arena",
     "Silvercrest Observatory",
     "Northwind Tower",
     "Pennywhistle Arcade",
     "Flare Alley",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Beacon Tower",
     "Quarry Point",
     "Mosaic Plaza",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Northwind Tower",
     "Sapphire Arena",
     "Silvercrest Observatory",
     "Flare Alley",
     "Mosaic Plaza",
     "Westgate Station",
     "Ivory Spire Cathedral",
     "Beacon Tower",
     "Willowshade Pavilion",
     "Umbra Theater",
     "Knight’s Market",
     "Pennywhistle Arcade",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 56,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled during the delivery route.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 14,
  "adj": [
   [
    0,
    7,
    1,
    10,
    6,
    3,
    8,
    4,
    7,
    5,
    7,
    1,
    8,
    10,
    1
   ],
   [
    7,
    0,
    10,
    8,
    7,
    10,
    6,
    4,
    9,
    7,
    10,
    8,
    7,
    6,
    2
   ],
   [
    1,
    10,
    0,
    2,
    4,
    7,
    3,
    10,
    1,
    5,
    8,
    10,
    4,
    2,
    4
   ],
   [
    10,
    8,
    2,
    0,
    5,
    6,
    7,
    3,
    8,
    7,
    3,
    5,
    4,
    6,
    4
   ],
   [
    6,
    7,
    4,
    5,
    0,
    5,
    6,
    3,
    10,
    3,
    1,
    3,
    5,
    9,
    2
   ],
   [
    3,
    10,
    7,
    6,
    5,
    0,
    2,
    2,
    9,
    4,
    10,
    9,
    4,
    3,
    1
   ],
   [
    8,
    6,
    3,
    7,
    6,
    2,
    0,
    2,
    6,
    5,
    2,
    8,
    6,
    1,
    3
   ],
   [
    4,
    4,
    10,
    3,
    3,
    2,
    2,
    0,
    9,
    9,
    10,
    8,
    8,
    1,
    5
   ],
   [
    7,
    9,
    1,
    8,
    10,
    9,
    6,
    9,
    0,
    9,
    6,
    2,
    3,
    4,
    8
   ],
   [
    5,
    7,
    5,
    7,
    3,
    4,
    5,
    9,
    9,
    0,
    10,
    10,
    10,
    8,
    6
   ],
   [
    7,
    10,
    8,
    3,
    1,
    10,
    2,
    10,
    6,
    10,
    0,
    6,
    9,
    5,
    7
   ],
   [
    1,
    8,
    10,
    5,
    3,
    9,
    8,
    8,
    2,
    10,
    6,
    0,
    4,
    5,
    10
   ],
   [
    8,
    7,
    4,
    4,
    5,
    4,
    6,
    8,
    3,
    10,
    9,
    4,
    0,
    2,
    8
   ],
   [
    10,
    6,
    2,
    6,
    9,
    3,
    1,
    1,
    4,
    8,
    5,
    5,
    2,
    0,
    4
   ],
   [
    1,
    2,
    4,
    4,
    2,
    1,
    3,
    5,
    8,
    6,
    7,
    10,
    8,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Brass Lantern Tavern",
   "Northwind Tower",
   "Quartz District",
   "Gilded Archway",
   "Dragon’s Gate",
   "Granite Plaza",
   "Riverstone Wharf",
   "Horizon Mall",
   "Haven Docks",
   "Beacon Tower",
   "Mosaic Plaza",
   "Velvet Corner",
   "Echo Station",
   "Skyline Gardens"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Quartz District",
     "Riverstone Wharf",
     "Brass Lantern Tavern",
     "Skyline Gardens",
     "Dragon’s Gate",
     "Haven Docks",
     "Gilded Archway",
     "Beacon Tower",
     "Granite Plaza",
     "Echo Station",
     "Velvet Corner",
     "Horizon Mall",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.83
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Skyline Gardens",
     "Dragon’s Gate",
     "Granite Plaza",
     "Echo Station",
     "Riverstone Wharf",
     "Brass Lantern Tavern",
     "Gilded Archway",
     "Haven Docks",
     "Beacon Tower",
     "Quartz District",
     "Northwind Tower",
     "Velvet Corner",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 59,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Horizon Mall",
     "Mosaic Plaza",
     "Gilded Archway",
     "Beacon Tower",
     "Granite Plaza",
     "Echo Station",
     "Riverstone Wharf",
     "Dragon’s Gate",
     "Skyline Gardens",
     "Brass Lantern Tavern",
     "Haven Docks",
     "Quartz District",
     "Velvet Corner",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Horizon Mall",
     "Mosaic Plaza",
     "Gilded Archway",
     "Beacon Tower",
     "Granite Plaza",
     "Echo Station",
     "Riverstone Wharf",
     "Dragon’s Gate",
     "Skyline Gardens",
     "Brass Lantern Tavern",
     "Haven Docks",
     "Quartz District",
     "Velvet Corner",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Granite Plaza",
     "Beacon Tower",
     "Gilded Archway",
     "Haven Docks",
     "Brass Lantern Tavern",
     "Skyline Gardens",
     "Quartz District",
     "Northwind Tower",
     "Horizon Mall",
     "Mosaic Plaza",
     "Velvet Corner",
     "Echo Station",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Dragon’s Gate",
     "Granite Plaza",
     "Horizon Mall",
     "Echo Station",
     "Beacon Tower",
     "Haven Docks",
     "Gilded Archway",
     "Mosaic Plaza",
     "Quartz District",
     "Riverstone Wharf",
     "Brass Lantern Tavern",
     "Velvet Corner",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 59,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 15,
  "adj": [
   [
    0,
    4,
    4,
    10,
    6,
    6,
    9,
    9,
    3,
    3,
    10,
    10,
    10,
    6,
    7
   ],
   [
    4,
    0,
    9,
    8,
    6,
    8,
    9,
    2,
    6,
    8,
    4,
    8,
    4,
    10,
    1
   ],
   [
    4,
    9,
    0,
    7,
    10,
    4,
    3,
    9,
    9,
    2,
    8,
    9,
    1,
    3,
    3
   ],
   [
    10,
    8,
    7,
    0,
    1,
    3,
    8,
    3,
    2,
    7,
    7,
    2,
    3,
    9,
    10
   ],
   [
    6,
    6,
    10,
    1,
    0,
    10,
    4,
    6,
    8,
    5,
    6,
    3,
    6,
    4,
    4
   ],
   [
    6,
    8,
    4,
    3,
    10,
    0,
    5,
    9,
    3,
    8,
    1,
    5,
    5,
    6,
    7
   ],
   [
    9,
    9,
    3,
    8,
    4,
    5,
    0,
    2,
    9,
    9,
    1,
    7,
    6,
    3,
    10
   ],
   [
    9,
    2,
    9,
    3,
    6,
    9,
    2,
    0,
    1,
    2,
    2,
    3,
    9,
    8,
    7
   ],
   [
    3,
    6,
    9,
    2,
    8,
    3,
    9,
    1,
    0,
    8,
    1,
    1,
    1,
    1,
    7
   ],
   [
    3,
    8,
    2,
    7,
    5,
    8,
    9,
    2,
    8,
    0,
    5,
    8,
    8,
    3,
    1
   ],
   [
    10,
    4,
    8,
    7,
    6,
    1,
    1,
    2,
    1,
    5,
    0,
    10,
    8,
    3,
    4
   ],
   [
    10,
    8,
    9,
    2,
    3,
    5,
    7,
    3,
    1,
    8,
    10,
    0,
    2,
    6,
    3
   ],
   [
    10,
    4,
    1,
    3,
    6,
    5,
    6,
    9,
    1,
    8,
    8,
    2,
    0,
    6,
    3
   ],
   [
    6,
    10,
    3,
    9,
    4,
    6,
    3,
    8,
    1,
    3,
    3,
    6,
    6,
    0,
    6
   ],
   [
    7,
    1,
    3,
    10,
    4,
    7,
    10,
    7,
    7,
    1,
    4,
    3,
    3,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Cobalt Market",
   "Umbra Theater",
   "Sapphire Arena",
   "Horizon Mall",
   "Duskwood Park",
   "Nimbus Plaza",
   "Azure Gardens",
   "Lighthouse Point",
   "King’s Row",
   "Ironbridge Crossing",
   "Pennywhistle Arcade",
   "Flint Forge Quarter",
   "Jasper Marina",
   "Ivory Spire Cathedral"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Horizon Mall",
     "Sapphire Arena",
     "Duskwood Park",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Jasper Marina",
     "Lighthouse Point",
     "Azure Gardens",
     "Cobalt Market",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 28,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Cobalt Market",
     "Azure Gardens",
     "Lighthouse Point",
     "Jasper Marina",
     "Flint Forge Quarter",
     "Umbra Theater",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Duskwood Park",
     "Pennywhistle Arcade",
     "Horizon Mall",
     "Sapphire Arena",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Azure Gardens",
     "Cobalt Market",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Umbra Theater",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Sapphire Arena",
     "Horizon Mall",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Duskwood Park",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Azure Gardens",
     "Cobalt Market",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Umbra Theater",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Sapphire Arena",
     "Horizon Mall",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Duskwood Park",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Cobalt Market",
     "Ivory Spire Cathedral",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Sapphire Arena",
     "Horizon Mall",
     "Nimbus Plaza",
     "Azure Gardens",
     "King’s Row",
     "Jasper Marina",
     "Umbra Theater",
     "Duskwood Park",
     "Ironbridge Crossing",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Cobalt Market",
     "Horizon Mall",
     "Azure Gardens",
     "Lighthouse Point",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Duskwood Park",
     "Pennywhistle Arcade",
     "Sapphire Arena",
     "Flint Forge Quarter",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 16,
  "adj": [
   [
    0,
    3,
    4,
    8,
    6,
    5,
    8,
    7,
    2,
    8,
    1,
    1,
    9,
    7,
    9
   ],
   [
    3,
    0,
    7,
    6,
    4,
    9,
    2,
    2,
    3,
    1,
    2,
    4,
    1,
    4,
    9
   ],
   [
    4,
    7,
    0,
    3,
    8,
    5,
    8,
    7,
    2,
    3,
    3,
    2,
    5,
    1,
    3
   ],
   [
    8,
    6,
    3,
    0,
    4,
    5,
    10,
    5,
    4,
    7,
    6,
    4,
    2,
    10,
    7
   ],
   [
    6,
    4,
    8,
    4,
    0,
    3,
    7,
    2,
    10,
    5,
    9,
    8,
    6,
    5,
    5
   ],
   [
    5,
    9,
    5,
    5,
    3,
    0,
    2,
    7,
    7,
    8,
    7,
    5,
    6,
    5,
    6
   ],
   [
    8,
    2,
    8,
    10,
    7,
    2,
    0,
    2,
    10,
    7,
    7,
    7,
    9,
    4,
    3
   ],
   [
    7,
    2,
    7,
    5,
    2,
    7,
    2,
    0,
    7,
    1,
    8,
    5,
    7,
    6,
    5
   ],
   [
    2,
    3,
    2,
    4,
    10,
    7,
    10,
    7,
    0,
    6,
    1,
    7,
    1,
    5,
    4
   ],
   [
    8,
    1,
    3,
    7,
    5,
    8,
    7,
    1,
    6,
    0,
    3,
    7,
    4,
    5,
    5
   ],
   [
    1,
    2,
    3,
    6,
    9,
    7,
    7,
    8,
    1,
    3,
    0,
    7,
    5,
    4,
    5
   ],
   [
    1,
    4,
    2,
    4,
    8,
    5,
    7,
    5,
    7,
    7,
    7,
    0,
    1,
    8,
    1
   ],
   [
    9,
    1,
    5,
    2,
    6,
    6,
    9,
    7,
    1,
    4,
    5,
    1,
    0,
    5,
    10
   ],
   [
    7,
    4,
    1,
    10,
    5,
    5,
    4,
    6,
    5,
    5,
    4,
    8,
    5,
    0,
    9
   ],
   [
    9,
    9,
    3,
    7,
    5,
    6,
    3,
    5,
    4,
    5,
    5,
    1,
    10,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Primrose Boulevard",
   "Haven Docks",
   "Dragon’s Gate",
   "Skyline Gardens",
   "Temple Square",
   "Ironbridge Crossing",
   "Union Square Market",
   "Jasper Marina",
   "Horizon Mall",
   "Azure Gardens",
   "Rosewood Hall",
   "Knight’s Market",
   "Flint Forge Quarter",
   "Jade Fountain"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Jasper Marina",
     "Knight’s Market",
     "Dragon’s Gate",
     "Haven Docks",
     "Flint Forge Quarter",
     "Primrose Boulevard",
     "Horizon Mall",
     "Union Square Market",
     "Skyline Gardens",
     "Temple Square",
     "Ironbridge Crossing",
     "Jade Fountain",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.83
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Rosewood Hall",
     "Jade Fountain",
     "Jasper Marina",
     "Knight’s Market",
     "Dragon’s Gate",
     "Primrose Boulevard",
     "Ironbridge Crossing",
     "Temple Square",
     "Skyline Gardens",
     "Union Square Market",
     "Horizon Mall",
     "Flint Forge Quarter",
     "Haven Docks",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Jasper Marina",
     "Knight’s Market",
     "Primrose Boulevard",
     "Horizon Mall",
     "Union Square Market",
     "Skyline Gardens",
     "Temple Square",
     "Ironbridge Crossing",
     "Jade Fountain",
     "Rosewood Hall",
     "Haven Docks",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Jasper Marina",
     "Knight’s Market",
     "Primrose Boulevard",
     "Horizon Mall",
     "Union Square Market",
     "Skyline Gardens",
     "Temple Square",
     "Ironbridge Crossing",
     "Jade Fountain",
     "Rosewood Hall",
     "Haven Docks",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Flint Forge Quarter",
     "Haven Docks",
     "Horizon Mall",
     "Union Square Market",
     "Skyline Gardens",
     "Temple Square",
     "Ironbridge Crossing",
     "Primrose Boulevard",
     "Knight’s Market",
     "Dragon’s Gate",
     "Jasper Marina",
     "Jade Fountain",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Knight’s Market",
     "Flint Forge Quarter",
     "Temple Square",
     "Union Square Market",
     "Skyline Gardens",
     "Ironbridge Crossing",
     "Horizon Mall",
     "Haven Docks",
     "Rosewood Hall",
     "Jade Fountain",
     "Jasper Marina",
     "Dragon’s Gate",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 58,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled during the delivery route.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 17,
  "adj": [
   [
    0,
    3,
    7,
    6,
    2,
    10,
    3,
    4,
    5,
    9,
    5,
    5,
    2,
    3,
    1
   ],
   [
    3,
    0,
    7,
    8,
    7,
    10,
    1,
    6,
    5,
    10,
    9,
    3,
    4,
    10,
    4
   ],
   [
    7,
    7,
    0,
    4,
    4,
    8,
    3,
    6,
    4,
    7,
    7,
    5,
    1,
    5,
    2
   ],
   [
    6,
    8,
    4,
    0,
    7,
    4,
    5,
    6,
    10,
    5,
    2,
    6,
    9,
    5,
    3
   ],
   [
    2,
    7,
    4,
    7,
    0,
    10,
    8,
    9,
    5,
    7,
    3,
    2,
    1,
    6,
    8
   ],
   [
    10,
    10,
    8,
    4,
    10,
    0,
    8,
    8,
    10,
    2,
    4,
    1,
    9,
    7,
    5
   ],
   [
    3,
    1,
    3,
    5,
    8,
    8,
    0,
    10,
    7,
    7,
    9,
    7,
    9,
    6,
    1
   ],
   [
    4,
    6,
    6,
    6,
    9,
    8,
    10,
    0,
    6,
    2,
    8,
    3,
    5,
    6,
    8
   ],
   [
    5,
    5,
    4,
    10,
    5,
    10,
    7,
    6,
    0,
    10,
    9,
    8,
    3,
    2,
    9
   ],
   [
    9,
    10,
    7,
    5,
    7,
    2,
    7,
    2,
    10,
    0,
    1,
    2,
    9,
    10,
    7
   ],
   [
    5,
    9,
    7,
    2,
    3,
    4,
    9,
    8,
    9,
    1,
    0,
    6,
    4,
    3,
    10
   ],
   [
    5,
    3,
    5,
    6,
    2,
    1,
    7,
    3,
    8,
    2,
    6,
    0,
    10,
    2,
    9
   ],
   [
    2,
    4,
    1,
    9,
    1,
    9,
    9,
    5,
    3,
    9,
    4,
    10,
    0,
    8,
    10
   ],
   [
    3,
    10,
    5,
    5,
    6,
    7,
    6,
    6,
    2,
    10,
    3,
    2,
    8,
    0,
    5
   ],
   [
    1,
    4,
    2,
    3,
    8,
    5,
    1,
    8,
    9,
    7,
    10,
    9,
    10,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Maplewood Conservatory",
   "Moonlit Promenade",
   "Duskwood Park",
   "Twilight Harbor",
   "Amber Plaza",
   "Copper Clock Square",
   "Beacon Tower",
   "Dragon’s Gate",
   "Quarry Point",
   "Temple Square",
   "Ironbridge Crossing",
   "Lunar Pier",
   "Jade Fountain",
   "Mosaic Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Lunar Pier",
     "Moonlit Promenade",
     "Dragon’s Gate",
     "Jade Fountain",
     "Ironbridge Crossing",
     "Amber Plaza",
     "Duskwood Park",
     "Temple Square",
     "Quarry Point",
     "Beacon Tower",
     "Maplewood Conservatory",
     "Copper Clock Square",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Ironbridge Crossing",
     "Amber Plaza",
     "Quarry Point",
     "Beacon Tower",
     "Temple Square",
     "Duskwood Park",
     "Moonlit Promenade",
     "Lunar Pier",
     "Jade Fountain",
     "Dragon’s Gate",
     "Maplewood Conservatory",
     "Copper Clock Square",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Copper Clock Square",
     "Maplewood Conservatory",
     "Ironbridge Crossing",
     "Amber Plaza",
     "Quarry Point",
     "Temple Square",
     "Duskwood Park",
     "Moonlit Promenade",
     "Lunar Pier",
     "Twilight Harbor",
     "Dragon’s Gate",
     "Jade Fountain",
     "Beacon Tower",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Copper Clock Square",
     "Maplewood Conservatory",
     "Ironbridge Crossing",
     "Amber Plaza",
     "Quarry Point",
     "Temple Square",
     "Duskwood Park",
     "Moonlit Promenade",
     "Lunar Pier",
     "Twilight Harbor",
     "Dragon’s Gate",
     "Jade Fountain",
     "Beacon Tower",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Ironbridge Crossing",
     "Jade Fountain",
     "Dragon’s Gate",
     "Lunar Pier",
     "Beacon Tower",
     "Quarry Point",
     "Amber Plaza",
     "Temple Square",
     "Duskwood Park",
     "Moonlit Promenade",
     "Copper Clock Square",
     "Maplewood Conservatory",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Beacon Tower",
     "Moonlit Promenade",
     "Quarry Point",
     "Temple Square",
     "Copper Clock Square",
     "Mosaic Plaza",
     "Duskwood Park",
     "Amber Plaza",
     "Lunar Pier",
     "Jade Fountain",
     "Dragon’s Gate",
     "Maplewood Conservatory",
     "Ironbridge Crossing",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 66,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 18,
  "adj": [
   [
    0,
    3,
    6,
    1,
    1,
    4,
    4,
    9,
    6,
    10,
    6,
    7,
    7,
    8,
    3
   ],
   [
    3,
    0,
    3,
    5,
    8,
    3,
    8,
    5,
    6,
    1,
    7,
    6,
    1,
    6,
    6
   ],
   [
    6,
    3,
    0,
    7,
    6,
    7,
    10,
    9,
    5,
    9,
    1,
    7,
    7,
    10,
    9
   ],
   [
    1,
    5,
    7,
    0,
    4,
    10,
    9,
    10,
    10,
    6,
    10,
    9,
    8,
    2,
    6
   ],
   [
    1,
    8,
    6,
    4,
    0,
    5,
    6,
    8,
    2,
    10,
    6,
    2,
    2,
    8,
    4
   ],
   [
    4,
    3,
    7,
    10,
    5,
    0,
    6,
    10,
    3,
    2,
    4,
    9,
    2,
    9,
    2
   ],
   [
    4,
    8,
    10,
    9,
    6,
    6,
    0,
    9,
    1,
    8,
    7,
    9,
    7,
    5,
    8
   ],
   [
    9,
    5,
    9,
    10,
    8,
    10,
    9,
    0,
    10,
    10,
    8,
    2,
    4,
    4,
    1
   ],
   [
    6,
    6,
    5,
    10,
    2,
    3,
    1,
    10,
    0,
    7,
    4,
    5,
    3,
    10,
    1
   ],
   [
    10,
    1,
    9,
    6,
    10,
    2,
    8,
    10,
    7,
    0,
    1,
    9,
    8,
    3,
    9
   ],
   [
    6,
    7,
    1,
    10,
    6,
    4,
    7,
    8,
    4,
    1,
    0,
    10,
    8,
    4,
    3
   ],
   [
    7,
    6,
    7,
    9,
    2,
    9,
    9,
    2,
    5,
    9,
    10,
    0,
    1,
    2,
    5
   ],
   [
    7,
    1,
    7,
    8,
    2,
    2,
    7,
    4,
    3,
    8,
    8,
    1,
    0,
    7,
    10
   ],
   [
    8,
    6,
    10,
    2,
    8,
    9,
    5,
    4,
    10,
    3,
    4,
    2,
    7,
    0,
    5
   ],
   [
    3,
    6,
    9,
    6,
    4,
    2,
    8,
    1,
    1,
    9,
    3,
    5,
    10,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Jasper Marina",
   "Lunar Pier",
   "Nimbus Plaza",
   "Dragon’s Gate",
   "Evergreen Circle",
   "Duskwood Park",
   "Velvet Corner",
   "Umbra Theater",
   "King’s Row",
   "Granite Plaza",
   "Flare Alley",
   "Sapphire Arena",
   "Cobalt Market",
   "Union Square Market"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Cobalt Market",
     "Flare Alley",
     "Velvet Corner",
     "Union Square Market",
     "Evergreen Circle",
     "King’s Row",
     "Granite Plaza",
     "Lunar Pier",
     "Jasper Marina",
     "Sapphire Arena",
     "Dragon’s Gate",
     "Umbra Theater",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Flare Alley",
     "Sapphire Arena",
     "Jasper Marina",
     "King’s Row",
     "Evergreen Circle",
     "Granite Plaza",
     "Lunar Pier",
     "Umbra Theater",
     "Duskwood Park",
     "Union Square Market",
     "Velvet Corner",
     "Cobalt Market",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Cobalt Market",
     "Flare Alley",
     "Sapphire Arena",
     "Jasper Marina",
     "King’s Row",
     "Granite Plaza",
     "Lunar Pier",
     "Umbra Theater",
     "Duskwood Park",
     "Dragon’s Gate",
     "Union Square Market",
     "Velvet Corner",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Cobalt Market",
     "Flare Alley",
     "Sapphire Arena",
     "Jasper Marina",
     "King’s Row",
     "Granite Plaza",
     "Lunar Pier",
     "Umbra Theater",
     "Duskwood Park",
     "Dragon’s Gate",
     "Union Square Market",
     "Velvet Corner",
     "Evergreen Circle",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "King’s Row",
     "Jasper Marina",
     "Lunar Pier",
     "Dragon’s Gate",
     "Sapphire Arena",
     "Flare Alley",
     "Velvet Corner",
     "Union Square Market",
     "Nimbus Plaza",
     "Cobalt Market",
     "Granite Plaza",
     "Umbra Theater",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Sapphire Arena",
     "Lunar Pier",
     "Nimbus Plaza",
     "King’s Row",
     "Evergreen Circle",
     "Jasper Marina",
     "Union Square Market",
     "Velvet Corner",
     "Flare Alley",
     "Cobalt Market",
     "Granite Plaza",
     "Duskwood Park",
     "Umbra Theater",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 58,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 19,
  "adj": [
   [
    0,
    2,
    4,
    8,
    6,
    7,
    7,
    1,
    6,
    8,
    10,
    7,
    8,
    4,
    8
   ],
   [
    2,
    0,
    3,
    6,
    5,
    3,
    10,
    10,
    1,
    6,
    10,
    6,
    5,
    1,
    2
   ],
   [
    4,
    3,
    0,
    4,
    3,
    4,
    1,
    5,
    6,
    1,
    10,
    2,
    7,
    6,
    7
   ],
   [
    8,
    6,
    4,
    0,
    7,
    3,
    6,
    7,
    4,
    5,
    3,
    1,
    3,
    4,
    9
   ],
   [
    6,
    5,
    3,
    7,
    0,
    9,
    4,
    5,
    10,
    1,
    1,
    8,
    10,
    6,
    4
   ],
   [
    7,
    3,
    4,
    3,
    9,
    0,
    2,
    7,
    4,
    1,
    10,
    1,
    8,
    3,
    4
   ],
   [
    7,
    10,
    1,
    6,
    4,
    2,
    0,
    2,
    10,
    7,
    10,
    9,
    10,
    9,
    1
   ],
   [
    1,
    10,
    5,
    7,
    5,
    7,
    2,
    0,
    7,
    8,
    4,
    8,
    1,
    6,
    5
   ],
   [
    6,
    1,
    6,
    4,
    10,
    4,
    10,
    7,
    0,
    3,
    4,
    8,
    8,
    3,
    5
   ],
   [
    8,
    6,
    1,
    5,
    1,
    1,
    7,
    8,
    3,
    0,
    3,
    6,
    4,
    10,
    3
   ],
   [
    10,
    10,
    10,
    3,
    1,
    10,
    10,
    4,
    4,
    3,
    0,
    3,
    5,
    4,
    1
   ],
   [
    7,
    6,
    2,
    1,
    8,
    1,
    9,
    8,
    8,
    6,
    3,
    0,
    10,
    2,
    3
   ],
   [
    8,
    5,
    7,
    3,
    10,
    8,
    10,
    1,
    8,
    4,
    5,
    10,
    0,
    8,
    5
   ],
   [
    4,
    1,
    6,
    4,
    6,
    3,
    9,
    6,
    3,
    10,
    4,
    2,
    8,
    0,
    6
   ],
   [
    8,
    2,
    7,
    9,
    4,
    4,
    1,
    5,
    5,
    3,
    1,
    3,
    5,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Flint Forge Quarter",
   "Brass Lantern Tavern",
   "Silvercrest Observatory",
   "Evergreen Circle",
   "Temple Square",
   "Westgate Station",
   "Azure Gardens",
   "Lighthouse Point",
   "Amber Plaza",
   "Shadowbridge Arcade",
   "Mosaic Plaza",
   "Willowshade Pavilion",
   "Oakshade Library",
   "Cobalt Market"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Flint Forge Quarter",
     "Lighthouse Point",
     "Oakshade Library",
     "Temple Square",
     "Amber Plaza",
     "Evergreen Circle",
     "Shadowbridge Arcade",
     "Cobalt Market",
     "Westgate Station",
     "Brass Lantern Tavern",
     "Mosaic Plaza",
     "Silvercrest Observatory",
     "Willowshade Pavilion",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 23,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flint Forge Quarter",
     "Oakshade Library",
     "Lighthouse Point",
     "Cobalt Market",
     "Westgate Station",
     "Brass Lantern Tavern",
     "Amber Plaza",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Temple Square",
     "Mosaic Plaza",
     "Silvercrest Observatory",
     "Willowshade Pavilion",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Willowshade Pavilion",
     "Silvercrest Observatory",
     "Mosaic Plaza",
     "Temple Square",
     "Amber Plaza",
     "Brass Lantern Tavern",
     "Westgate Station",
     "Cobalt Market",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Flint Forge Quarter",
     "Lighthouse Point",
     "Oakshade Library",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Azure Gardens",
     "Willowshade Pavilion",
     "Silvercrest Observatory",
     "Mosaic Plaza",
     "Temple Square",
     "Amber Plaza",
     "Brass Lantern Tavern",
     "Westgate Station",
     "Cobalt Market",
     "Shadowbridge Arcade",
     "Evergreen Circle",
     "Flint Forge Quarter",
     "Lighthouse Point",
     "Oakshade Library",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Temple Square",
     "Amber Plaza",
     "Evergreen Circle",
     "Shadowbridge Arcade",
     "Lighthouse Point",
     "Flint Forge Quarter",
     "Cobalt Market",
     "Westgate Station",
     "Brass Lantern Tavern",
     "Mosaic Plaza",
     "Silvercrest Observatory",
     "Willowshade Pavilion",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Westgate Station",
     "Temple Square",
     "Amber Plaza",
     "Brass Lantern Tavern",
     "Lighthouse Point",
     "Cobalt Market",
     "Shadowbridge Arcade",
     "Mosaic Plaza",
     "Silvercrest Observatory",
     "Willowshade Pavilion",
     "Azure Gardens",
     "Oakshade Library",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the most efficient route for the delivery driver to minimize the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 20,
  "adj": [
   [
    0,
    8,
    3,
    2,
    9,
    6,
    6,
    1,
    3,
    7,
    10,
    7,
    5,
    5,
    2
   ],
   [
    8,
    0,
    3,
    10,
    2,
    3,
    7,
    5,
    4,
    6,
    10,
    4,
    6,
    2,
    1
   ],
   [
    3,
    3,
    0,
    9,
    1,
    6,
    4,
    8,
    10,
    4,
    5,
    8,
    4,
    9,
    8
   ],
   [
    2,
    10,
    9,
    0,
    3,
    9,
    5,
    9,
    2,
    6,
    5,
    9,
    8,
    3,
    5
   ],
   [
    9,
    2,
    1,
    3,
    0,
    9,
    10,
    7,
    4,
    2,
    2,
    9,
    6,
    1,
    4
   ],
   [
    6,
    3,
    6,
    9,
    9,
    0,
    6,
    1,
    8,
    5,
    2,
    2,
    4,
    2,
    5
   ],
   [
    6,
    7,
    4,
    5,
    10,
    6,
    0,
    3,
    4,
    8,
    6,
    9,
    7,
    5,
    7
   ],
   [
    1,
    5,
    8,
    9,
    7,
    1,
    3,
    0,
    2,
    6,
    10,
    5,
    8,
    8,
    4
   ],
   [
    3,
    4,
    10,
    2,
    4,
    8,
    4,
    2,
    0,
    9,
    8,
    7,
    9,
    3,
    8
   ],
   [
    7,
    6,
    4,
    6,
    2,
    5,
    8,
    6,
    9,
    0,
    8,
    6,
    10,
    10,
    10
   ],
   [
    10,
    10,
    5,
    5,
    2,
    2,
    6,
    10,
    8,
    8,
    0,
    8,
    2,
    4,
    1
   ],
   [
    7,
    4,
    8,
    9,
    9,
    2,
    9,
    5,
    7,
    6,
    8,
    0,
    9,
    7,
    5
   ],
   [
    5,
    6,
    4,
    8,
    6,
    4,
    7,
    8,
    9,
    10,
    2,
    9,
    0,
    2,
    5
   ],
   [
    5,
    2,
    9,
    3,
    1,
    2,
    5,
    8,
    3,
    10,
    4,
    7,
    2,
    0,
    10
   ],
   [
    2,
    1,
    8,
    5,
    4,
    5,
    7,
    4,
    8,
    10,
    1,
    5,
    5,
    10,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Evergreen Circle",
   "Westgate Station",
   "Lighthouse Point",
   "Primrose Boulevard",
   "Silvercrest Observatory",
   "Knight’s Market",
   "Maplewood Conservatory",
   "Union Square Market",
   "Quarry Point",
   "Horizon Mall",
   "Beacon Tower",
   "Dragon’s Gate",
   "Willowshade Pavilion",
   "Flare Alley"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Union Square Market",
     "Knight’s Market",
     "Westgate Station",
     "Quarry Point",
     "Primrose Boulevard",
     "Willowshade Pavilion",
     "Dragon’s Gate",
     "Horizon Mall",
     "Flare Alley",
     "Evergreen Circle",
     "Beacon Tower",
     "Silvercrest Observatory",
     "Maplewood Conservatory",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Horizon Mall",
     "Dragon’s Gate",
     "Willowshade Pavilion",
     "Primrose Boulevard",
     "Westgate Station",
     "Knight’s Market",
     "Maplewood Conservatory",
     "Union Square Market",
     "Lighthouse Point",
     "Evergreen Circle",
     "Quarry Point",
     "Beacon Tower",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Maplewood Conservatory",
     "Silvercrest Observatory",
     "Horizon Mall",
     "Flare Alley",
     "Evergreen Circle",
     "Primrose Boulevard",
     "Westgate Station",
     "Knight’s Market",
     "Union Square Market",
     "Lighthouse Point",
     "Willowshade Pavilion",
     "Dragon’s Gate",
     "Beacon Tower",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Maplewood Conservatory",
     "Silvercrest Observatory",
     "Horizon Mall",
     "Flare Alley",
     "Evergreen Circle",
     "Primrose Boulevard",
     "Westgate Station",
     "Knight’s Market",
     "Union Square Market",
     "Lighthouse Point",
     "Willowshade Pavilion",
     "Dragon’s Gate",
     "Beacon Tower",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Horizon Mall",
     "Dragon’s Gate",
     "Silvercrest Observatory",
     "Beacon Tower",
     "Evergreen Circle",
     "Willowshade Pavilion",
     "Knight’s Market",
     "Union Square Market",
     "Lighthouse Point",
     "Primrose Boulevard",
     "Westgate Station",
     "Quarry Point",
     "Maplewood Conservatory",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Beacon Tower",
     "Silvercrest Observatory",
     "Maplewood Conservatory",
     "Union Square Market",
     "Willowshade Pavilion",
     "Dragon’s Gate",
     "Evergreen Circle",
     "Westgate Station",
     "Horizon Mall",
     "Quarry Point",
     "Primrose Boulevard",
     "Lighthouse Point",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 55,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 21,
  "adj": [
   [
    0,
    6,
    9,
    4,
    9,
    4,
    3,
    5,
    5,
    8,
    4,
    5,
    5,
    4,
    1
   ],
   [
    6,
    0,
    6,
    4,
    6,
    1,
    5,
    10,
    10,
    7,
    4,
    1,
    2,
    7,
    3
   ],
   [
    9,
    6,
    0,
    5,
    5,
    9,
    7,
    6,
    8,
    1,
    7,
    10,
    9,
    9,
    7
   ],
   [
    4,
    4,
    5,
    0,
    1,
    3,
    10,
    10,
    3,
    2,
    1,
    2,
    3,
    4,
    4
   ],
   [
    9,
    6,
    5,
    1,
    0,
    6,
    3,
    8,
    7,
    4,
    2,
    10,
    7,
    9,
    7
   ],
   [
    4,
    1,
    9,
    3,
    6,
    0,
    3,
    7,
    4,
    3,
    7,
    4,
    5,
    2,
    2
   ],
   [
    3,
    5,
    7,
    10,
    3,
    3,
    0,
    6,
    8,
    8,
    7,
    3,
    7,
    5,
    2
   ],
   [
    5,
    10,
    6,
    10,
    8,
    7,
    6,
    0,
    1,
    7,
    6,
    5,
    6,
    9,
    3
   ],
   [
    5,
    10,
    8,
    3,
    7,
    4,
    8,
    1,
    0,
    7,
    10,
    10,
    2,
    9,
    1
   ],
   [
    8,
    7,
    1,
    2,
    4,
    3,
    8,
    7,
    7,
    0,
    3,
    10,
    1,
    10,
    9
   ],
   [
    4,
    4,
    7,
    1,
    2,
    7,
    7,
    6,
    10,
    3,
    0,
    8,
    5,
    4,
    10
   ],
   [
    5,
    1,
    10,
    2,
    10,
    4,
    3,
    5,
    10,
    10,
    8,
    0,
    2,
    10,
    7
   ],
   [
    5,
    2,
    9,
    3,
    7,
    5,
    7,
    6,
    2,
    1,
    5,
    2,
    0,
    6,
    3
   ],
   [
    4,
    7,
    9,
    4,
    9,
    2,
    5,
    9,
    9,
    10,
    4,
    10,
    6,
    0,
    6
   ],
   [
    1,
    3,
    7,
    4,
    7,
    2,
    2,
    3,
    1,
    9,
    10,
    7,
    3,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Riverstone Wharf",
   "Gilded Archway",
   "Dragon’s Gate",
   "Copper Clock Square",
   "Echo Station",
   "Lighthouse Point",
   "Amber Plaza",
   "Yarrow Plaza",
   "Ivory Spire Cathedral",
   "Umbra Theater",
   "Silvercrest Observatory",
   "Ironbridge Crossing",
   "Cobalt Market",
   "Mosaic Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Copper Clock Square",
     "Dragon’s Gate",
     "Umbra Theater",
     "Cobalt Market",
     "Echo Station",
     "Riverstone Wharf",
     "Silvercrest Observatory",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Gilded Archway",
     "Amber Plaza",
     "Yarrow Plaza",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Yarrow Plaza",
     "Mosaic Plaza",
     "Lighthouse Point",
     "Copper Clock Square",
     "Dragon’s Gate",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Gilded Archway",
     "Ironbridge Crossing",
     "Riverstone Wharf",
     "Silvercrest Observatory",
     "Echo Station",
     "Cobalt Market",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Amber Plaza",
     "Silvercrest Observatory",
     "Riverstone Wharf",
     "Echo Station",
     "Cobalt Market",
     "Dragon’s Gate",
     "Copper Clock Square",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Gilded Archway",
     "Lighthouse Point",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Yarrow Plaza",
     "Amber Plaza",
     "Silvercrest Observatory",
     "Riverstone Wharf",
     "Echo Station",
     "Cobalt Market",
     "Dragon’s Gate",
     "Copper Clock Square",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Gilded Archway",
     "Lighthouse Point",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Gilded Archway",
     "Copper Clock Square",
     "Dragon’s Gate",
     "Umbra Theater",
     "Cobalt Market",
     "Echo Station",
     "Yarrow Plaza",
     "Amber Plaza",
     "Silvercrest Observatory",
     "Riverstone Wharf",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Echo Station",
     "Riverstone Wharf",
     "Dragon’s Gate",
     "Yarrow Plaza",
     "Gilded Archway",
     "Amber Plaza",
     "Ivory Spire Cathedral",
     "Umbra Theater",
     "Copper Clock Square",
     "Lighthouse Point",
     "Ironbridge Crossing",
     "Silvercrest Observatory",
     "Cobalt Market",
     "Warehouse"
    ],
    "ans_distance": 63,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 22,
  "adj": [
   [
    0,
    8,
    1,
    8,
    1,
    4,
    8,
    3,
    2,
    3,
    3,
    7,
    7,
    6,
    2
   ],
   [
    8,
    0,
    8,
    7,
    5,
    7,
    1,
    3,
    4,
    10,
    9,
    9,
    9,
    10,
    7
   ],
   [
    1,
    8,
    0,
    1,
    3,
    1,
    1,
    4,
    9,
    2,
    4,
    10,
    2,
    10,
    3
   ],
   [
    8,
    7,
    1,
    0,
    1,
    7,
    4,
    4,
    4,
    3,
    3,
    2,
    8,
    4,
    6
   ],
   [
    1,
    5,
    3,
    1,
    0,
    4,
    8,
    7,
    9,
    2,
    10,
    6,
    5,
    5,
    5
   ],
   [
    4,
    7,
    1,
    7,
    4,
    0,
    9,
    2,
    10,
    3,
    2,
    8,
    10,
    10,
    5
   ],
   [
    8,
    1,
    1,
    4,
    8,
    9,
    0,
    4,
    7,
    3,
    7,
    7,
    2,
    10,
    2
   ],
   [
    3,
    3,
    4,
    4,
    7,
    2,
    4,
    0,
    1,
    1,
    1,
    7,
    3,
    9,
    4
   ],
   [
    2,
    4,
    9,
    4,
    9,
    10,
    7,
    1,
    0,
    6,
    1,
    3,
    10,
    7,
    6
   ],
   [
    3,
    10,
    2,
    3,
    2,
    3,
    3,
    1,
    6,
    0,
    9,
    7,
    8,
    8,
    7
   ],
   [
    3,
    9,
    4,
    3,
    10,
    2,
    7,
    1,
    1,
    9,
    0,
    7,
    8,
    4,
    10
   ],
   [
    7,
    9,
    10,
    2,
    6,
    8,
    7,
    7,
    3,
    7,
    7,
    0,
    4,
    2,
    9
   ],
   [
    7,
    9,
    2,
    8,
    5,
    10,
    2,
    3,
    10,
    8,
    8,
    4,
    0,
    1,
    7
   ],
   [
    6,
    10,
    10,
    4,
    5,
    10,
    10,
    9,
    7,
    8,
    4,
    2,
    1,
    0,
    3
   ],
   [
    2,
    7,
    3,
    6,
    5,
    5,
    2,
    4,
    6,
    7,
    10,
    9,
    7,
    3,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Quartz District",
   "Twilight Harbor",
   "Silvercrest Observatory",
   "Jasper Marina",
   "Knight’s Market",
   "Rosewood Hall",
   "Zenith Arena",
   "Lunar Pier",
   "Nimbus Plaza",
   "Jade Fountain",
   "Yarrow Plaza",
   "Willowshade Pavilion",
   "Ivory Spire Cathedral",
   "Sapphire Arena"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Silvercrest Observatory",
     "Yarrow Plaza",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Twilight Harbor",
     "Knight’s Market",
     "Nimbus Plaza",
     "Zenith Arena",
     "Jade Fountain",
     "Lunar Pier",
     "Quartz District",
     "Rosewood Hall",
     "Sapphire Arena",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Zenith Arena",
     "Nimbus Plaza",
     "Jasper Marina",
     "Sapphire Arena",
     "Twilight Harbor",
     "Rosewood Hall",
     "Quartz District",
     "Jade Fountain",
     "Knight’s Market",
     "Willowshade Pavilion",
     "Ivory Spire Cathedral",
     "Yarrow Plaza",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Silvercrest Observatory",
     "Jasper Marina",
     "Nimbus Plaza",
     "Zenith Arena",
     "Lunar Pier",
     "Jade Fountain",
     "Knight’s Market",
     "Sapphire Arena",
     "Rosewood Hall",
     "Quartz District",
     "Yarrow Plaza",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Silvercrest Observatory",
     "Jasper Marina",
     "Nimbus Plaza",
     "Zenith Arena",
     "Lunar Pier",
     "Jade Fountain",
     "Knight’s Market",
     "Sapphire Arena",
     "Rosewood Hall",
     "Quartz District",
     "Yarrow Plaza",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Zenith Arena",
     "Nimbus Plaza",
     "Rosewood Hall",
     "Quartz District",
     "Sapphire Arena",
     "Jasper Marina",
     "Silvercrest Observatory",
     "Yarrow Plaza",
     "Willowshade Pavilion",
     "Ivory Spire Cathedral",
     "Jade Fountain",
     "Knight’s Market",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Knight’s Market",
     "Zenith Arena",
     "Twilight Harbor",
     "Sapphire Arena",
     "Quartz District",
     "Jasper Marina",
     "Silvercrest Observatory",
     "Rosewood Hall",
     "Yarrow Plaza",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Jade Fountain",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 53,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 23,
  "adj": [
   [
    0,
    3,
    8,
    2,
    5,
    7,
    1,
    4,
    8,
    10,
    1,
    5,
    6,
    2,
    5
   ],
   [
    3,
    0,
    5,
    4,
    2,
    4,
    6,
    3,
    4,
    8,
    1,
    7,
    10,
    1,
    6
   ],
   [
    8,
    5,
    0,
    10,
    10,
    9,
    10,
    6,
    1,
    2,
    8,
    6,
    5,
    5,
    8
   ],
   [
    2,
    4,
    10,
    0,
    8,
    4,
    9,
    8,
    3,
    1,
    7,
    5,
    10,
    6,
    4
   ],
   [
    5,
    2,
    10,
    8,
    0,
    9,
    8,
    4,
    3,
    2,
    8,
    8,
    2,
    2,
    7
   ],
   [
    7,
    4,
    9,
    4,
    9,
    0,
    10,
    5,
    8,
    8,
    8,
    2,
    2,
    1,
    1
   ],
   [
    1,
    6,
    10,
    9,
    8,
    10,
    0,
    1,
    8,
    2,
    7,
    4,
    4,
    8,
    7
   ],
   [
    4,
    3,
    6,
    8,
    4,
    5,
    1,
    0,
    9,
    1,
    1,
    7,
    2,
    1,
    2
   ],
   [
    8,
    4,
    1,
    3,
    3,
    8,
    8,
    9,
    0,
    9,
    6,
    6,
    6,
    1,
    4
   ],
   [
    10,
    8,
    2,
    1,
    2,
    8,
    2,
    1,
    9,
    0,
    10,
    6,
    9,
    6,
    7
   ],
   [
    1,
    1,
    8,
    7,
    8,
    8,
    7,
    1,
    6,
    10,
    0,
    9,
    1,
    6,
    8
   ],
   [
    5,
    7,
    6,
    5,
    8,
    2,
    4,
    7,
    6,
    6,
    9,
    0,
    9,
    3,
    10
   ],
   [
    6,
    10,
    5,
    10,
    2,
    2,
    4,
    2,
    6,
    9,
    1,
    9,
    0,
    4,
    10
   ],
   [
    2,
    1,
    5,
    6,
    2,
    1,
    8,
    1,
    1,
    6,
    6,
    3,
    4,
    0,
    4
   ],
   [
    5,
    6,
    8,
    4,
    7,
    1,
    7,
    2,
    4,
    7,
    8,
    10,
    10,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Granite Plaza",
   "Umbra Theater",
   "Pennywhistle Arcade",
   "Quartz District",
   "Haven Docks",
   "Horizon Mall",
   "Temple Square",
   "Azure Gardens",
   "Amber Plaza",
   "Zenith Arena",
   "Flare Alley",
   "Rosewood Hall",
   "Dragon’s Gate",
   "Evergreen Circle"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Amber Plaza",
     "Umbra Theater",
     "Azure Gardens",
     "Quartz District",
     "Rosewood Hall",
     "Zenith Arena",
     "Granite Plaza",
     "Dragon’s Gate",
     "Flare Alley",
     "Haven Docks",
     "Evergreen Circle",
     "Temple Square",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 24,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Rosewood Hall",
     "Granite Plaza",
     "Quartz District",
     "Dragon’s Gate",
     "Azure Gardens",
     "Umbra Theater",
     "Flare Alley",
     "Haven Docks",
     "Evergreen Circle",
     "Pennywhistle Arcade",
     "Amber Plaza",
     "Temple Square",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Temple Square",
     "Amber Plaza",
     "Pennywhistle Arcade",
     "Azure Gardens",
     "Umbra Theater",
     "Granite Plaza",
     "Zenith Arena",
     "Rosewood Hall",
     "Quartz District",
     "Dragon’s Gate",
     "Haven Docks",
     "Evergreen Circle",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Temple Square",
     "Amber Plaza",
     "Pennywhistle Arcade",
     "Azure Gardens",
     "Umbra Theater",
     "Granite Plaza",
     "Zenith Arena",
     "Rosewood Hall",
     "Quartz District",
     "Dragon’s Gate",
     "Haven Docks",
     "Evergreen Circle",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Quartz District",
     "Azure Gardens",
     "Umbra Theater",
     "Amber Plaza",
     "Pennywhistle Arcade",
     "Evergreen Circle",
     "Haven Docks",
     "Rosewood Hall",
     "Zenith Arena",
     "Temple Square",
     "Dragon’s Gate",
     "Flare Alley",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Rosewood Hall",
     "Flare Alley",
     "Haven Docks",
     "Granite Plaza",
     "Umbra Theater",
     "Azure Gardens",
     "Pennywhistle Arcade",
     "Amber Plaza",
     "Temple Square",
     "Dragon’s Gate",
     "Evergreen Circle",
     "Zenith Arena",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 24,
  "adj": [
   [
    0,
    10,
    8,
    8,
    4,
    1,
    8,
    9,
    6,
    5,
    4,
    9,
    9,
    6,
    5
   ],
   [
    10,
    0,
    2,
    5,
    4,
    1,
    10,
    9,
    1,
    5,
    1,
    9,
    3,
    3,
    2
   ],
   [
    8,
    2,
    0,
    1,
    3,
    5,
    3,
    3,
    6,
    2,
    1,
    3,
    6,
    5,
    10
   ],
   [
    8,
    5,
    1,
    0,
    10,
    8,
    6,
    2,
    1,
    6,
    4,
    7,
    9,
    10,
    10
   ],
   [
    4,
    4,
    3,
    10,
    0,
    1,
    5,
    6,
    7,
    7,
    1,
    8,
    9,
    1,
    6
   ],
   [
    1,
    1,
    5,
    8,
    1,
    0,
    6,
    1,
    8,
    4,
    1,
    3,
    2,
    10,
    1
   ],
   [
    8,
    10,
    3,
    6,
    5,
    6,
    0,
    6,
    2,
    9,
    6,
    8,
    2,
    4,
    10
   ],
   [
    9,
    9,
    3,
    2,
    6,
    1,
    6,
    0,
    7,
    7,
    2,
    9,
    5,
    6,
    5
   ],
   [
    6,
    1,
    6,
    1,
    7,
    8,
    2,
    7,
    0,
    9,
    6,
    10,
    7,
    4,
    1
   ],
   [
    5,
    5,
    2,
    6,
    7,
    4,
    9,
    7,
    9,
    0,
    1,
    7,
    7,
    10,
    9
   ],
   [
    4,
    1,
    1,
    4,
    1,
    1,
    6,
    2,
    6,
    1,
    0,
    2,
    5,
    9,
    5
   ],
   [
    9,
    9,
    3,
    7,
    8,
    3,
    8,
    9,
    10,
    7,
    2,
    0,
    3,
    9,
    9
   ],
   [
    9,
    3,
    6,
    9,
    9,
    2,
    2,
    5,
    7,
    7,
    5,
    3,
    0,
    7,
    3
   ],
   [
    6,
    3,
    5,
    10,
    1,
    10,
    4,
    6,
    4,
    10,
    9,
    9,
    7,
    0,
    3
   ],
   [
    5,
    2,
    10,
    10,
    6,
    1,
    10,
    5,
    1,
    9,
    5,
    9,
    3,
    3,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "King’s Row",
   "Zenith Arena",
   "Beacon Tower",
   "Gilded Archway",
   "Oakshade Library",
   "Flare Alley",
   "Knight’s Market",
   "Nimbus Plaza",
   "Westgate Station",
   "Yarrow Plaza",
   "Haven Docks",
   "Silvercrest Observatory",
   "Ivory Spire Cathedral",
   "Amber Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Amber Plaza",
     "Nimbus Plaza",
     "Flare Alley",
     "Silvercrest Observatory",
     "Haven Docks",
     "Yarrow Plaza",
     "Westgate Station",
     "Zenith Arena",
     "Beacon Tower",
     "Knight’s Market",
     "Oakshade Library",
     "Warehouse"
    ],
    "ans_distance": 28,
    "cost_time": 0.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Yarrow Plaza",
     "Haven Docks",
     "Silvercrest Observatory",
     "Oakshade Library",
     "Amber Plaza",
     "King’s Row",
     "Zenith Arena",
     "Beacon Tower",
     "Knight’s Market",
     "Gilded Archway",
     "Ivory Spire Cathedral",
     "Flare Alley",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "King’s Row",
     "Nimbus Plaza",
     "Beacon Tower",
     "Zenith Arena",
     "Yarrow Plaza",
     "Gilded Archway",
     "Ivory Spire Cathedral",
     "Amber Plaza",
     "Silvercrest Observatory",
     "Flare Alley",
     "Knight’s Market",
     "Westgate Station",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "King’s Row",
     "Nimbus Plaza",
     "Beacon Tower",
     "Zenith Arena",
     "Yarrow Plaza",
     "Gilded Archway",
     "Ivory Spire Cathedral",
     "Amber Plaza",
     "Silvercrest Observatory",
     "Flare Alley",
     "Knight’s Market",
     "Westgate Station",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "King’s Row",
     "Nimbus Plaza",
     "Beacon Tower",
     "Knight’s Market",
     "Amber Plaza",
     "Ivory Spire Cathedral",
     "Gilded Archway",
     "Yarrow Plaza",
     "Haven Docks",
     "Silvercrest Observatory",
     "Flare Alley",
     "Zenith Arena",
     "Westgate Station",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Westgate Station",
     "Zenith Arena",
     "Yarrow Plaza",
     "Haven Docks",
     "Gilded Archway",
     "King’s Row",
     "Amber Plaza",
     "Nimbus Plaza",
     "Ivory Spire Cathedral",
     "Beacon Tower",
     "Knight’s Market",
     "Flare Alley",
     "Silvercrest Observatory",
     "Oakshade Library",
     "Warehouse"
    ],
    "ans_distance": 52,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Determine the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 25,
  "adj": [
   [
    0,
    7,
    4,
    1,
    9,
    6,
    9,
    4,
    3,
    1,
    8,
    4,
    6,
    4,
    5
   ],
   [
    7,
    0,
    3,
    1,
    8,
    3,
    8,
    2,
    8,
    5,
    6,
    2,
    1,
    1,
    6
   ],
   [
    4,
    3,
    0,
    3,
    2,
    6,
    10,
    8,
    3,
    3,
    5,
    6,
    9,
    2,
    9
   ],
   [
    1,
    1,
    3,
    0,
    4,
    4,
    4,
    2,
    2,
    5,
    3,
    2,
    9,
    10,
    8
   ],
   [
    9,
    8,
    2,
    4,
    0,
    5,
    5,
    5,
    2,
    9,
    7,
    8,
    3,
    1,
    5
   ],
   [
    6,
    3,
    6,
    4,
    5,
    0,
    1,
    8,
    10,
    2,
    8,
    7,
    5,
    5,
    5
   ],
   [
    9,
    8,
    10,
    4,
    5,
    1,
    0,
    3,
    2,
    6,
    2,
    10,
    5,
    4,
    9
   ],
   [
    4,
    2,
    8,
    2,
    5,
    8,
    3,
    0,
    1,
    10,
    1,
    5,
    2,
    6,
    9
   ],
   [
    3,
    8,
    3,
    2,
    2,
    10,
    2,
    1,
    0,
    4,
    9,
    6,
    4,
    5,
    7
   ],
   [
    1,
    5,
    3,
    5,
    9,
    2,
    6,
    10,
    4,
    0,
    5,
    2,
    3,
    3,
    5
   ],
   [
    8,
    6,
    5,
    3,
    7,
    8,
    2,
    1,
    9,
    5,
    0,
    3,
    5,
    5,
    2
   ],
   [
    4,
    2,
    6,
    2,
    8,
    7,
    10,
    5,
    6,
    2,
    3,
    0,
    7,
    4,
    10
   ],
   [
    6,
    1,
    9,
    9,
    3,
    5,
    5,
    2,
    4,
    3,
    5,
    7,
    0,
    7,
    3
   ],
   [
    4,
    1,
    2,
    10,
    1,
    5,
    4,
    6,
    5,
    3,
    5,
    4,
    7,
    0,
    2
   ],
   [
    5,
    6,
    9,
    8,
    5,
    5,
    9,
    9,
    7,
    5,
    2,
    10,
    3,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Flare Alley",
   "Gilded Archway",
   "Ironbridge Crossing",
   "Nimbus Plaza",
   "Twilight Harbor",
   "Rosewood Hall",
   "Umbra Theater",
   "Oakshade Library",
   "Northwind Tower",
   "Willowshade Pavilion",
   "Mosaic Plaza",
   "Dragon’s Gate",
   "Haven Docks",
   "Jasper Marina"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Mosaic Plaza",
     "Flare Alley",
     "Dragon’s Gate",
     "Nimbus Plaza",
     "Gilded Archway",
     "Haven Docks",
     "Jasper Marina",
     "Willowshade Pavilion",
     "Umbra Theater",
     "Oakshade Library",
     "Rosewood Hall",
     "Twilight Harbor",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Twilight Harbor",
     "Rosewood Hall",
     "Umbra Theater",
     "Oakshade Library",
     "Gilded Archway",
     "Nimbus Plaza",
     "Haven Docks",
     "Flare Alley",
     "Mosaic Plaza",
     "Willowshade Pavilion",
     "Jasper Marina",
     "Dragon’s Gate",
     "Ironbridge Crossing",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Flare Alley",
     "Dragon’s Gate",
     "Umbra Theater",
     "Oakshade Library",
     "Nimbus Plaza",
     "Haven Docks",
     "Gilded Archway",
     "Northwind Tower",
     "Twilight Harbor",
     "Rosewood Hall",
     "Willowshade Pavilion",
     "Jasper Marina",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Flare Alley",
     "Dragon’s Gate",
     "Umbra Theater",
     "Oakshade Library",
     "Nimbus Plaza",
     "Haven Docks",
     "Gilded Archway",
     "Northwind Tower",
     "Twilight Harbor",
     "Rosewood Hall",
     "Willowshade Pavilion",
     "Jasper Marina",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Ironbridge Crossing",
     "Mosaic Plaza",
     "Flare Alley",
     "Dragon’s Gate",
     "Rosewood Hall",
     "Twilight Harbor",
     "Northwind Tower",
     "Gilded Archway",
     "Haven Docks",
     "Nimbus Plaza",
     "Oakshade Library",
     "Umbra Theater",
     "Willowshade Pavilion",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Jasper Marina",
     "Haven Docks",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Oakshade Library",
     "Umbra Theater",
     "Dragon’s Gate",
     "Twilight Harbor",
     "Rosewood Hall",
     "Willowshade Pavilion",
     "Mosaic Plaza",
     "Gilded Archway",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the central warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 26,
  "adj": [
   [
    0,
    9,
    3,
    6,
    9,
    10,
    7,
    6,
    9,
    10,
    1,
    9,
    3,
    7,
    10
   ],
   [
    9,
    0,
    7,
    2,
    6,
    1,
    8,
    5,
    10,
    1,
    3,
    9,
    2,
    7,
    9
   ],
   [
    3,
    7,
    0,
    6,
    8,
    9,
    10,
    5,
    2,
    8,
    1,
    6,
    5,
    7,
    6
   ],
   [
    6,
    2,
    6,
    0,
    6,
    2,
    8,
    2,
    3,
    4,
    4,
    4,
    6,
    6,
    8
   ],
   [
    9,
    6,
    8,
    6,
    0,
    5,
    8,
    4,
    9,
    9,
    3,
    6,
    1,
    7,
    10
   ],
   [
    10,
    1,
    9,
    2,
    5,
    0,
    9,
    2,
    4,
    8,
    1,
    10,
    10,
    6,
    4
   ],
   [
    7,
    8,
    10,
    8,
    8,
    9,
    0,
    7,
    9,
    4,
    2,
    2,
    9,
    10,
    3
   ],
   [
    6,
    5,
    5,
    2,
    4,
    2,
    7,
    0,
    2,
    4,
    2,
    1,
    10,
    2,
    3
   ],
   [
    9,
    10,
    2,
    3,
    9,
    4,
    9,
    2,
    0,
    2,
    9,
    8,
    5,
    5,
    8
   ],
   [
    10,
    1,
    8,
    4,
    9,
    8,
    4,
    4,
    2,
    0,
    1,
    2,
    9,
    2,
    1
   ],
   [
    1,
    3,
    1,
    4,
    3,
    1,
    2,
    2,
    9,
    1,
    0,
    5,
    2,
    5,
    1
   ],
   [
    9,
    9,
    6,
    4,
    6,
    10,
    2,
    1,
    8,
    2,
    5,
    0,
    2,
    7,
    2
   ],
   [
    3,
    2,
    5,
    6,
    1,
    10,
    9,
    10,
    5,
    9,
    2,
    2,
    0,
    1,
    8
   ],
   [
    7,
    7,
    7,
    6,
    7,
    6,
    10,
    2,
    5,
    2,
    5,
    7,
    1,
    0,
    10
   ],
   [
    10,
    9,
    6,
    8,
    10,
    4,
    3,
    3,
    8,
    1,
    1,
    2,
    8,
    10,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Evergreen Circle",
   "Temple Square",
   "Granite Plaza",
   "Willowshade Pavilion",
   "Sapphire Arena",
   "Velvet Corner",
   "Lighthouse Point",
   "Haven Docks",
   "Quarry Point",
   "Northwind Tower",
   "Mosaic Plaza",
   "Gilded Archway",
   "Copper Clock Square",
   "Silvercrest Observatory"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Haven Docks",
     "Granite Plaza",
     "Sapphire Arena",
     "Evergreen Circle",
     "Quarry Point",
     "Silvercrest Observatory",
     "Velvet Corner",
     "Mosaic Plaza",
     "Lighthouse Point",
     "Copper Clock Square",
     "Gilded Archway",
     "Willowshade Pavilion",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Velvet Corner",
     "Northwind Tower",
     "Sapphire Arena",
     "Evergreen Circle",
     "Granite Plaza",
     "Lighthouse Point",
     "Mosaic Plaza",
     "Silvercrest Observatory",
     "Quarry Point",
     "Gilded Archway",
     "Willowshade Pavilion",
     "Copper Clock Square",
     "Haven Docks",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Temple Square",
     "Haven Docks",
     "Lighthouse Point",
     "Mosaic Plaza",
     "Velvet Corner",
     "Silvercrest Observatory",
     "Quarry Point",
     "Evergreen Circle",
     "Sapphire Arena",
     "Granite Plaza",
     "Willowshade Pavilion",
     "Gilded Archway",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Temple Square",
     "Haven Docks",
     "Lighthouse Point",
     "Mosaic Plaza",
     "Velvet Corner",
     "Silvercrest Observatory",
     "Quarry Point",
     "Evergreen Circle",
     "Sapphire Arena",
     "Granite Plaza",
     "Willowshade Pavilion",
     "Gilded Archway",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Sapphire Arena",
     "Evergreen Circle",
     "Granite Plaza",
     "Temple Square",
     "Haven Docks",
     "Quarry Point",
     "Silvercrest Observatory",
     "Velvet Corner",
     "Mosaic Plaza",
     "Lighthouse Point",
     "Copper Clock Square",
     "Gilded Archway",
     "Willowshade Pavilion",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Copper Clock Square",
     "Evergreen Circle",
     "Quarry Point",
     "Haven Docks",
     "Temple Square",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Sapphire Arena",
     "Northwind Tower",
     "Mosaic Plaza",
     "Silvercrest Observatory",
     "Velvet Corner",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 56,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 27,
  "adj": [
   [
    0,
    7,
    8,
    4,
    7,
    8,
    2,
    10,
    9,
    3,
    3,
    3,
    5,
    5,
    4
   ],
   [
    7,
    0,
    6,
    10,
    5,
    5,
    8,
    10,
    2,
    3,
    6,
    4,
    10,
    10,
    3
   ],
   [
    8,
    6,
    0,
    10,
    5,
    10,
    7,
    4,
    10,
    7,
    8,
    5,
    6,
    3,
    2
   ],
   [
    4,
    10,
    10,
    0,
    5,
    6,
    4,
    8,
    3,
    3,
    9,
    6,
    8,
    3,
    3
   ],
   [
    7,
    5,
    5,
    5,
    0,
    2,
    4,
    6,
    5,
    8,
    9,
    5,
    5,
    8,
    2
   ],
   [
    8,
    5,
    10,
    6,
    2,
    0,
    10,
    3,
    8,
    8,
    3,
    9,
    3,
    2,
    7
   ],
   [
    2,
    8,
    7,
    4,
    4,
    10,
    0,
    9,
    10,
    3,
    10,
    6,
    8,
    10,
    1
   ],
   [
    10,
    10,
    4,
    8,
    6,
    3,
    9,
    0,
    9,
    10,
    4,
    10,
    7,
    8,
    3
   ],
   [
    9,
    2,
    10,
    3,
    5,
    8,
    10,
    9,
    0,
    10,
    10,
    4,
    2,
    8,
    7
   ],
   [
    3,
    3,
    7,
    3,
    8,
    8,
    3,
    10,
    10,
    0,
    5,
    10,
    9,
    8,
    8
   ],
   [
    3,
    6,
    8,
    9,
    9,
    3,
    10,
    4,
    10,
    5,
    0,
    6,
    2,
    10,
    8
   ],
   [
    3,
    4,
    5,
    6,
    5,
    9,
    6,
    10,
    4,
    10,
    6,
    0,
    9,
    7,
    3
   ],
   [
    5,
    10,
    6,
    8,
    5,
    3,
    8,
    7,
    2,
    9,
    2,
    9,
    0,
    3,
    5
   ],
   [
    5,
    10,
    3,
    3,
    8,
    2,
    10,
    8,
    8,
    8,
    10,
    7,
    3,
    0,
    2
   ],
   [
    4,
    3,
    2,
    3,
    2,
    7,
    1,
    3,
    7,
    8,
    8,
    3,
    5,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Westgate Station",
   "Maplewood Conservatory",
   "Primrose Boulevard",
   "Ironbridge Crossing",
   "Nimbus Plaza",
   "Lighthouse Point",
   "Granite Plaza",
   "Opal Theater",
   "Rosewood Hall",
   "Velvet Corner",
   "Mosaic Plaza",
   "Gilded Archway",
   "Jade Fountain",
   "Willowshade Pavilion"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Rosewood Hall",
     "Primrose Boulevard",
     "Jade Fountain",
     "Maplewood Conservatory",
     "Willowshade Pavilion",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Granite Plaza",
     "Velvet Corner",
     "Gilded Archway",
     "Opal Theater",
     "Westgate Station",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Velvet Corner",
     "Gilded Archway",
     "Opal Theater",
     "Westgate Station",
     "Primrose Boulevard",
     "Rosewood Hall",
     "Mosaic Plaza",
     "Willowshade Pavilion",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Granite Plaza",
     "Jade Fountain",
     "Maplewood Conservatory",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 62,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Willowshade Pavilion",
     "Maplewood Conservatory",
     "Jade Fountain",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Westgate Station",
     "Opal Theater",
     "Gilded Archway",
     "Velvet Corner",
     "Granite Plaza",
     "Primrose Boulevard",
     "Rosewood Hall",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 51,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Willowshade Pavilion",
     "Maplewood Conservatory",
     "Jade Fountain",
     "Nimbus Plaza",
     "Ironbridge Crossing",
     "Westgate Station",
     "Opal Theater",
     "Gilded Archway",
     "Velvet Corner",
     "Granite Plaza",
     "Primrose Boulevard",
     "Rosewood Hall",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 51,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Lighthouse Point",
     "Ironbridge Crossing",
     "Nimbus Plaza",
     "Granite Plaza",
     "Willowshade Pavilion",
     "Westgate Station",
     "Opal Theater",
     "Gilded Archway",
     "Velvet Corner",
     "Rosewood Hall",
     "Primrose Boulevard",
     "Jade Fountain",
     "Maplewood Conservatory",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 45,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Rosewood Hall",
     "Lighthouse Point",
     "Willowshade Pavilion",
     "Westgate Station",
     "Opal Theater",
     "Gilded Archway",
     "Nimbus Plaza",
     "Jade Fountain",
     "Primrose Boulevard",
     "Mosaic Plaza",
     "Ironbridge Crossing",
     "Granite Plaza",
     "Maplewood Conservatory",
     "Velvet Corner",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 28,
  "adj": [
   [
    0,
    2,
    2,
    10,
    10,
    9,
    5,
    1,
    6,
    1,
    4,
    5,
    2,
    10,
    5
   ],
   [
    2,
    0,
    6,
    8,
    5,
    10,
    9,
    1,
    9,
    9,
    2,
    10,
    9,
    10,
    7
   ],
   [
    2,
    6,
    0,
    2,
    3,
    8,
    9,
    4,
    5,
    5,
    3,
    3,
    7,
    9,
    4
   ],
   [
    10,
    8,
    2,
    0,
    6,
    9,
    6,
    7,
    5,
    3,
    6,
    1,
    2,
    10,
    10
   ],
   [
    10,
    5,
    3,
    6,
    0,
    3,
    8,
    10,
    6,
    2,
    8,
    7,
    1,
    1,
    4
   ],
   [
    9,
    10,
    8,
    9,
    3,
    0,
    3,
    9,
    9,
    3,
    10,
    9,
    10,
    1,
    8
   ],
   [
    5,
    9,
    9,
    6,
    8,
    3,
    0,
    6,
    10,
    5,
    2,
    6,
    3,
    6,
    9
   ],
   [
    1,
    1,
    4,
    7,
    10,
    9,
    6,
    0,
    7,
    8,
    8,
    1,
    7,
    3,
    6
   ],
   [
    6,
    9,
    5,
    5,
    6,
    9,
    10,
    7,
    0,
    2,
    6,
    4,
    8,
    2,
    4
   ],
   [
    1,
    9,
    5,
    3,
    2,
    3,
    5,
    8,
    2,
    0,
    7,
    10,
    1,
    2,
    10
   ],
   [
    4,
    2,
    3,
    6,
    8,
    10,
    2,
    8,
    6,
    7,
    0,
    3,
    6,
    1,
    4
   ],
   [
    5,
    10,
    3,
    1,
    7,
    9,
    6,
    1,
    4,
    10,
    3,
    0,
    2,
    7,
    3
   ],
   [
    2,
    9,
    7,
    2,
    1,
    10,
    3,
    7,
    8,
    1,
    6,
    2,
    0,
    10,
    3
   ],
   [
    10,
    10,
    9,
    10,
    1,
    1,
    6,
    3,
    2,
    2,
    1,
    7,
    10,
    0,
    9
   ],
   [
    5,
    7,
    4,
    10,
    4,
    8,
    9,
    6,
    4,
    10,
    4,
    3,
    3,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Flare Alley",
   "Riverstone Wharf",
   "Zenith Arena",
   "Umbra Theater",
   "Brass Lantern Tavern",
   "Lunar Pier",
   "Jade Fountain",
   "Pennywhistle Arcade",
   "Echo Station",
   "Oakshade Library",
   "Cobalt Market",
   "Westgate Station",
   "Copper Clock Square",
   "Yarrow Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Riverstone Wharf",
     "Zenith Arena",
     "Cobalt Market",
     "Jade Fountain",
     "Flare Alley",
     "Oakshade Library",
     "Lunar Pier",
     "Brass Lantern Tavern",
     "Copper Clock Square",
     "Umbra Theater",
     "Westgate Station",
     "Yarrow Plaza",
     "Pennywhistle Arcade",
     "Echo Station",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Westgate Station",
     "Umbra Theater",
     "Copper Clock Square",
     "Oakshade Library",
     "Lunar Pier",
     "Brass Lantern Tavern",
     "Pennywhistle Arcade",
     "Riverstone Wharf",
     "Yarrow Plaza",
     "Cobalt Market",
     "Zenith Arena",
     "Jade Fountain",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jade Fountain",
     "Flare Alley",
     "Oakshade Library",
     "Copper Clock Square",
     "Umbra Theater",
     "Westgate Station",
     "Echo Station",
     "Pennywhistle Arcade",
     "Cobalt Market",
     "Zenith Arena",
     "Riverstone Wharf",
     "Yarrow Plaza",
     "Brass Lantern Tavern",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jade Fountain",
     "Flare Alley",
     "Oakshade Library",
     "Copper Clock Square",
     "Umbra Theater",
     "Westgate Station",
     "Echo Station",
     "Pennywhistle Arcade",
     "Cobalt Market",
     "Zenith Arena",
     "Riverstone Wharf",
     "Yarrow Plaza",
     "Brass Lantern Tavern",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Flare Alley",
     "Jade Fountain",
     "Cobalt Market",
     "Zenith Arena",
     "Oakshade Library",
     "Lunar Pier",
     "Westgate Station",
     "Echo Station",
     "Pennywhistle Arcade",
     "Copper Clock Square",
     "Brass Lantern Tavern",
     "Umbra Theater",
     "Yarrow Plaza",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Zenith Arena",
     "Riverstone Wharf",
     "Oakshade Library",
     "Lunar Pier",
     "Brass Lantern Tavern",
     "Copper Clock Square",
     "Umbra Theater",
     "Echo Station",
     "Westgate Station",
     "Flare Alley",
     "Jade Fountain",
     "Yarrow Plaza",
     "Cobalt Market",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 29,
  "adj": [
   [
    0,
    7,
    3,
    4,
    9,
    7,
    2,
    2,
    7,
    5,
    1,
    9,
    5,
    5,
    2
   ],
   [
    7,
    0,
    3,
    2,
    10,
    5,
    4,
    9,
    8,
    1,
    3,
    3,
    8,
    2,
    8
   ],
   [
    3,
    3,
    0,
    7,
    6,
    9,
    7,
    9,
    5,
    8,
    3,
    5,
    10,
    2,
    3
   ],
   [
    4,
    2,
    7,
    0,
    9,
    6,
    3,
    8,
    4,
    6,
    9,
    10,
    2,
    5,
    3
   ],
   [
    9,
    10,
    6,
    9,
    0,
    7,
    10,
    8,
    7,
    5,
    10,
    3,
    2,
    8,
    8
   ],
   [
    7,
    5,
    9,
    6,
    7,
    0,
    3,
    7,
    9,
    2,
    4,
    1,
    1,
    3,
    4
   ],
   [
    2,
    4,
    7,
    3,
    10,
    3,
    0,
    10,
    9,
    2,
    2,
    10,
    4,
    10,
    9
   ],
   [
    2,
    9,
    9,
    8,
    8,
    7,
    10,
    0,
    6,
    9,
    7,
    3,
    9,
    9,
    1
   ],
   [
    7,
    8,
    5,
    4,
    7,
    9,
    9,
    6,
    0,
    2,
    9,
    2,
    5,
    10,
    5
   ],
   [
    5,
    1,
    8,
    6,
    5,
    2,
    2,
    9,
    2,
    0,
    3,
    10,
    7,
    1,
    10
   ],
   [
    1,
    3,
    3,
    9,
    10,
    4,
    2,
    7,
    9,
    3,
    0,
    2,
    7,
    2,
    1
   ],
   [
    9,
    3,
    5,
    10,
    3,
    1,
    10,
    3,
    2,
    10,
    2,
    0,
    1,
    10,
    9
   ],
   [
    5,
    8,
    10,
    2,
    2,
    1,
    4,
    9,
    5,
    7,
    7,
    1,
    0,
    4,
    7
   ],
   [
    5,
    2,
    2,
    5,
    8,
    3,
    10,
    9,
    10,
    1,
    2,
    10,
    4,
    0,
    8
   ],
   [
    2,
    8,
    3,
    3,
    8,
    4,
    9,
    1,
    5,
    10,
    1,
    9,
    7,
    8,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Lighthouse Point",
   "Twilight Harbor",
   "Granite Plaza",
   "Zenith Arena",
   "Velvet Corner",
   "Mosaic Plaza",
   "Duskwood Park",
   "Quarry Point",
   "King’s Row",
   "Amber Plaza",
   "Quartz District",
   "Willowshade Pavilion",
   "Maplewood Conservatory",
   "Knight’s Market"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Twilight Harbor",
     "Maplewood Conservatory",
     "Velvet Corner",
     "Willowshade Pavilion",
     "Zenith Arena",
     "Quartz District",
     "Quarry Point",
     "King’s Row",
     "Lighthouse Point",
     "Granite Plaza",
     "Mosaic Plaza",
     "Amber Plaza",
     "Knight’s Market",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "King’s Row",
     "Maplewood Conservatory",
     "Twilight Harbor",
     "Quarry Point",
     "Lighthouse Point",
     "Granite Plaza",
     "Willowshade Pavilion",
     "Zenith Arena",
     "Velvet Corner",
     "Quartz District",
     "Duskwood Park",
     "Knight’s Market",
     "Amber Plaza",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Knight’s Market",
     "Duskwood Park",
     "Quartz District",
     "Velvet Corner",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Lighthouse Point",
     "King’s Row",
     "Maplewood Conservatory",
     "Twilight Harbor",
     "Quarry Point",
     "Zenith Arena",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Knight’s Market",
     "Duskwood Park",
     "Quartz District",
     "Velvet Corner",
     "Willowshade Pavilion",
     "Granite Plaza",
     "Lighthouse Point",
     "King’s Row",
     "Maplewood Conservatory",
     "Twilight Harbor",
     "Quarry Point",
     "Zenith Arena",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Lighthouse Point",
     "King’s Row",
     "Quarry Point",
     "Knight’s Market",
     "Duskwood Park",
     "Quartz District",
     "Zenith Arena",
     "Willowshade Pavilion",
     "Velvet Corner",
     "Mosaic Plaza",
     "Amber Plaza",
     "Maplewood Conservatory",
     "Twilight Harbor",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Knight’s Market",
     "Duskwood Park",
     "Lighthouse Point",
     "Twilight Harbor",
     "Quarry Point",
     "Willowshade Pavilion",
     "Zenith Arena",
     "Quartz District",
     "Velvet Corner",
     "King’s Row",
     "Maplewood Conservatory",
     "Granite Plaza",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 30,
  "adj": [
   [
    0,
    4,
    4,
    4,
    8,
    9,
    1,
    8,
    8,
    4,
    8,
    9,
    6,
    5,
    3
   ],
   [
    4,
    0,
    8,
    10,
    4,
    6,
    6,
    2,
    5,
    1,
    9,
    2,
    7,
    7,
    6
   ],
   [
    4,
    8,
    0,
    9,
    2,
    5,
    7,
    6,
    2,
    6,
    7,
    3,
    9,
    6,
    7
   ],
   [
    4,
    10,
    9,
    0,
    4,
    1,
    3,
    8,
    3,
    4,
    2,
    6,
    9,
    1,
    8
   ],
   [
    8,
    4,
    2,
    4,
    0,
    7,
    6,
    3,
    1,
    3,
    3,
    9,
    3,
    1,
    7
   ],
   [
    9,
    6,
    5,
    1,
    7,
    0,
    6,
    8,
    7,
    5,
    6,
    8,
    9,
    3,
    5
   ],
   [
    1,
    6,
    7,
    3,
    6,
    6,
    0,
    5,
    3,
    1,
    5,
    10,
    4,
    10,
    3
   ],
   [
    8,
    2,
    6,
    8,
    3,
    8,
    5,
    0,
    8,
    7,
    6,
    9,
    8,
    6,
    8
   ],
   [
    8,
    5,
    2,
    3,
    1,
    7,
    3,
    8,
    0,
    10,
    7,
    7,
    7,
    3,
    6
   ],
   [
    4,
    1,
    6,
    4,
    3,
    5,
    1,
    7,
    10,
    0,
    10,
    2,
    4,
    2,
    1
   ],
   [
    8,
    9,
    7,
    2,
    3,
    6,
    5,
    6,
    7,
    10,
    0,
    7,
    2,
    4,
    3
   ],
   [
    9,
    2,
    3,
    6,
    9,
    8,
    10,
    9,
    7,
    2,
    7,
    0,
    2,
    3,
    7
   ],
   [
    6,
    7,
    9,
    9,
    3,
    9,
    4,
    8,
    7,
    4,
    2,
    2,
    0,
    3,
    3
   ],
   [
    5,
    7,
    6,
    1,
    1,
    3,
    10,
    6,
    3,
    2,
    4,
    3,
    3,
    0,
    4
   ],
   [
    3,
    6,
    7,
    8,
    7,
    5,
    3,
    8,
    6,
    1,
    3,
    7,
    3,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Nimbus Plaza",
   "Pennywhistle Arcade",
   "Lunar Pier",
   "Quartz District",
   "Echo Station",
   "Zenith Arena",
   "Ivory Spire Cathedral",
   "Flint Forge Quarter",
   "Azure Gardens",
   "Beacon Tower",
   "Cobalt Market",
   "Knight’s Market",
   "Skyline Gardens",
   "Union Square Market"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Cobalt Market",
     "Knight’s Market",
     "Beacon Tower",
     "Lunar Pier",
     "Echo Station",
     "Skyline Gardens",
     "Quartz District",
     "Ivory Spire Cathedral",
     "Nimbus Plaza",
     "Azure Gardens",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Azure Gardens",
     "Skyline Gardens",
     "Quartz District",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Lunar Pier",
     "Echo Station",
     "Beacon Tower",
     "Knight’s Market",
     "Cobalt Market",
     "Nimbus Plaza",
     "Ivory Spire Cathedral",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Azure Gardens",
     "Nimbus Plaza",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Cobalt Market",
     "Knight’s Market",
     "Beacon Tower",
     "Lunar Pier",
     "Echo Station",
     "Skyline Gardens",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Azure Gardens",
     "Nimbus Plaza",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Cobalt Market",
     "Knight’s Market",
     "Beacon Tower",
     "Lunar Pier",
     "Echo Station",
     "Skyline Gardens",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Flint Forge Quarter",
     "Quartz District",
     "Skyline Gardens",
     "Echo Station",
     "Lunar Pier",
     "Beacon Tower",
     "Knight’s Market",
     "Cobalt Market",
     "Azure Gardens",
     "Nimbus Plaza",
     "Ivory Spire Cathedral",
     "Zenith Arena",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Echo Station",
     "Azure Gardens",
     "Skyline Gardens",
     "Cobalt Market",
     "Union Square Market",
     "Knight’s Market",
     "Flint Forge Quarter",
     "Ivory Spire Cathedral",
     "Nimbus Plaza",
     "Quartz District",
     "Beacon Tower",
     "Lunar Pier",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 59,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 31,
  "adj": [
   [
    0,
    6,
    2,
    2,
    2,
    1,
    4,
    8,
    3,
    2,
    9,
    10,
    5,
    7,
    8
   ],
   [
    6,
    0,
    6,
    2,
    5,
    10,
    7,
    1,
    5,
    6,
    1,
    4,
    10,
    3,
    1
   ],
   [
    2,
    6,
    0,
    8,
    10,
    7,
    9,
    4,
    9,
    2,
    6,
    10,
    9,
    9,
    5
   ],
   [
    2,
    2,
    8,
    0,
    9,
    6,
    10,
    3,
    10,
    6,
    1,
    3,
    2,
    7,
    3
   ],
   [
    2,
    5,
    10,
    9,
    0,
    4,
    2,
    8,
    5,
    6,
    9,
    5,
    3,
    3,
    4
   ],
   [
    1,
    10,
    7,
    6,
    4,
    0,
    8,
    5,
    10,
    8,
    1,
    5,
    2,
    6,
    7
   ],
   [
    4,
    7,
    9,
    10,
    2,
    8,
    0,
    7,
    10,
    3,
    5,
    7,
    2,
    1,
    4
   ],
   [
    8,
    1,
    4,
    3,
    8,
    5,
    7,
    0,
    3,
    10,
    10,
    5,
    4,
    4,
    2
   ],
   [
    3,
    5,
    9,
    10,
    5,
    10,
    10,
    3,
    0,
    10,
    5,
    2,
    8,
    4,
    3
   ],
   [
    2,
    6,
    2,
    6,
    6,
    8,
    3,
    10,
    10,
    0,
    5,
    1,
    7,
    2,
    8
   ],
   [
    9,
    1,
    6,
    1,
    9,
    1,
    5,
    10,
    5,
    5,
    0,
    2,
    1,
    8,
    5
   ],
   [
    10,
    4,
    10,
    3,
    5,
    5,
    7,
    5,
    2,
    1,
    2,
    0,
    9,
    6,
    9
   ],
   [
    5,
    10,
    9,
    2,
    3,
    2,
    2,
    4,
    8,
    7,
    1,
    9,
    0,
    9,
    8
   ],
   [
    7,
    3,
    9,
    7,
    3,
    6,
    1,
    4,
    4,
    2,
    8,
    6,
    9,
    0,
    7
   ],
   [
    8,
    1,
    5,
    3,
    4,
    7,
    4,
    2,
    3,
    8,
    5,
    9,
    8,
    7,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Evergreen Circle",
   "Northwind Tower",
   "Echo Station",
   "Cobalt Market",
   "Knight’s Market",
   "Primrose Boulevard",
   "Zenith Arena",
   "Quarry Point",
   "Gilded Archway",
   "Rosewood Hall",
   "Yarrow Plaza",
   "Pennywhistle Arcade",
   "Dragon’s Gate",
   "Temple Square"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Northwind Tower",
     "Zenith Arena",
     "Evergreen Circle",
     "Temple Square",
     "Quarry Point",
     "Yarrow Plaza",
     "Gilded Archway",
     "Dragon’s Gate",
     "Primrose Boulevard",
     "Cobalt Market",
     "Pennywhistle Arcade",
     "Echo Station",
     "Rosewood Hall",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Yarrow Plaza",
     "Quarry Point",
     "Dragon’s Gate",
     "Primrose Boulevard",
     "Cobalt Market",
     "Northwind Tower",
     "Zenith Arena",
     "Evergreen Circle",
     "Temple Square",
     "Rosewood Hall",
     "Pennywhistle Arcade",
     "Echo Station",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Rosewood Hall",
     "Evergreen Circle",
     "Zenith Arena",
     "Temple Square",
     "Echo Station",
     "Pennywhistle Arcade",
     "Primrose Boulevard",
     "Dragon’s Gate",
     "Gilded Archway",
     "Yarrow Plaza",
     "Quarry Point",
     "Cobalt Market",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Rosewood Hall",
     "Evergreen Circle",
     "Zenith Arena",
     "Temple Square",
     "Echo Station",
     "Pennywhistle Arcade",
     "Primrose Boulevard",
     "Dragon’s Gate",
     "Gilded Archway",
     "Yarrow Plaza",
     "Quarry Point",
     "Cobalt Market",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Northwind Tower",
     "Zenith Arena",
     "Evergreen Circle",
     "Temple Square",
     "Echo Station",
     "Rosewood Hall",
     "Yarrow Plaza",
     "Quarry Point",
     "Dragon’s Gate",
     "Primrose Boulevard",
     "Cobalt Market",
     "Pennywhistle Arcade",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Zenith Arena",
     "Northwind Tower",
     "Dragon’s Gate",
     "Cobalt Market",
     "Temple Square",
     "Echo Station",
     "Pennywhistle Arcade",
     "Rosewood Hall",
     "Evergreen Circle",
     "Gilded Archway",
     "Yarrow Plaza",
     "Primrose Boulevard",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 56,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 32,
  "adj": [
   [
    0,
    3,
    4,
    5,
    4,
    8,
    6,
    4,
    1,
    1,
    3,
    10,
    9,
    10,
    9
   ],
   [
    3,
    0,
    10,
    10,
    9,
    2,
    10,
    2,
    9,
    6,
    10,
    2,
    8,
    1,
    9
   ],
   [
    4,
    10,
    0,
    4,
    7,
    6,
    10,
    10,
    6,
    3,
    7,
    7,
    4,
    8,
    8
   ],
   [
    5,
    10,
    4,
    0,
    6,
    8,
    9,
    10,
    9,
    4,
    9,
    2,
    5,
    4,
    2
   ],
   [
    4,
    9,
    7,
    6,
    0,
    5,
    6,
    2,
    2,
    7,
    5,
    9,
    9,
    4,
    6
   ],
   [
    8,
    2,
    6,
    8,
    5,
    0,
    8,
    10,
    10,
    1,
    10,
    7,
    1,
    7,
    2
   ],
   [
    6,
    10,
    10,
    9,
    6,
    8,
    0,
    7,
    8,
    5,
    7,
    9,
    3,
    7,
    1
   ],
   [
    4,
    2,
    10,
    10,
    2,
    10,
    7,
    0,
    5,
    4,
    3,
    10,
    7,
    6,
    5
   ],
   [
    1,
    9,
    6,
    9,
    2,
    10,
    8,
    5,
    0,
    3,
    5,
    3,
    3,
    7,
    10
   ],
   [
    1,
    6,
    3,
    4,
    7,
    1,
    5,
    4,
    3,
    0,
    7,
    7,
    4,
    5,
    1
   ],
   [
    3,
    10,
    7,
    9,
    5,
    10,
    7,
    3,
    5,
    7,
    0,
    9,
    9,
    1,
    6
   ],
   [
    10,
    2,
    7,
    2,
    9,
    7,
    9,
    10,
    3,
    7,
    9,
    0,
    1,
    4,
    6
   ],
   [
    9,
    8,
    4,
    5,
    9,
    1,
    3,
    7,
    3,
    4,
    9,
    1,
    0,
    7,
    1
   ],
   [
    10,
    1,
    8,
    4,
    4,
    7,
    7,
    6,
    7,
    5,
    1,
    4,
    7,
    0,
    6
   ],
   [
    9,
    9,
    8,
    2,
    6,
    2,
    1,
    5,
    10,
    1,
    6,
    6,
    1,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Copper Clock Square",
   "Ivory Spire Cathedral",
   "Quartz District",
   "Ironbridge Crossing",
   "Cobalt Market",
   "Zenith Arena",
   "Flare Alley",
   "Quarry Point",
   "Velvet Corner",
   "Skyline Gardens",
   "Lighthouse Point",
   "Evergreen Circle",
   "Horizon Mall",
   "Jade Fountain"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Lighthouse Point",
     "Evergreen Circle",
     "Zenith Arena",
     "Jade Fountain",
     "Velvet Corner",
     "Cobalt Market",
     "Copper Clock Square",
     "Horizon Mall",
     "Skyline Gardens",
     "Flare Alley",
     "Ironbridge Crossing",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Velvet Corner",
     "Cobalt Market",
     "Copper Clock Square",
     "Evergreen Circle",
     "Lighthouse Point",
     "Quartz District",
     "Ivory Spire Cathedral",
     "Jade Fountain",
     "Zenith Arena",
     "Skyline Gardens",
     "Horizon Mall",
     "Flare Alley",
     "Ironbridge Crossing",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 47,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Ironbridge Crossing",
     "Flare Alley",
     "Copper Clock Square",
     "Horizon Mall",
     "Skyline Gardens",
     "Jade Fountain",
     "Zenith Arena",
     "Evergreen Circle",
     "Cobalt Market",
     "Velvet Corner",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Ironbridge Crossing",
     "Flare Alley",
     "Copper Clock Square",
     "Horizon Mall",
     "Skyline Gardens",
     "Jade Fountain",
     "Zenith Arena",
     "Evergreen Circle",
     "Cobalt Market",
     "Velvet Corner",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Horizon Mall",
     "Quartz District",
     "Lighthouse Point",
     "Evergreen Circle",
     "Cobalt Market",
     "Copper Clock Square",
     "Flare Alley",
     "Ironbridge Crossing",
     "Quarry Point",
     "Zenith Arena",
     "Jade Fountain",
     "Velvet Corner",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Evergreen Circle",
     "Cobalt Market",
     "Ivory Spire Cathedral",
     "Skyline Gardens",
     "Flare Alley",
     "Ironbridge Crossing",
     "Jade Fountain",
     "Quartz District",
     "Horizon Mall",
     "Velvet Corner",
     "Quarry Point",
     "Lighthouse Point",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 56,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 33,
  "adj": [
   [
    0,
    4,
    1,
    9,
    9,
    6,
    3,
    3,
    7,
    9,
    8,
    6,
    3,
    2,
    6
   ],
   [
    4,
    0,
    4,
    6,
    7,
    7,
    10,
    3,
    6,
    8,
    7,
    8,
    10,
    6,
    4
   ],
   [
    1,
    4,
    0,
    1,
    2,
    10,
    6,
    9,
    10,
    1,
    7,
    5,
    2,
    10,
    10
   ],
   [
    9,
    6,
    1,
    0,
    4,
    8,
    6,
    8,
    10,
    8,
    7,
    3,
    1,
    8,
    4
   ],
   [
    9,
    7,
    2,
    4,
    0,
    3,
    9,
    5,
    1,
    3,
    1,
    2,
    10,
    3,
    6
   ],
   [
    6,
    7,
    10,
    8,
    3,
    0,
    5,
    4,
    10,
    8,
    3,
    2,
    10,
    10,
    6
   ],
   [
    3,
    10,
    6,
    6,
    9,
    5,
    0,
    5,
    10,
    4,
    5,
    3,
    1,
    10,
    1
   ],
   [
    3,
    3,
    9,
    8,
    5,
    4,
    5,
    0,
    8,
    1,
    8,
    2,
    1,
    7,
    5
   ],
   [
    7,
    6,
    10,
    10,
    1,
    10,
    10,
    8,
    0,
    3,
    8,
    6,
    9,
    8,
    1
   ],
   [
    9,
    8,
    1,
    8,
    3,
    8,
    4,
    1,
    3,
    0,
    2,
    3,
    6,
    10,
    1
   ],
   [
    8,
    7,
    7,
    7,
    1,
    3,
    5,
    8,
    8,
    2,
    0,
    5,
    4,
    1,
    1
   ],
   [
    6,
    8,
    5,
    3,
    2,
    2,
    3,
    2,
    6,
    3,
    5,
    0,
    2,
    4,
    4
   ],
   [
    3,
    10,
    2,
    1,
    10,
    10,
    1,
    1,
    9,
    6,
    4,
    2,
    0,
    3,
    1
   ],
   [
    2,
    6,
    10,
    8,
    3,
    10,
    10,
    7,
    8,
    10,
    1,
    4,
    3,
    0,
    3
   ],
   [
    6,
    4,
    10,
    4,
    6,
    6,
    1,
    5,
    1,
    1,
    1,
    4,
    1,
    3,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Pennywhistle Arcade",
   "Beacon Tower",
   "Oakshade Library",
   "Willowshade Pavilion",
   "Dragon’s Gate",
   "Ivory Spire Cathedral",
   "Velvet Corner",
   "Ironbridge Crossing",
   "Quarry Point",
   "Lunar Pier",
   "Flint Forge Quarter",
   "Umbra Theater",
   "Opal Theater",
   "Quartz District"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Velvet Corner",
     "Quarry Point",
     "Beacon Tower",
     "Oakshade Library",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Ironbridge Crossing",
     "Willowshade Pavilion",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Lunar Pier",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Opal Theater",
     "Lunar Pier",
     "Willowshade Pavilion",
     "Dragon’s Gate",
     "Flint Forge Quarter",
     "Ironbridge Crossing",
     "Quartz District",
     "Ivory Spire Cathedral",
     "Umbra Theater",
     "Oakshade Library",
     "Beacon Tower",
     "Quarry Point",
     "Velvet Corner",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Beacon Tower",
     "Oakshade Library",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Ironbridge Crossing",
     "Willowshade Pavilion",
     "Lunar Pier",
     "Opal Theater",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Velvet Corner",
     "Quarry Point",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Beacon Tower",
     "Oakshade Library",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Ironbridge Crossing",
     "Willowshade Pavilion",
     "Lunar Pier",
     "Opal Theater",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Velvet Corner",
     "Quarry Point",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Pennywhistle Arcade",
     "Beacon Tower",
     "Oakshade Library",
     "Quartz District",
     "Ivory Spire Cathedral",
     "Umbra Theater",
     "Velvet Corner",
     "Quarry Point",
     "Ironbridge Crossing",
     "Willowshade Pavilion",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Lunar Pier",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Quarry Point",
     "Velvet Corner",
     "Lunar Pier",
     "Opal Theater",
     "Willowshade Pavilion",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Pennywhistle Arcade",
     "Beacon Tower",
     "Oakshade Library",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 52,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the most efficient route for the delivery driver to minimize the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 34,
  "adj": [
   [
    0,
    9,
    8,
    4,
    8,
    5,
    2,
    6,
    3,
    9,
    9,
    3,
    3,
    4,
    2
   ],
   [
    9,
    0,
    4,
    3,
    3,
    3,
    5,
    3,
    5,
    4,
    6,
    10,
    10,
    7,
    4
   ],
   [
    8,
    4,
    0,
    7,
    9,
    8,
    7,
    6,
    1,
    1,
    7,
    1,
    5,
    5,
    3
   ],
   [
    4,
    3,
    7,
    0,
    7,
    3,
    4,
    1,
    10,
    6,
    5,
    7,
    8,
    3,
    10
   ],
   [
    8,
    3,
    9,
    7,
    0,
    1,
    3,
    4,
    8,
    4,
    10,
    6,
    6,
    10,
    3
   ],
   [
    5,
    3,
    8,
    3,
    1,
    0,
    2,
    6,
    5,
    5,
    7,
    6,
    8,
    1,
    2
   ],
   [
    2,
    5,
    7,
    4,
    3,
    2,
    0,
    1,
    1,
    3,
    5,
    9,
    1,
    10,
    10
   ],
   [
    6,
    3,
    6,
    1,
    4,
    6,
    1,
    0,
    1,
    9,
    10,
    1,
    8,
    7,
    6
   ],
   [
    3,
    5,
    1,
    10,
    8,
    5,
    1,
    1,
    0,
    6,
    9,
    3,
    4,
    4,
    1
   ],
   [
    9,
    4,
    1,
    6,
    4,
    5,
    3,
    9,
    6,
    0,
    4,
    10,
    2,
    7,
    1
   ],
   [
    9,
    6,
    7,
    5,
    10,
    7,
    5,
    10,
    9,
    4,
    0,
    8,
    6,
    9,
    1
   ],
   [
    3,
    10,
    1,
    7,
    6,
    6,
    9,
    1,
    3,
    10,
    8,
    0,
    1,
    4,
    5
   ],
   [
    3,
    10,
    5,
    8,
    6,
    8,
    1,
    8,
    4,
    2,
    6,
    1,
    0,
    5,
    8
   ],
   [
    4,
    7,
    5,
    3,
    10,
    1,
    10,
    7,
    4,
    7,
    9,
    4,
    5,
    0,
    4
   ],
   [
    2,
    4,
    3,
    10,
    3,
    2,
    10,
    6,
    1,
    1,
    1,
    5,
    8,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Brass Lantern Tavern",
   "Umbra Theater",
   "Union Square Market",
   "Zenith Arena",
   "Twilight Harbor",
   "Shadowbridge Arcade",
   "Silvercrest Observatory",
   "Temple Square",
   "Riverstone Wharf",
   "Granite Plaza",
   "Copper Clock Square",
   "Knight’s Market",
   "Lighthouse Point",
   "Primrose Boulevard"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Shadowbridge Arcade",
     "Knight’s Market",
     "Copper Clock Square",
     "Umbra Theater",
     "Riverstone Wharf",
     "Granite Plaza",
     "Primrose Boulevard",
     "Temple Square",
     "Silvercrest Observatory",
     "Union Square Market",
     "Brass Lantern Tavern",
     "Zenith Arena",
     "Twilight Harbor",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Shadowbridge Arcade",
     "Knight’s Market",
     "Copper Clock Square",
     "Umbra Theater",
     "Riverstone Wharf",
     "Granite Plaza",
     "Primrose Boulevard",
     "Temple Square",
     "Silvercrest Observatory",
     "Union Square Market",
     "Brass Lantern Tavern",
     "Zenith Arena",
     "Twilight Harbor",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Shadowbridge Arcade",
     "Silvercrest Observatory",
     "Union Square Market",
     "Brass Lantern Tavern",
     "Zenith Arena",
     "Twilight Harbor",
     "Lighthouse Point",
     "Temple Square",
     "Umbra Theater",
     "Riverstone Wharf",
     "Primrose Boulevard",
     "Granite Plaza",
     "Knight’s Market",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Shadowbridge Arcade",
     "Silvercrest Observatory",
     "Union Square Market",
     "Brass Lantern Tavern",
     "Zenith Arena",
     "Twilight Harbor",
     "Lighthouse Point",
     "Temple Square",
     "Umbra Theater",
     "Riverstone Wharf",
     "Primrose Boulevard",
     "Granite Plaza",
     "Knight’s Market",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Primrose Boulevard",
     "Temple Square",
     "Umbra Theater",
     "Riverstone Wharf",
     "Granite Plaza",
     "Union Square Market",
     "Silvercrest Observatory",
     "Copper Clock Square",
     "Knight’s Market",
     "Shadowbridge Arcade",
     "Zenith Arena",
     "Brass Lantern Tavern",
     "Twilight Harbor",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Copper Clock Square",
     "Lighthouse Point",
     "Twilight Harbor",
     "Primrose Boulevard",
     "Brass Lantern Tavern",
     "Silvercrest Observatory",
     "Zenith Arena",
     "Shadowbridge Arcade",
     "Granite Plaza",
     "Temple Square",
     "Umbra Theater",
     "Riverstone Wharf",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 51,
    "cost_time": 1.4
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 35,
  "adj": [
   [
    0,
    6,
    8,
    7,
    1,
    5,
    9,
    6,
    2,
    9,
    10,
    8,
    5,
    1,
    10
   ],
   [
    6,
    0,
    4,
    1,
    6,
    8,
    5,
    7,
    3,
    6,
    10,
    2,
    3,
    8,
    4
   ],
   [
    8,
    4,
    0,
    4,
    7,
    6,
    1,
    7,
    7,
    2,
    4,
    2,
    8,
    7,
    5
   ],
   [
    7,
    1,
    4,
    0,
    8,
    10,
    9,
    8,
    8,
    5,
    10,
    9,
    10,
    4,
    5
   ],
   [
    1,
    6,
    7,
    8,
    0,
    8,
    10,
    1,
    7,
    10,
    4,
    8,
    4,
    2,
    6
   ],
   [
    5,
    8,
    6,
    10,
    8,
    0,
    1,
    5,
    5,
    4,
    6,
    8,
    1,
    7,
    3
   ],
   [
    9,
    5,
    1,
    9,
    10,
    1,
    0,
    7,
    5,
    3,
    3,
    2,
    4,
    3,
    3
   ],
   [
    6,
    7,
    7,
    8,
    1,
    5,
    7,
    0,
    3,
    7,
    5,
    10,
    3,
    6,
    2
   ],
   [
    2,
    3,
    7,
    8,
    7,
    5,
    5,
    3,
    0,
    10,
    1,
    8,
    7,
    5,
    8
   ],
   [
    9,
    6,
    2,
    5,
    10,
    4,
    3,
    7,
    10,
    0,
    4,
    1,
    9,
    1,
    9
   ],
   [
    10,
    10,
    4,
    10,
    4,
    6,
    3,
    5,
    1,
    4,
    0,
    5,
    2,
    5,
    9
   ],
   [
    8,
    2,
    2,
    9,
    8,
    8,
    2,
    10,
    8,
    1,
    5,
    0,
    4,
    1,
    1
   ],
   [
    5,
    3,
    8,
    10,
    4,
    1,
    4,
    3,
    7,
    9,
    2,
    4,
    0,
    9,
    3
   ],
   [
    1,
    8,
    7,
    4,
    2,
    7,
    3,
    6,
    5,
    1,
    5,
    1,
    9,
    0,
    8
   ],
   [
    10,
    4,
    5,
    5,
    6,
    3,
    3,
    2,
    8,
    9,
    9,
    1,
    3,
    8,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Lighthouse Point",
   "Westgate Station",
   "Dragon’s Gate",
   "Nimbus Plaza",
   "Pennywhistle Arcade",
   "Flint Forge Quarter",
   "Amber Plaza",
   "Jasper Marina",
   "Evergreen Circle",
   "Horizon Mall",
   "Haven Docks",
   "Oakshade Library",
   "Union Square Market",
   "Cobalt Market"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Amber Plaza",
     "Cobalt Market",
     "Haven Docks",
     "Lighthouse Point",
     "Dragon’s Gate",
     "Union Square Market",
     "Evergreen Circle",
     "Westgate Station",
     "Flint Forge Quarter",
     "Pennywhistle Arcade",
     "Oakshade Library",
     "Horizon Mall",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 23,
    "cost_time": 0.83
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Jasper Marina",
     "Horizon Mall",
     "Oakshade Library",
     "Pennywhistle Arcade",
     "Flint Forge Quarter",
     "Westgate Station",
     "Evergreen Circle",
     "Haven Docks",
     "Union Square Market",
     "Dragon’s Gate",
     "Lighthouse Point",
     "Cobalt Market",
     "Amber Plaza",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 25,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Amber Plaza",
     "Cobalt Market",
     "Haven Docks",
     "Evergreen Circle",
     "Union Square Market",
     "Flint Forge Quarter",
     "Westgate Station",
     "Lighthouse Point",
     "Dragon’s Gate",
     "Jasper Marina",
     "Horizon Mall",
     "Oakshade Library",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Amber Plaza",
     "Cobalt Market",
     "Haven Docks",
     "Evergreen Circle",
     "Union Square Market",
     "Flint Forge Quarter",
     "Westgate Station",
     "Lighthouse Point",
     "Dragon’s Gate",
     "Jasper Marina",
     "Horizon Mall",
     "Oakshade Library",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Lighthouse Point",
     "Jasper Marina",
     "Horizon Mall",
     "Oakshade Library",
     "Pennywhistle Arcade",
     "Amber Plaza",
     "Cobalt Market",
     "Haven Docks",
     "Flint Forge Quarter",
     "Westgate Station",
     "Evergreen Circle",
     "Union Square Market",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Amber Plaza",
     "Jasper Marina",
     "Horizon Mall",
     "Westgate Station",
     "Lighthouse Point",
     "Dragon’s Gate",
     "Cobalt Market",
     "Evergreen Circle",
     "Pennywhistle Arcade",
     "Oakshade Library",
     "Union Square Market",
     "Haven Docks",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 55,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled by the driver, starting and ending at the warehouse while visiting each delivery point exactly once.\",\n    \"constraints\": \"The driver must visit each of the 14 distinct delivery points exactly once and return to the warehouse.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 36,
  "adj": [
   [
    0,
    9,
    8,
    1,
    1,
    2,
    3,
    5,
    2,
    6,
    8,
    6,
    9,
    2,
    1
   ],
   [
    9,
    0,
    10,
    5,
    2,
    1,
    2,
    2,
    7,
    7,
    5,
    5,
    9,
    2,
    9
   ],
   [
    8,
    10,
    0,
    3,
    7,
    2,
    8,
    9,
    9,
    4,
    4,
    10,
    3,
    10,
    3
   ],
   [
    1,
    5,
    3,
    0,
    5,
    8,
    2,
    9,
    9,
    9,
    3,
    4,
    1,
    2,
    7
   ],
   [
    1,
    2,
    7,
    5,
    0,
    6,
    6,
    6,
    6,
    3,
    3,
    7,
    7,
    7,
    7
   ],
   [
    2,
    1,
    2,
    8,
    6,
    0,
    4,
    7,
    3,
    6,
    6,
    9,
    6,
    1,
    8
   ],
   [
    3,
    2,
    8,
    2,
    6,
    4,
    0,
    5,
    8,
    7,
    1,
    7,
    3,
    5,
    8
   ],
   [
    5,
    2,
    9,
    9,
    6,
    7,
    5,
    0,
    8,
    1,
    1,
    9,
    8,
    8,
    10
   ],
   [
    2,
    7,
    9,
    9,
    6,
    3,
    8,
    8,
    0,
    7,
    2,
    9,
    1,
    6,
    6
   ],
   [
    6,
    7,
    4,
    9,
    3,
    6,
    7,
    1,
    7,
    0,
    1,
    4,
    2,
    6,
    3
   ],
   [
    8,
    5,
    4,
    3,
    3,
    6,
    1,
    1,
    2,
    1,
    0,
    7,
    8,
    7,
    6
   ],
   [
    6,
    5,
    10,
    4,
    7,
    9,
    7,
    9,
    9,
    4,
    7,
    0,
    3,
    8,
    2
   ],
   [
    9,
    9,
    3,
    1,
    7,
    6,
    3,
    8,
    1,
    2,
    8,
    3,
    0,
    2,
    6
   ],
   [
    2,
    2,
    10,
    2,
    7,
    1,
    5,
    8,
    6,
    6,
    7,
    8,
    2,
    0,
    2
   ],
   [
    1,
    9,
    3,
    7,
    7,
    8,
    8,
    10,
    6,
    3,
    6,
    2,
    6,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Haven Docks",
   "Westgate Station",
   "Horizon Mall",
   "Echo Station",
   "Dragon’s Gate",
   "King’s Row",
   "Shadowbridge Arcade",
   "Lighthouse Point",
   "Ironbridge Crossing",
   "Quarry Point",
   "Jade Fountain",
   "Beacon Tower",
   "Velvet Corner",
   "Rosewood Hall"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Haven Docks",
     "King’s Row",
     "Quarry Point",
     "Shadowbridge Arcade",
     "Ironbridge Crossing",
     "Jade Fountain",
     "Rosewood Hall",
     "Westgate Station",
     "Dragon’s Gate",
     "Velvet Corner",
     "Horizon Mall",
     "Beacon Tower",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Rosewood Hall",
     "Jade Fountain",
     "Ironbridge Crossing",
     "Shadowbridge Arcade",
     "Quarry Point",
     "King’s Row",
     "Haven Docks",
     "Dragon’s Gate",
     "Westgate Station",
     "Echo Station",
     "Velvet Corner",
     "Lighthouse Point",
     "Beacon Tower",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Beacon Tower",
     "Lighthouse Point",
     "Quarry Point",
     "King’s Row",
     "Haven Docks",
     "Dragon’s Gate",
     "Velvet Corner",
     "Rosewood Hall",
     "Jade Fountain",
     "Ironbridge Crossing",
     "Shadowbridge Arcade",
     "Echo Station",
     "Westgate Station",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Beacon Tower",
     "Lighthouse Point",
     "Quarry Point",
     "King’s Row",
     "Haven Docks",
     "Dragon’s Gate",
     "Velvet Corner",
     "Rosewood Hall",
     "Jade Fountain",
     "Ironbridge Crossing",
     "Shadowbridge Arcade",
     "Echo Station",
     "Westgate Station",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Velvet Corner",
     "Dragon’s Gate",
     "Westgate Station",
     "Quarry Point",
     "Lighthouse Point",
     "Echo Station",
     "Ironbridge Crossing",
     "Shadowbridge Arcade",
     "Haven Docks",
     "King’s Row",
     "Horizon Mall",
     "Beacon Tower",
     "Jade Fountain",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Velvet Corner",
     "Dragon’s Gate",
     "Haven Docks",
     "Echo Station",
     "Lighthouse Point",
     "Beacon Tower",
     "Jade Fountain",
     "King’s Row",
     "Horizon Mall",
     "Quarry Point",
     "Shadowbridge Arcade",
     "Ironbridge Crossing",
     "Westgate Station",
     "Rosewood Hall",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled during the delivery route.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 37,
  "adj": [
   [
    0,
    6,
    5,
    2,
    5,
    6,
    8,
    3,
    6,
    4,
    8,
    4,
    6,
    3,
    6
   ],
   [
    6,
    0,
    5,
    1,
    10,
    1,
    1,
    2,
    2,
    8,
    9,
    6,
    6,
    8,
    10
   ],
   [
    5,
    5,
    0,
    7,
    10,
    7,
    2,
    3,
    10,
    7,
    6,
    3,
    10,
    2,
    3
   ],
   [
    2,
    1,
    7,
    0,
    3,
    1,
    6,
    8,
    8,
    1,
    4,
    4,
    3,
    2,
    5
   ],
   [
    5,
    10,
    10,
    3,
    0,
    4,
    4,
    10,
    7,
    2,
    5,
    10,
    1,
    8,
    2
   ],
   [
    6,
    1,
    7,
    1,
    4,
    0,
    7,
    2,
    1,
    9,
    6,
    9,
    2,
    1,
    7
   ],
   [
    8,
    1,
    2,
    6,
    4,
    7,
    0,
    6,
    5,
    8,
    3,
    5,
    8,
    1,
    9
   ],
   [
    3,
    2,
    3,
    8,
    10,
    2,
    6,
    0,
    7,
    7,
    4,
    2,
    5,
    10,
    5
   ],
   [
    6,
    2,
    10,
    8,
    7,
    1,
    5,
    7,
    0,
    4,
    5,
    2,
    10,
    7,
    4
   ],
   [
    4,
    8,
    7,
    1,
    2,
    9,
    8,
    7,
    4,
    0,
    2,
    6,
    1,
    4,
    8
   ],
   [
    8,
    9,
    6,
    4,
    5,
    6,
    3,
    4,
    5,
    2,
    0,
    2,
    1,
    10,
    7
   ],
   [
    4,
    6,
    3,
    4,
    10,
    9,
    5,
    2,
    2,
    6,
    2,
    0,
    10,
    2,
    2
   ],
   [
    6,
    6,
    10,
    3,
    1,
    2,
    8,
    5,
    10,
    1,
    1,
    10,
    0,
    5,
    9
   ],
   [
    3,
    8,
    2,
    2,
    8,
    1,
    1,
    10,
    7,
    4,
    10,
    2,
    5,
    0,
    1
   ],
   [
    6,
    10,
    3,
    5,
    2,
    7,
    9,
    5,
    4,
    8,
    7,
    2,
    9,
    1,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Jasper Marina",
   "Silvercrest Observatory",
   "Moonlit Promenade",
   "Haven Docks",
   "Evergreen Circle",
   "Quarry Point",
   "Brass Lantern Tavern",
   "Twilight Harbor",
   "Ivory Spire Cathedral",
   "Echo Station",
   "Northwind Tower",
   "Willowshade Pavilion",
   "Nimbus Plaza",
   "Gilded Archway"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Willowshade Pavilion",
     "Haven Docks",
     "Gilded Archway",
     "Nimbus Plaza",
     "Silvercrest Observatory",
     "Quarry Point",
     "Jasper Marina",
     "Evergreen Circle",
     "Twilight Harbor",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 24,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Echo Station",
     "Haven Docks",
     "Gilded Archway",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Twilight Harbor",
     "Jasper Marina",
     "Brass Lantern Tavern",
     "Northwind Tower",
     "Silvercrest Observatory",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Jasper Marina",
     "Evergreen Circle",
     "Twilight Harbor",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Silvercrest Observatory",
     "Quarry Point",
     "Nimbus Plaza",
     "Gilded Archway",
     "Haven Docks",
     "Willowshade Pavilion",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Jasper Marina",
     "Evergreen Circle",
     "Twilight Harbor",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Silvercrest Observatory",
     "Quarry Point",
     "Nimbus Plaza",
     "Gilded Archway",
     "Haven Docks",
     "Willowshade Pavilion",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Twilight Harbor",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Echo Station",
     "Willowshade Pavilion",
     "Haven Docks",
     "Ivory Spire Cathedral",
     "Moonlit Promenade",
     "Jasper Marina",
     "Quarry Point",
     "Silvercrest Observatory",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Quarry Point",
     "Nimbus Plaza",
     "Evergreen Circle",
     "Willowshade Pavilion",
     "Twilight Harbor",
     "Northwind Tower",
     "Brass Lantern Tavern",
     "Jasper Marina",
     "Silvercrest Observatory",
     "Gilded Archway",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Determine the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 38,
  "adj": [
   [
    0,
    5,
    9,
    8,
    5,
    4,
    2,
    9,
    5,
    8,
    7,
    3,
    3,
    1,
    8
   ],
   [
    5,
    0,
    6,
    4,
    2,
    1,
    8,
    7,
    3,
    2,
    9,
    6,
    7,
    7,
    2
   ],
   [
    9,
    6,
    0,
    5,
    10,
    5,
    5,
    6,
    6,
    9,
    3,
    9,
    6,
    10,
    7
   ],
   [
    8,
    4,
    5,
    0,
    1,
    7,
    8,
    2,
    10,
    6,
    1,
    2,
    8,
    1,
    1
   ],
   [
    5,
    2,
    10,
    1,
    0,
    3,
    9,
    2,
    9,
    9,
    7,
    1,
    5,
    10,
    3
   ],
   [
    4,
    1,
    5,
    7,
    3,
    0,
    3,
    10,
    8,
    10,
    7,
    5,
    8,
    8,
    1
   ],
   [
    2,
    8,
    5,
    8,
    9,
    3,
    0,
    9,
    9,
    3,
    1,
    2,
    1,
    2,
    4
   ],
   [
    9,
    7,
    6,
    2,
    2,
    10,
    9,
    0,
    5,
    1,
    8,
    7,
    8,
    3,
    2
   ],
   [
    5,
    3,
    6,
    10,
    9,
    8,
    9,
    5,
    0,
    3,
    4,
    10,
    2,
    4,
    9
   ],
   [
    8,
    2,
    9,
    6,
    9,
    10,
    3,
    1,
    3,
    0,
    2,
    2,
    9,
    2,
    10
   ],
   [
    7,
    9,
    3,
    1,
    7,
    7,
    1,
    8,
    4,
    2,
    0,
    1,
    10,
    8,
    10
   ],
   [
    3,
    6,
    9,
    2,
    1,
    5,
    2,
    7,
    10,
    2,
    1,
    0,
    10,
    6,
    2
   ],
   [
    3,
    7,
    6,
    8,
    5,
    8,
    1,
    8,
    2,
    9,
    10,
    10,
    0,
    8,
    5
   ],
   [
    1,
    7,
    10,
    1,
    10,
    8,
    2,
    3,
    4,
    2,
    8,
    6,
    8,
    0,
    9
   ],
   [
    8,
    2,
    7,
    1,
    3,
    1,
    4,
    2,
    9,
    10,
    10,
    2,
    5,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Azure Gardens",
   "Riverstone Wharf",
   "Ivory Spire Cathedral",
   "Shadowbridge Arcade",
   "Zenith Arena",
   "Oakshade Library",
   "Ironbridge Crossing",
   "Flare Alley",
   "Union Square Market",
   "Brass Lantern Tavern",
   "Silvercrest Observatory",
   "Willowshade Pavilion",
   "Sapphire Arena",
   "King’s Row"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Willowshade Pavilion",
     "Flare Alley",
     "Riverstone Wharf",
     "Brass Lantern Tavern",
     "Silvercrest Observatory",
     "Shadowbridge Arcade",
     "Ironbridge Crossing",
     "Union Square Market",
     "Azure Gardens",
     "Zenith Arena",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Sapphire Arena",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Silvercrest Observatory",
     "Shadowbridge Arcade",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Zenith Arena",
     "Azure Gardens",
     "Union Square Market",
     "Ironbridge Crossing",
     "Flare Alley",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Brass Lantern Tavern",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Sapphire Arena",
     "Ivory Spire Cathedral",
     "Shadowbridge Arcade",
     "Silvercrest Observatory",
     "Brass Lantern Tavern",
     "Oakshade Library",
     "Willowshade Pavilion",
     "Flare Alley",
     "Azure Gardens",
     "Zenith Arena",
     "King’s Row",
     "Ironbridge Crossing",
     "Union Square Market",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Sapphire Arena",
     "Ivory Spire Cathedral",
     "Shadowbridge Arcade",
     "Silvercrest Observatory",
     "Brass Lantern Tavern",
     "Oakshade Library",
     "Willowshade Pavilion",
     "Flare Alley",
     "Azure Gardens",
     "Zenith Arena",
     "King’s Row",
     "Ironbridge Crossing",
     "Union Square Market",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Oakshade Library",
     "Willowshade Pavilion",
     "Flare Alley",
     "Sapphire Arena",
     "Ironbridge Crossing",
     "Union Square Market",
     "Azure Gardens",
     "Zenith Arena",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Shadowbridge Arcade",
     "Silvercrest Observatory",
     "Brass Lantern Tavern",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Azure Gardens",
     "Silvercrest Observatory",
     "Shadowbridge Arcade",
     "Ironbridge Crossing",
     "Riverstone Wharf",
     "Brass Lantern Tavern",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Union Square Market",
     "Sapphire Arena",
     "Oakshade Library",
     "Willowshade Pavilion",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 47,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 39,
  "adj": [
   [
    0,
    10,
    6,
    3,
    8,
    5,
    4,
    3,
    7,
    8,
    1,
    6,
    6,
    2,
    3
   ],
   [
    10,
    0,
    10,
    6,
    8,
    9,
    9,
    5,
    8,
    8,
    8,
    9,
    5,
    7,
    9
   ],
   [
    6,
    10,
    0,
    3,
    3,
    3,
    10,
    4,
    1,
    1,
    3,
    3,
    1,
    4,
    10
   ],
   [
    3,
    6,
    3,
    0,
    6,
    10,
    9,
    6,
    6,
    3,
    7,
    6,
    4,
    5,
    9
   ],
   [
    8,
    8,
    3,
    6,
    0,
    7,
    10,
    9,
    3,
    8,
    4,
    3,
    8,
    5,
    9
   ],
   [
    5,
    9,
    3,
    10,
    7,
    0,
    1,
    3,
    7,
    2,
    8,
    8,
    10,
    10,
    2
   ],
   [
    4,
    9,
    10,
    9,
    10,
    1,
    0,
    7,
    6,
    8,
    5,
    2,
    2,
    4,
    1
   ],
   [
    3,
    5,
    4,
    6,
    9,
    3,
    7,
    0,
    4,
    10,
    10,
    4,
    9,
    6,
    2
   ],
   [
    7,
    8,
    1,
    6,
    3,
    7,
    6,
    4,
    0,
    3,
    8,
    10,
    1,
    8,
    8
   ],
   [
    8,
    8,
    1,
    3,
    8,
    2,
    8,
    10,
    3,
    0,
    6,
    3,
    3,
    6,
    6
   ],
   [
    1,
    8,
    3,
    7,
    4,
    8,
    5,
    10,
    8,
    6,
    0,
    8,
    1,
    7,
    7
   ],
   [
    6,
    9,
    3,
    6,
    3,
    8,
    2,
    4,
    10,
    3,
    8,
    0,
    3,
    5,
    1
   ],
   [
    6,
    5,
    1,
    4,
    8,
    10,
    2,
    9,
    1,
    3,
    1,
    3,
    0,
    7,
    10
   ],
   [
    2,
    7,
    4,
    5,
    5,
    10,
    4,
    6,
    8,
    6,
    7,
    5,
    7,
    0,
    6
   ],
   [
    3,
    9,
    10,
    9,
    9,
    2,
    1,
    2,
    8,
    6,
    7,
    1,
    10,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Beacon Tower",
   "Quarry Point",
   "Flint Forge Quarter",
   "Ivory Spire Cathedral",
   "Sapphire Arena",
   "Horizon Mall",
   "Mosaic Plaza",
   "Twilight Harbor",
   "Shadowbridge Arcade",
   "Temple Square",
   "Westgate Station",
   "Nimbus Plaza",
   "Dragon’s Gate",
   "Maplewood Conservatory"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Nimbus Plaza",
     "Twilight Harbor",
     "Quarry Point",
     "Shadowbridge Arcade",
     "Flint Forge Quarter",
     "Beacon Tower",
     "Mosaic Plaza",
     "Sapphire Arena",
     "Horizon Mall",
     "Maplewood Conservatory",
     "Westgate Station",
     "Ivory Spire Cathedral",
     "Dragon’s Gate",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.8
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Flint Forge Quarter",
     "Beacon Tower",
     "Mosaic Plaza",
     "Maplewood Conservatory",
     "Westgate Station",
     "Horizon Mall",
     "Sapphire Arena",
     "Shadowbridge Arcade",
     "Quarry Point",
     "Ivory Spire Cathedral",
     "Twilight Harbor",
     "Nimbus Plaza",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Nimbus Plaza",
     "Quarry Point",
     "Twilight Harbor",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Maplewood Conservatory",
     "Horizon Mall",
     "Sapphire Arena",
     "Shadowbridge Arcade",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Mosaic Plaza",
     "Beacon Tower",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Nimbus Plaza",
     "Quarry Point",
     "Twilight Harbor",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Maplewood Conservatory",
     "Horizon Mall",
     "Sapphire Arena",
     "Shadowbridge Arcade",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Mosaic Plaza",
     "Beacon Tower",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Flint Forge Quarter",
     "Beacon Tower",
     "Temple Square",
     "Nimbus Plaza",
     "Twilight Harbor",
     "Ivory Spire Cathedral",
     "Westgate Station",
     "Quarry Point",
     "Shadowbridge Arcade",
     "Sapphire Arena",
     "Horizon Mall",
     "Maplewood Conservatory",
     "Mosaic Plaza",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Mosaic Plaza",
     "Maplewood Conservatory",
     "Beacon Tower",
     "Dragon’s Gate",
     "Nimbus Plaza",
     "Quarry Point",
     "Temple Square",
     "Ivory Spire Cathedral",
     "Twilight Harbor",
     "Horizon Mall",
     "Westgate Station",
     "Sapphire Arena",
     "Shadowbridge Arcade",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 63,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 40,
  "adj": [
   [
    0,
    7,
    2,
    3,
    6,
    9,
    2,
    2,
    7,
    1,
    5,
    9,
    4,
    5,
    2
   ],
   [
    7,
    0,
    2,
    8,
    4,
    1,
    5,
    8,
    8,
    8,
    2,
    4,
    3,
    10,
    1
   ],
   [
    2,
    2,
    0,
    1,
    8,
    6,
    6,
    10,
    6,
    3,
    1,
    2,
    9,
    4,
    4
   ],
   [
    3,
    8,
    1,
    0,
    3,
    9,
    6,
    10,
    5,
    8,
    3,
    8,
    8,
    8,
    1
   ],
   [
    6,
    4,
    8,
    3,
    0,
    9,
    2,
    3,
    5,
    2,
    3,
    10,
    4,
    9,
    3
   ],
   [
    9,
    1,
    6,
    9,
    9,
    0,
    10,
    2,
    5,
    6,
    10,
    3,
    3,
    7,
    1
   ],
   [
    2,
    5,
    6,
    6,
    2,
    10,
    0,
    9,
    2,
    2,
    10,
    4,
    4,
    3,
    5
   ],
   [
    2,
    8,
    10,
    10,
    3,
    2,
    9,
    0,
    1,
    8,
    10,
    7,
    7,
    7,
    1
   ],
   [
    7,
    8,
    6,
    5,
    5,
    5,
    2,
    1,
    0,
    3,
    4,
    4,
    7,
    6,
    6
   ],
   [
    1,
    8,
    3,
    8,
    2,
    6,
    2,
    8,
    3,
    0,
    10,
    3,
    6,
    10,
    4
   ],
   [
    5,
    2,
    1,
    3,
    3,
    10,
    10,
    10,
    4,
    10,
    0,
    2,
    9,
    6,
    7
   ],
   [
    9,
    4,
    2,
    8,
    10,
    3,
    4,
    7,
    4,
    3,
    2,
    0,
    7,
    8,
    10
   ],
   [
    4,
    3,
    9,
    8,
    4,
    3,
    4,
    7,
    7,
    6,
    9,
    7,
    0,
    2,
    5
   ],
   [
    5,
    10,
    4,
    8,
    9,
    7,
    3,
    7,
    6,
    10,
    6,
    8,
    2,
    0,
    1
   ],
   [
    2,
    1,
    4,
    1,
    3,
    1,
    5,
    1,
    6,
    4,
    7,
    10,
    5,
    1,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Quartz District",
   "Sapphire Arena",
   "Haven Docks",
   "Rosewood Hall",
   "Mosaic Plaza",
   "Flint Forge Quarter",
   "King’s Row",
   "Ironbridge Crossing",
   "Copper Clock Square",
   "Beacon Tower",
   "Riverstone Wharf",
   "Velvet Corner",
   "Northwind Tower",
   "Ivory Spire Cathedral"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Haven Docks",
     "Sapphire Arena",
     "Beacon Tower",
     "Riverstone Wharf",
     "Mosaic Plaza",
     "Quartz District",
     "Velvet Corner",
     "Northwind Tower",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Ironbridge Crossing",
     "Flint Forge Quarter",
     "Rosewood Hall",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Flint Forge Quarter",
     "Rosewood Hall",
     "Beacon Tower",
     "Sapphire Arena",
     "Riverstone Wharf",
     "Ironbridge Crossing",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Northwind Tower",
     "Velvet Corner",
     "Mosaic Plaza",
     "Quartz District",
     "Haven Docks",
     "Copper Clock Square",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Rosewood Hall",
     "Flint Forge Quarter",
     "Ironbridge Crossing",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Mosaic Plaza",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Haven Docks",
     "Beacon Tower",
     "Northwind Tower",
     "Velvet Corner",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Rosewood Hall",
     "Flint Forge Quarter",
     "Ironbridge Crossing",
     "King’s Row",
     "Ivory Spire Cathedral",
     "Quartz District",
     "Mosaic Plaza",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Haven Docks",
     "Beacon Tower",
     "Northwind Tower",
     "Velvet Corner",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Ironbridge Crossing",
     "Flint Forge Quarter",
     "Northwind Tower",
     "Velvet Corner",
     "Mosaic Plaza",
     "Quartz District",
     "Beacon Tower",
     "Sapphire Arena",
     "Riverstone Wharf",
     "Copper Clock Square",
     "Rosewood Hall",
     "Haven Docks",
     "Ivory Spire Cathedral",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Ironbridge Crossing",
     "Copper Clock Square",
     "Rosewood Hall",
     "Ivory Spire Cathedral",
     "Velvet Corner",
     "Mosaic Plaza",
     "Quartz District",
     "Beacon Tower",
     "Riverstone Wharf",
     "Sapphire Arena",
     "Northwind Tower",
     "Haven Docks",
     "Flint Forge Quarter",
     "Warehouse"
    ],
    "ans_distance": 46,
    "cost_time": 1.36
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 41,
  "adj": [
   [
    0,
    9,
    6,
    4,
    9,
    9,
    8,
    5,
    8,
    4,
    8,
    8,
    10,
    1,
    7
   ],
   [
    9,
    0,
    1,
    8,
    10,
    8,
    9,
    9,
    9,
    2,
    1,
    10,
    8,
    5,
    2
   ],
   [
    6,
    1,
    0,
    2,
    4,
    5,
    3,
    1,
    8,
    6,
    6,
    8,
    9,
    4,
    10
   ],
   [
    4,
    8,
    2,
    0,
    8,
    7,
    8,
    5,
    8,
    10,
    7,
    3,
    7,
    3,
    7
   ],
   [
    9,
    10,
    4,
    8,
    0,
    1,
    5,
    2,
    4,
    6,
    5,
    2,
    5,
    6,
    2
   ],
   [
    9,
    8,
    5,
    7,
    1,
    0,
    8,
    3,
    10,
    6,
    9,
    3,
    1,
    10,
    8
   ],
   [
    8,
    9,
    3,
    8,
    5,
    8,
    0,
    10,
    10,
    7,
    6,
    5,
    2,
    7,
    2
   ],
   [
    5,
    9,
    1,
    5,
    2,
    3,
    10,
    0,
    8,
    5,
    4,
    8,
    5,
    9,
    1
   ],
   [
    8,
    9,
    8,
    8,
    4,
    10,
    10,
    8,
    0,
    8,
    1,
    4,
    9,
    1,
    3
   ],
   [
    4,
    2,
    6,
    10,
    6,
    6,
    7,
    5,
    8,
    0,
    4,
    10,
    6,
    10,
    4
   ],
   [
    8,
    1,
    6,
    7,
    5,
    9,
    6,
    4,
    1,
    4,
    0,
    9,
    8,
    7,
    6
   ],
   [
    8,
    10,
    8,
    3,
    2,
    3,
    5,
    8,
    4,
    10,
    9,
    0,
    4,
    4,
    4
   ],
   [
    10,
    8,
    9,
    7,
    5,
    1,
    2,
    5,
    9,
    6,
    8,
    4,
    0,
    9,
    4
   ],
   [
    1,
    5,
    4,
    3,
    6,
    10,
    7,
    9,
    1,
    10,
    7,
    4,
    9,
    0,
    6
   ],
   [
    7,
    2,
    10,
    7,
    2,
    8,
    2,
    1,
    3,
    4,
    6,
    4,
    4,
    6,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Maplewood Conservatory",
   "Flint Forge Quarter",
   "Umbra Theater",
   "Skyline Gardens",
   "Yarrow Plaza",
   "Quarry Point",
   "Flare Alley",
   "Copper Clock Square",
   "Temple Square",
   "Westgate Station",
   "Echo Station",
   "Quartz District",
   "Lunar Pier",
   "Horizon Mall"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Echo Station",
     "Skyline Gardens",
     "Yarrow Plaza",
     "Quartz District",
     "Quarry Point",
     "Horizon Mall",
     "Flare Alley",
     "Flint Forge Quarter",
     "Maplewood Conservatory",
     "Temple Square",
     "Westgate Station",
     "Copper Clock Square",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Flint Forge Quarter",
     "Flare Alley",
     "Horizon Mall",
     "Quarry Point",
     "Quartz District",
     "Yarrow Plaza",
     "Skyline Gardens",
     "Echo Station",
     "Maplewood Conservatory",
     "Temple Square",
     "Westgate Station",
     "Copper Clock Square",
     "Lunar Pier",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Copper Clock Square",
     "Westgate Station",
     "Maplewood Conservatory",
     "Flint Forge Quarter",
     "Flare Alley",
     "Horizon Mall",
     "Skyline Gardens",
     "Yarrow Plaza",
     "Quartz District",
     "Quarry Point",
     "Echo Station",
     "Umbra Theater",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Copper Clock Square",
     "Westgate Station",
     "Maplewood Conservatory",
     "Flint Forge Quarter",
     "Flare Alley",
     "Horizon Mall",
     "Skyline Gardens",
     "Yarrow Plaza",
     "Quartz District",
     "Quarry Point",
     "Echo Station",
     "Umbra Theater",
     "Temple Square",
     "Warehouse"
    ],
    "ans_distance": 35,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Lunar Pier",
     "Echo Station",
     "Yarrow Plaza",
     "Quartz District",
     "Quarry Point",
     "Horizon Mall",
     "Flare Alley",
     "Temple Square",
     "Maplewood Conservatory",
     "Westgate Station",
     "Copper Clock Square",
     "Skyline Gardens",
     "Flint Forge Quarter",
     "Umbra Theater",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Copper Clock Square",
     "Westgate Station",
     "Maplewood Conservatory",
     "Horizon Mall",
     "Flare Alley",
     "Umbra Theater",
     "Lunar Pier",
     "Flint Forge Quarter",
     "Quartz District",
     "Echo Station",
     "Yarrow Plaza",
     "Skyline Gardens",
     "Temple Square",
     "Quarry Point",
     "Warehouse"
    ],
    "ans_distance": 63,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 42,
  "adj": [
   [
    0,
    3,
    9,
    8,
    2,
    6,
    4,
    5,
    5,
    4,
    7,
    6,
    2,
    2,
    3
   ],
   [
    3,
    0,
    4,
    6,
    5,
    2,
    10,
    9,
    10,
    6,
    7,
    8,
    4,
    2,
    1
   ],
   [
    9,
    4,
    0,
    1,
    9,
    1,
    1,
    1,
    8,
    1,
    9,
    3,
    10,
    10,
    2
   ],
   [
    8,
    6,
    1,
    0,
    2,
    7,
    8,
    10,
    5,
    3,
    10,
    6,
    5,
    6,
    6
   ],
   [
    2,
    5,
    9,
    2,
    0,
    6,
    1,
    9,
    3,
    10,
    3,
    7,
    9,
    10,
    6
   ],
   [
    6,
    2,
    1,
    7,
    6,
    0,
    1,
    8,
    4,
    1,
    5,
    6,
    8,
    1,
    9
   ],
   [
    4,
    10,
    1,
    8,
    1,
    1,
    0,
    7,
    1,
    10,
    1,
    9,
    7,
    2,
    9
   ],
   [
    5,
    9,
    1,
    10,
    9,
    8,
    7,
    0,
    8,
    7,
    5,
    8,
    3,
    10,
    2
   ],
   [
    5,
    10,
    8,
    5,
    3,
    4,
    1,
    8,
    0,
    1,
    10,
    8,
    7,
    4,
    8
   ],
   [
    4,
    6,
    1,
    3,
    10,
    1,
    10,
    7,
    1,
    0,
    3,
    2,
    10,
    5,
    3
   ],
   [
    7,
    7,
    9,
    10,
    3,
    5,
    1,
    5,
    10,
    3,
    0,
    8,
    2,
    9,
    6
   ],
   [
    6,
    8,
    3,
    6,
    7,
    6,
    9,
    8,
    8,
    2,
    8,
    0,
    10,
    2,
    8
   ],
   [
    2,
    4,
    10,
    5,
    9,
    8,
    7,
    3,
    7,
    10,
    2,
    10,
    0,
    3,
    10
   ],
   [
    2,
    2,
    10,
    6,
    10,
    1,
    2,
    10,
    4,
    5,
    9,
    2,
    3,
    0,
    9
   ],
   [
    3,
    1,
    2,
    6,
    6,
    9,
    9,
    2,
    8,
    3,
    6,
    8,
    10,
    9,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Ironbridge Crossing",
   "Ivory Spire Cathedral",
   "Silvercrest Observatory",
   "Brass Lantern Tavern",
   "Haven Docks",
   "Quartz District",
   "Velvet Corner",
   "Jasper Marina",
   "Azure Gardens",
   "Yarrow Plaza",
   "Mosaic Plaza",
   "King’s Row",
   "Knight’s Market",
   "Northwind Tower"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Brass Lantern Tavern",
     "Silvercrest Observatory",
     "Ivory Spire Cathedral",
     "Velvet Corner",
     "Northwind Tower",
     "Ironbridge Crossing",
     "Haven Docks",
     "Knight’s Market",
     "Mosaic Plaza",
     "Azure Gardens",
     "Jasper Marina",
     "Quartz District",
     "Yarrow Plaza",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 23,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "King’s Row",
     "Yarrow Plaza",
     "Quartz District",
     "Jasper Marina",
     "Haven Docks",
     "Knight’s Market",
     "Mosaic Plaza",
     "Azure Gardens",
     "Ivory Spire Cathedral",
     "Velvet Corner",
     "Northwind Tower",
     "Ironbridge Crossing",
     "Silvercrest Observatory",
     "Brass Lantern Tavern",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Brass Lantern Tavern",
     "Quartz District",
     "Ivory Spire Cathedral",
     "Silvercrest Observatory",
     "Azure Gardens",
     "Haven Docks",
     "Knight’s Market",
     "Ironbridge Crossing",
     "Northwind Tower",
     "Velvet Corner",
     "King’s Row",
     "Yarrow Plaza",
     "Mosaic Plaza",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Brass Lantern Tavern",
     "Quartz District",
     "Ivory Spire Cathedral",
     "Silvercrest Observatory",
     "Azure Gardens",
     "Haven Docks",
     "Knight’s Market",
     "Ironbridge Crossing",
     "Northwind Tower",
     "Velvet Corner",
     "King’s Row",
     "Yarrow Plaza",
     "Mosaic Plaza",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 41,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Quartz District",
     "Yarrow Plaza",
     "King’s Row",
     "Velvet Corner",
     "Northwind Tower",
     "Ironbridge Crossing",
     "Haven Docks",
     "Ivory Spire Cathedral",
     "Azure Gardens",
     "Jasper Marina",
     "Brass Lantern Tavern",
     "Silvercrest Observatory",
     "Mosaic Plaza",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Brass Lantern Tavern",
     "Yarrow Plaza",
     "Mosaic Plaza",
     "Knight’s Market",
     "King’s Row",
     "Velvet Corner",
     "Northwind Tower",
     "Ironbridge Crossing",
     "Ivory Spire Cathedral",
     "Haven Docks",
     "Quartz District",
     "Jasper Marina",
     "Silvercrest Observatory",
     "Azure Gardens",
     "Warehouse"
    ],
    "ans_distance": 43,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 43,
  "adj": [
   [
    0,
    4,
    3,
    7,
    3,
    3,
    9,
    10,
    3,
    6,
    7,
    2,
    3,
    9,
    5
   ],
   [
    4,
    0,
    1,
    6,
    4,
    7,
    3,
    5,
    6,
    8,
    8,
    8,
    5,
    10,
    3
   ],
   [
    3,
    1,
    0,
    8,
    7,
    1,
    2,
    8,
    9,
    9,
    2,
    2,
    4,
    4,
    10
   ],
   [
    7,
    6,
    8,
    0,
    2,
    2,
    10,
    9,
    5,
    5,
    8,
    7,
    8,
    6,
    3
   ],
   [
    3,
    4,
    7,
    2,
    0,
    9,
    4,
    9,
    8,
    3,
    3,
    1,
    3,
    7,
    3
   ],
   [
    3,
    7,
    1,
    2,
    9,
    0,
    1,
    10,
    7,
    3,
    2,
    4,
    4,
    4,
    2
   ],
   [
    9,
    3,
    2,
    10,
    4,
    1,
    0,
    8,
    2,
    1,
    2,
    9,
    2,
    7,
    4
   ],
   [
    10,
    5,
    8,
    9,
    9,
    10,
    8,
    0,
    2,
    6,
    7,
    9,
    5,
    6,
    4
   ],
   [
    3,
    6,
    9,
    5,
    8,
    7,
    2,
    2,
    0,
    4,
    9,
    4,
    4,
    1,
    4
   ],
   [
    6,
    8,
    9,
    5,
    3,
    3,
    1,
    6,
    4,
    0,
    5,
    9,
    5,
    8,
    7
   ],
   [
    7,
    8,
    2,
    8,
    3,
    2,
    2,
    7,
    9,
    5,
    0,
    3,
    5,
    7,
    7
   ],
   [
    2,
    8,
    2,
    7,
    1,
    4,
    9,
    9,
    4,
    9,
    3,
    0,
    10,
    9,
    2
   ],
   [
    3,
    5,
    4,
    8,
    3,
    4,
    2,
    5,
    4,
    5,
    5,
    10,
    0,
    4,
    6
   ],
   [
    9,
    10,
    4,
    6,
    7,
    4,
    7,
    6,
    1,
    8,
    7,
    9,
    4,
    0,
    3
   ],
   [
    5,
    3,
    10,
    3,
    3,
    2,
    4,
    4,
    4,
    7,
    7,
    2,
    6,
    3,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Oakshade Library",
   "King’s Row",
   "Knight’s Market",
   "Dragon’s Gate",
   "Jasper Marina",
   "Quartz District",
   "Westgate Station",
   "Flare Alley",
   "Flint Forge Quarter",
   "Riverstone Wharf",
   "Ivory Spire Cathedral",
   "Echo Station",
   "Sapphire Arena",
   "Willowshade Pavilion"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Dragon’s Gate",
     "Knight’s Market",
     "Jasper Marina",
     "Flint Forge Quarter",
     "Quartz District",
     "Riverstone Wharf",
     "King’s Row",
     "Oakshade Library",
     "Willowshade Pavilion",
     "Westgate Station",
     "Flare Alley",
     "Sapphire Arena",
     "Echo Station",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.85
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Quartz District",
     "Flare Alley",
     "Sapphire Arena",
     "Westgate Station",
     "Flint Forge Quarter",
     "Jasper Marina",
     "Knight’s Market",
     "Dragon’s Gate",
     "Ivory Spire Cathedral",
     "Riverstone Wharf",
     "King’s Row",
     "Willowshade Pavilion",
     "Oakshade Library",
     "Warehouse"
    ],
    "ans_distance": 50,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Dragon’s Gate",
     "Knight’s Market",
     "Jasper Marina",
     "King’s Row",
     "Oakshade Library",
     "Quartz District",
     "Flint Forge Quarter",
     "Flare Alley",
     "Sapphire Arena",
     "Willowshade Pavilion",
     "Westgate Station",
     "Echo Station",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Ivory Spire Cathedral",
     "Dragon’s Gate",
     "Knight’s Market",
     "Jasper Marina",
     "King’s Row",
     "Oakshade Library",
     "Quartz District",
     "Flint Forge Quarter",
     "Flare Alley",
     "Sapphire Arena",
     "Willowshade Pavilion",
     "Westgate Station",
     "Echo Station",
     "Riverstone Wharf",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Echo Station",
     "Quartz District",
     "Flint Forge Quarter",
     "Dragon’s Gate",
     "Ivory Spire Cathedral",
     "King’s Row",
     "Oakshade Library",
     "Westgate Station",
     "Riverstone Wharf",
     "Jasper Marina",
     "Knight’s Market",
     "Willowshade Pavilion",
     "Sapphire Arena",
     "Flare Alley",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Ivory Spire Cathedral",
     "Willowshade Pavilion",
     "Quartz District",
     "Flint Forge Quarter",
     "Oakshade Library",
     "Knight’s Market",
     "Sapphire Arena",
     "Echo Station",
     "Flare Alley",
     "Westgate Station",
     "Riverstone Wharf",
     "King’s Row",
     "Jasper Marina",
     "Warehouse"
    ],
    "ans_distance": 54,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 44,
  "adj": [
   [
    0,
    6,
    4,
    2,
    10,
    10,
    1,
    3,
    9,
    7,
    1,
    6,
    3,
    2,
    7
   ],
   [
    6,
    0,
    6,
    9,
    1,
    3,
    6,
    5,
    5,
    10,
    1,
    6,
    1,
    4,
    2
   ],
   [
    4,
    6,
    0,
    6,
    10,
    8,
    3,
    2,
    10,
    8,
    3,
    8,
    7,
    2,
    5
   ],
   [
    2,
    9,
    6,
    0,
    6,
    4,
    2,
    4,
    9,
    1,
    6,
    2,
    5,
    10,
    4
   ],
   [
    10,
    1,
    10,
    6,
    0,
    7,
    9,
    4,
    4,
    6,
    8,
    6,
    1,
    4,
    4
   ],
   [
    10,
    3,
    8,
    4,
    7,
    0,
    8,
    6,
    6,
    8,
    2,
    10,
    3,
    6,
    4
   ],
   [
    1,
    6,
    3,
    2,
    9,
    8,
    0,
    6,
    5,
    2,
    9,
    8,
    3,
    8,
    9
   ],
   [
    3,
    5,
    2,
    4,
    4,
    6,
    6,
    0,
    1,
    5,
    7,
    2,
    9,
    4,
    9
   ],
   [
    9,
    5,
    10,
    9,
    4,
    6,
    5,
    1,
    0,
    10,
    5,
    8,
    10,
    7,
    7
   ],
   [
    7,
    10,
    8,
    1,
    6,
    8,
    2,
    5,
    10,
    0,
    8,
    9,
    8,
    4,
    10
   ],
   [
    1,
    1,
    3,
    6,
    8,
    2,
    9,
    7,
    5,
    8,
    0,
    8,
    4,
    8,
    8
   ],
   [
    6,
    6,
    8,
    2,
    6,
    10,
    8,
    2,
    8,
    9,
    8,
    0,
    10,
    1,
    3
   ],
   [
    3,
    1,
    7,
    5,
    1,
    3,
    3,
    9,
    10,
    8,
    4,
    10,
    0,
    1,
    9
   ],
   [
    2,
    4,
    2,
    10,
    4,
    6,
    8,
    4,
    7,
    4,
    8,
    1,
    1,
    0,
    7
   ],
   [
    7,
    2,
    5,
    4,
    4,
    4,
    9,
    9,
    7,
    10,
    8,
    3,
    9,
    7,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Quarry Point",
   "Duskwood Park",
   "Umbra Theater",
   "Opal Theater",
   "Echo Station",
   "Nimbus Plaza",
   "Quartz District",
   "Willowshade Pavilion",
   "Ivory Spire Cathedral",
   "Horizon Mall",
   "Velvet Corner",
   "Jasper Marina",
   "Moonlit Promenade",
   "Maplewood Conservatory"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Ivory Spire Cathedral",
     "Umbra Theater",
     "Velvet Corner",
     "Moonlit Promenade",
     "Duskwood Park",
     "Quartz District",
     "Willowshade Pavilion",
     "Opal Theater",
     "Jasper Marina",
     "Quarry Point",
     "Maplewood Conservatory",
     "Echo Station",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Horizon Mall",
     "Echo Station",
     "Maplewood Conservatory",
     "Quarry Point",
     "Jasper Marina",
     "Moonlit Promenade",
     "Velvet Corner",
     "Duskwood Park",
     "Quartz District",
     "Willowshade Pavilion",
     "Opal Theater",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 37,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Moonlit Promenade",
     "Velvet Corner",
     "Quartz District",
     "Willowshade Pavilion",
     "Opal Theater",
     "Quarry Point",
     "Horizon Mall",
     "Echo Station",
     "Jasper Marina",
     "Duskwood Park",
     "Maplewood Conservatory",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Moonlit Promenade",
     "Velvet Corner",
     "Quartz District",
     "Willowshade Pavilion",
     "Opal Theater",
     "Quarry Point",
     "Horizon Mall",
     "Echo Station",
     "Jasper Marina",
     "Duskwood Park",
     "Maplewood Conservatory",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Nimbus Plaza",
     "Willowshade Pavilion",
     "Quartz District",
     "Velvet Corner",
     "Maplewood Conservatory",
     "Echo Station",
     "Umbra Theater",
     "Ivory Spire Cathedral",
     "Duskwood Park",
     "Moonlit Promenade",
     "Jasper Marina",
     "Opal Theater",
     "Quarry Point",
     "Horizon Mall",
     "Warehouse"
    ],
    "ans_distance": 36,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Umbra Theater",
     "Nimbus Plaza",
     "Jasper Marina",
     "Opal Theater",
     "Quarry Point",
     "Horizon Mall",
     "Willowshade Pavilion",
     "Velvet Corner",
     "Moonlit Promenade",
     "Ivory Spire Cathedral",
     "Echo Station",
     "Maplewood Conservatory",
     "Quartz District",
     "Duskwood Park",
     "Warehouse"
    ],
    "ans_distance": 55,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 45,
  "adj": [
   [
    0,
    10,
    7,
    3,
    6,
    1,
    10,
    6,
    7,
    7,
    1,
    2,
    7,
    2,
    4
   ],
   [
    10,
    0,
    6,
    8,
    9,
    4,
    7,
    4,
    1,
    7,
    4,
    7,
    4,
    4,
    6
   ],
   [
    7,
    6,
    0,
    3,
    1,
    4,
    3,
    9,
    3,
    2,
    9,
    4,
    10,
    1,
    10
   ],
   [
    3,
    8,
    3,
    0,
    4,
    5,
    9,
    7,
    10,
    9,
    6,
    2,
    9,
    9,
    4
   ],
   [
    6,
    9,
    1,
    4,
    0,
    7,
    10,
    2,
    4,
    4,
    9,
    4,
    6,
    6,
    9
   ],
   [
    1,
    4,
    4,
    5,
    7,
    0,
    3,
    7,
    7,
    5,
    1,
    3,
    2,
    9,
    8
   ],
   [
    10,
    7,
    3,
    9,
    10,
    3,
    0,
    8,
    1,
    6,
    10,
    1,
    2,
    8,
    4
   ],
   [
    6,
    4,
    9,
    7,
    2,
    7,
    8,
    0,
    6,
    9,
    4,
    4,
    8,
    3,
    10
   ],
   [
    7,
    1,
    3,
    10,
    4,
    7,
    1,
    6,
    0,
    6,
    4,
    10,
    4,
    10,
    9
   ],
   [
    7,
    7,
    2,
    9,
    4,
    5,
    6,
    9,
    6,
    0,
    7,
    7,
    1,
    10,
    8
   ],
   [
    1,
    4,
    9,
    6,
    9,
    1,
    10,
    4,
    4,
    7,
    0,
    8,
    1,
    7,
    10
   ],
   [
    2,
    7,
    4,
    2,
    4,
    3,
    1,
    4,
    10,
    7,
    8,
    0,
    2,
    10,
    9
   ],
   [
    7,
    4,
    10,
    9,
    6,
    2,
    2,
    8,
    4,
    1,
    1,
    2,
    0,
    7,
    10
   ],
   [
    2,
    4,
    1,
    9,
    6,
    9,
    8,
    3,
    10,
    10,
    7,
    10,
    7,
    0,
    2
   ],
   [
    4,
    6,
    10,
    4,
    9,
    8,
    4,
    10,
    9,
    8,
    10,
    9,
    10,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Nimbus Plaza",
   "Lighthouse Point",
   "Northwind Tower",
   "Maplewood Conservatory",
   "Yarrow Plaza",
   "Rosewood Hall",
   "Haven Docks",
   "Jade Fountain",
   "Duskwood Park",
   "Lunar Pier",
   "Moonlit Promenade",
   "Copper Clock Square",
   "Knight’s Market",
   "Jasper Marina"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Lunar Pier",
     "Copper Clock Square",
     "Duskwood Park",
     "Lighthouse Point",
     "Maplewood Conservatory",
     "Haven Docks",
     "Nimbus Plaza",
     "Jade Fountain",
     "Rosewood Hall",
     "Moonlit Promenade",
     "Northwind Tower",
     "Jasper Marina",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 26,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Jasper Marina",
     "Lighthouse Point",
     "Maplewood Conservatory",
     "Haven Docks",
     "Nimbus Plaza",
     "Jade Fountain",
     "Rosewood Hall",
     "Moonlit Promenade",
     "Northwind Tower",
     "Lunar Pier",
     "Copper Clock Square",
     "Duskwood Park",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 40,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Lunar Pier",
     "Copper Clock Square",
     "Duskwood Park",
     "Lighthouse Point",
     "Maplewood Conservatory",
     "Haven Docks",
     "Knight’s Market",
     "Jasper Marina",
     "Northwind Tower",
     "Moonlit Promenade",
     "Rosewood Hall",
     "Jade Fountain",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Lunar Pier",
     "Copper Clock Square",
     "Duskwood Park",
     "Lighthouse Point",
     "Maplewood Conservatory",
     "Haven Docks",
     "Knight’s Market",
     "Jasper Marina",
     "Northwind Tower",
     "Moonlit Promenade",
     "Rosewood Hall",
     "Jade Fountain",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 33,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Nimbus Plaza",
     "Jade Fountain",
     "Maplewood Conservatory",
     "Lighthouse Point",
     "Duskwood Park",
     "Copper Clock Square",
     "Lunar Pier",
     "Haven Docks",
     "Moonlit Promenade",
     "Northwind Tower",
     "Jasper Marina",
     "Rosewood Hall",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Yarrow Plaza",
     "Jade Fountain",
     "Rosewood Hall",
     "Copper Clock Square",
     "Lunar Pier",
     "Nimbus Plaza",
     "Duskwood Park",
     "Maplewood Conservatory",
     "Moonlit Promenade",
     "Northwind Tower",
     "Lighthouse Point",
     "Jasper Marina",
     "Knight’s Market",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 57,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 46,
  "adj": [
   [
    0,
    9,
    4,
    8,
    3,
    9,
    4,
    7,
    5,
    8,
    1,
    10,
    4,
    10,
    3
   ],
   [
    9,
    0,
    6,
    1,
    5,
    2,
    4,
    1,
    2,
    8,
    10,
    9,
    8,
    7,
    6
   ],
   [
    4,
    6,
    0,
    3,
    2,
    2,
    1,
    4,
    2,
    10,
    2,
    7,
    1,
    7,
    6
   ],
   [
    8,
    1,
    3,
    0,
    1,
    6,
    5,
    1,
    6,
    8,
    10,
    3,
    5,
    1,
    6
   ],
   [
    3,
    5,
    2,
    1,
    0,
    10,
    7,
    7,
    9,
    3,
    4,
    2,
    4,
    9,
    2
   ],
   [
    9,
    2,
    2,
    6,
    10,
    0,
    2,
    2,
    7,
    4,
    6,
    5,
    5,
    5,
    2
   ],
   [
    4,
    4,
    1,
    5,
    7,
    2,
    0,
    8,
    4,
    6,
    10,
    3,
    6,
    1,
    7
   ],
   [
    7,
    1,
    4,
    1,
    7,
    2,
    8,
    0,
    7,
    4,
    6,
    9,
    4,
    7,
    2
   ],
   [
    5,
    2,
    2,
    6,
    9,
    7,
    4,
    7,
    0,
    7,
    6,
    2,
    2,
    8,
    7
   ],
   [
    8,
    8,
    10,
    8,
    3,
    4,
    6,
    4,
    7,
    0,
    2,
    3,
    2,
    7,
    7
   ],
   [
    1,
    10,
    2,
    10,
    4,
    6,
    10,
    6,
    6,
    2,
    0,
    4,
    2,
    10,
    6
   ],
   [
    10,
    9,
    7,
    3,
    2,
    5,
    3,
    9,
    2,
    3,
    4,
    0,
    5,
    6,
    5
   ],
   [
    4,
    8,
    1,
    5,
    4,
    5,
    6,
    4,
    2,
    2,
    2,
    5,
    0,
    5,
    5
   ],
   [
    10,
    7,
    7,
    1,
    9,
    5,
    1,
    7,
    8,
    7,
    10,
    6,
    5,
    0,
    2
   ],
   [
    3,
    6,
    6,
    6,
    2,
    2,
    7,
    2,
    7,
    7,
    6,
    5,
    5,
    2,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Ironbridge Crossing",
   "Azure Gardens",
   "Opal Theater",
   "Sapphire Arena",
   "Mosaic Plaza",
   "Knight’s Market",
   "Brass Lantern Tavern",
   "Granite Plaza",
   "Nimbus Plaza",
   "Skyline Gardens",
   "Haven Docks",
   "Ivory Spire Cathedral",
   "Amber Plaza",
   "Union Square Market"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Nimbus Plaza",
     "Ivory Spire Cathedral",
     "Azure Gardens",
     "Knight’s Market",
     "Amber Plaza",
     "Opal Theater",
     "Sapphire Arena",
     "Haven Docks",
     "Granite Plaza",
     "Ironbridge Crossing",
     "Brass Lantern Tavern",
     "Mosaic Plaza",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 24,
    "cost_time": 0.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Nimbus Plaza",
     "Ivory Spire Cathedral",
     "Azure Gardens",
     "Granite Plaza",
     "Ironbridge Crossing",
     "Mosaic Plaza",
     "Union Square Market",
     "Sapphire Arena",
     "Haven Docks",
     "Opal Theater",
     "Brass Lantern Tavern",
     "Amber Plaza",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 34,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Azure Gardens",
     "Knight’s Market",
     "Amber Plaza",
     "Opal Theater",
     "Ironbridge Crossing",
     "Brass Lantern Tavern",
     "Mosaic Plaza",
     "Union Square Market",
     "Sapphire Arena",
     "Haven Docks",
     "Granite Plaza",
     "Ivory Spire Cathedral",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Skyline Gardens",
     "Azure Gardens",
     "Knight’s Market",
     "Amber Plaza",
     "Opal Theater",
     "Ironbridge Crossing",
     "Brass Lantern Tavern",
     "Mosaic Plaza",
     "Union Square Market",
     "Sapphire Arena",
     "Haven Docks",
     "Granite Plaza",
     "Ivory Spire Cathedral",
     "Nimbus Plaza",
     "Warehouse"
    ],
    "ans_distance": 30,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Knight’s Market",
     "Haven Docks",
     "Granite Plaza",
     "Ivory Spire Cathedral",
     "Azure Gardens",
     "Mosaic Plaza",
     "Ironbridge Crossing",
     "Brass Lantern Tavern",
     "Union Square Market",
     "Amber Plaza",
     "Opal Theater",
     "Sapphire Arena",
     "Nimbus Plaza",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 29,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Granite Plaza",
     "Ironbridge Crossing",
     "Brass Lantern Tavern",
     "Mosaic Plaza",
     "Amber Plaza",
     "Azure Gardens",
     "Knight’s Market",
     "Opal Theater",
     "Haven Docks",
     "Ivory Spire Cathedral",
     "Nimbus Plaza",
     "Sapphire Arena",
     "Skyline Gardens",
     "Warehouse"
    ],
    "ans_distance": 51,
    "cost_time": 1.38
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 47,
  "adj": [
   [
    0,
    10,
    8,
    3,
    4,
    3,
    7,
    3,
    6,
    10,
    6,
    7,
    1,
    10,
    2
   ],
   [
    10,
    0,
    7,
    2,
    1,
    6,
    7,
    5,
    3,
    4,
    3,
    6,
    4,
    8,
    9
   ],
   [
    8,
    7,
    0,
    2,
    9,
    5,
    9,
    7,
    5,
    9,
    4,
    3,
    4,
    5,
    9
   ],
   [
    3,
    2,
    2,
    0,
    6,
    7,
    9,
    5,
    3,
    6,
    2,
    5,
    1,
    6,
    5
   ],
   [
    4,
    1,
    9,
    6,
    0,
    5,
    3,
    2,
    4,
    6,
    6,
    5,
    9,
    10,
    8
   ],
   [
    3,
    6,
    5,
    7,
    5,
    0,
    9,
    5,
    8,
    10,
    1,
    2,
    1,
    10,
    1
   ],
   [
    7,
    7,
    9,
    9,
    3,
    9,
    0,
    8,
    10,
    5,
    10,
    8,
    1,
    2,
    4
   ],
   [
    3,
    5,
    7,
    5,
    2,
    5,
    8,
    0,
    7,
    5,
    4,
    4,
    6,
    3,
    6
   ],
   [
    6,
    3,
    5,
    3,
    4,
    8,
    10,
    7,
    0,
    7,
    8,
    2,
    7,
    9,
    10
   ],
   [
    10,
    4,
    9,
    6,
    6,
    10,
    5,
    5,
    7,
    0,
    4,
    8,
    4,
    4,
    5
   ],
   [
    6,
    3,
    4,
    2,
    6,
    1,
    10,
    4,
    8,
    4,
    0,
    6,
    6,
    9,
    10
   ],
   [
    7,
    6,
    3,
    5,
    5,
    2,
    8,
    4,
    2,
    8,
    6,
    0,
    7,
    3,
    5
   ],
   [
    1,
    4,
    4,
    1,
    9,
    1,
    1,
    6,
    7,
    4,
    6,
    7,
    0,
    3,
    4
   ],
   [
    10,
    8,
    5,
    6,
    10,
    10,
    2,
    3,
    9,
    4,
    9,
    3,
    3,
    0,
    5
   ],
   [
    2,
    9,
    9,
    5,
    8,
    1,
    4,
    6,
    10,
    5,
    10,
    5,
    4,
    5,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Flint Forge Quarter",
   "Yarrow Plaza",
   "Gilded Archway",
   "Jade Fountain",
   "Quartz District",
   "Sapphire Arena",
   "Quarry Point",
   "Duskwood Park",
   "Opal Theater",
   "Pennywhistle Arcade",
   "Umbra Theater",
   "Temple Square",
   "Union Square Market",
   "Moonlit Promenade"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Quarry Point",
     "Jade Fountain",
     "Flint Forge Quarter",
     "Duskwood Park",
     "Umbra Theater",
     "Yarrow Plaza",
     "Gilded Archway",
     "Temple Square",
     "Sapphire Arena",
     "Union Square Market",
     "Opal Theater",
     "Pennywhistle Arcade",
     "Quartz District",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 32,
    "cost_time": 0.82
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Quartz District",
     "Umbra Theater",
     "Duskwood Park",
     "Flint Forge Quarter",
     "Opal Theater",
     "Pennywhistle Arcade",
     "Temple Square",
     "Sapphire Arena",
     "Union Square Market",
     "Quarry Point",
     "Jade Fountain",
     "Gilded Archway",
     "Yarrow Plaza",
     "Warehouse"
    ],
    "ans_distance": 48,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Gilded Archway",
     "Flint Forge Quarter",
     "Jade Fountain",
     "Quarry Point",
     "Union Square Market",
     "Sapphire Arena",
     "Moonlit Promenade",
     "Quartz District",
     "Pennywhistle Arcade",
     "Yarrow Plaza",
     "Umbra Theater",
     "Duskwood Park",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Temple Square",
     "Gilded Archway",
     "Flint Forge Quarter",
     "Jade Fountain",
     "Quarry Point",
     "Union Square Market",
     "Sapphire Arena",
     "Moonlit Promenade",
     "Quartz District",
     "Pennywhistle Arcade",
     "Yarrow Plaza",
     "Umbra Theater",
     "Duskwood Park",
     "Opal Theater",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Gilded Archway",
     "Pennywhistle Arcade",
     "Opal Theater",
     "Union Square Market",
     "Sapphire Arena",
     "Temple Square",
     "Flint Forge Quarter",
     "Jade Fountain",
     "Quarry Point",
     "Yarrow Plaza",
     "Duskwood Park",
     "Umbra Theater",
     "Quartz District",
     "Moonlit Promenade",
     "Warehouse"
    ],
    "ans_distance": 42,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Moonlit Promenade",
     "Jade Fountain",
     "Flint Forge Quarter",
     "Duskwood Park",
     "Quarry Point",
     "Union Square Market",
     "Opal Theater",
     "Sapphire Arena",
     "Quartz District",
     "Umbra Theater",
     "Yarrow Plaza",
     "Gilded Archway",
     "Temple Square",
     "Pennywhistle Arcade",
     "Warehouse"
    ],
    "ans_distance": 62,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 48,
  "adj": [
   [
    0,
    3,
    8,
    1,
    2,
    4,
    7,
    2,
    3,
    1,
    10,
    2,
    10,
    3,
    7
   ],
   [
    3,
    0,
    1,
    10,
    6,
    2,
    9,
    2,
    8,
    10,
    2,
    5,
    6,
    10,
    2
   ],
   [
    8,
    1,
    0,
    5,
    4,
    4,
    9,
    1,
    7,
    6,
    2,
    5,
    2,
    6,
    10
   ],
   [
    1,
    10,
    5,
    0,
    4,
    1,
    7,
    2,
    9,
    5,
    1,
    8,
    8,
    9,
    2
   ],
   [
    2,
    6,
    4,
    4,
    0,
    3,
    4,
    1,
    9,
    8,
    10,
    4,
    10,
    7,
    1
   ],
   [
    4,
    2,
    4,
    1,
    3,
    0,
    4,
    2,
    1,
    2,
    6,
    10,
    7,
    6,
    9
   ],
   [
    7,
    9,
    9,
    7,
    4,
    4,
    0,
    3,
    10,
    3,
    2,
    5,
    8,
    10,
    2
   ],
   [
    2,
    2,
    1,
    2,
    1,
    2,
    3,
    0,
    3,
    6,
    7,
    1,
    7,
    6,
    5
   ],
   [
    3,
    8,
    7,
    9,
    9,
    1,
    10,
    3,
    0,
    7,
    10,
    6,
    1,
    8,
    3
   ],
   [
    1,
    10,
    6,
    5,
    8,
    2,
    3,
    6,
    7,
    0,
    10,
    2,
    7,
    1,
    5
   ],
   [
    10,
    2,
    2,
    1,
    10,
    6,
    2,
    7,
    10,
    10,
    0,
    7,
    9,
    3,
    4
   ],
   [
    2,
    5,
    5,
    8,
    4,
    10,
    5,
    1,
    6,
    2,
    7,
    0,
    1,
    8,
    6
   ],
   [
    10,
    6,
    2,
    8,
    10,
    7,
    8,
    7,
    1,
    7,
    9,
    1,
    0,
    7,
    9
   ],
   [
    3,
    10,
    6,
    9,
    7,
    6,
    10,
    6,
    8,
    1,
    3,
    8,
    7,
    0,
    4
   ],
   [
    7,
    2,
    10,
    2,
    1,
    9,
    2,
    5,
    3,
    5,
    4,
    6,
    9,
    4,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Ironbridge Crossing",
   "Flare Alley",
   "Evergreen Circle",
   "Oakshade Library",
   "Lighthouse Point",
   "Dragon’s Gate",
   "Duskwood Park",
   "Nimbus Plaza",
   "Zenith Arena",
   "Knight’s Market",
   "Haven Docks",
   "Opal Theater",
   "Union Square Market",
   "Mosaic Plaza"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Knight’s Market",
     "Dragon’s Gate",
     "Mosaic Plaza",
     "Oakshade Library",
     "Duskwood Park",
     "Flare Alley",
     "Ironbridge Crossing",
     "Lighthouse Point",
     "Nimbus Plaza",
     "Opal Theater",
     "Haven Docks",
     "Zenith Arena",
     "Union Square Market",
     "Warehouse"
    ],
    "ans_distance": 21,
    "cost_time": 0.79
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Zenith Arena",
     "Union Square Market",
     "Mosaic Plaza",
     "Oakshade Library",
     "Duskwood Park",
     "Flare Alley",
     "Ironbridge Crossing",
     "Haven Docks",
     "Opal Theater",
     "Nimbus Plaza",
     "Lighthouse Point",
     "Evergreen Circle",
     "Dragon’s Gate",
     "Knight’s Market",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Lighthouse Point",
     "Nimbus Plaza",
     "Opal Theater",
     "Haven Docks",
     "Duskwood Park",
     "Flare Alley",
     "Ironbridge Crossing",
     "Knight’s Market",
     "Dragon’s Gate",
     "Mosaic Plaza",
     "Oakshade Library",
     "Union Square Market",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 24,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Lighthouse Point",
     "Nimbus Plaza",
     "Opal Theater",
     "Haven Docks",
     "Duskwood Park",
     "Flare Alley",
     "Ironbridge Crossing",
     "Knight’s Market",
     "Dragon’s Gate",
     "Mosaic Plaza",
     "Oakshade Library",
     "Union Square Market",
     "Zenith Arena",
     "Warehouse"
    ],
    "ans_distance": 24,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Evergreen Circle",
     "Duskwood Park",
     "Oakshade Library",
     "Mosaic Plaza",
     "Dragon’s Gate",
     "Knight’s Market",
     "Union Square Market",
     "Zenith Arena",
     "Lighthouse Point",
     "Nimbus Plaza",
     "Opal Theater",
     "Flare Alley",
     "Ironbridge Crossing",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 27,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Union Square Market",
     "Duskwood Park",
     "Evergreen Circle",
     "Nimbus Plaza",
     "Opal Theater",
     "Flare Alley",
     "Oakshade Library",
     "Mosaic Plaza",
     "Ironbridge Crossing",
     "Knight’s Market",
     "Dragon’s Gate",
     "Lighthouse Point",
     "Zenith Arena",
     "Haven Docks",
     "Warehouse"
    ],
    "ans_distance": 44,
    "cost_time": 1.39
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 },
 {
  "file_name": "graph_14.json",
  "graph_index": 49,
  "adj": [
   [
    0,
    1,
    4,
    6,
    5,
    5,
    5,
    7,
    8,
    4,
    7,
    2,
    8,
    4,
    6
   ],
   [
    1,
    0,
    8,
    2,
    8,
    3,
    2,
    4,
    7,
    2,
    4,
    9,
    8,
    9,
    4
   ],
   [
    4,
    8,
    0,
    3,
    6,
    8,
    10,
    10,
    9,
    5,
    8,
    9,
    1,
    3,
    9
   ],
   [
    6,
    2,
    3,
    0,
    5,
    4,
    5,
    7,
    6,
    10,
    6,
    8,
    1,
    2,
    7
   ],
   [
    5,
    8,
    6,
    5,
    0,
    8,
    8,
    3,
    8,
    5,
    9,
    1,
    3,
    4,
    1
   ],
   [
    5,
    3,
    8,
    4,
    8,
    0,
    7,
    10,
    9,
    3,
    9,
    10,
    10,
    4,
    9
   ],
   [
    5,
    2,
    10,
    5,
    8,
    7,
    0,
    8,
    10,
    7,
    1,
    3,
    7,
    4,
    8
   ],
   [
    7,
    4,
    10,
    7,
    3,
    10,
    8,
    0,
    10,
    2,
    6,
    4,
    2,
    10,
    6
   ],
   [
    8,
    7,
    9,
    6,
    8,
    9,
    10,
    10,
    0,
    9,
    1,
    9,
    4,
    1,
    1
   ],
   [
    4,
    2,
    5,
    10,
    5,
    3,
    7,
    2,
    9,
    0,
    8,
    5,
    10,
    6,
    5
   ],
   [
    7,
    4,
    8,
    6,
    9,
    9,
    1,
    6,
    1,
    8,
    0,
    9,
    5,
    8,
    6
   ],
   [
    2,
    9,
    9,
    8,
    1,
    10,
    3,
    4,
    9,
    5,
    9,
    0,
    1,
    3,
    8
   ],
   [
    8,
    8,
    1,
    1,
    3,
    10,
    7,
    2,
    4,
    10,
    5,
    1,
    0,
    7,
    7
   ],
   [
    4,
    9,
    3,
    2,
    4,
    4,
    4,
    10,
    1,
    6,
    8,
    3,
    7,
    0,
    10
   ],
   [
    6,
    4,
    9,
    7,
    1,
    9,
    8,
    6,
    1,
    5,
    6,
    8,
    7,
    10,
    0
   ]
  ],
  "name_list": [
   "Warehouse",
   "Dragon’s Gate",
   "Primrose Boulevard",
   "Copper Clock Square",
   "Nimbus Plaza",
   "King’s Row",
   "Northwind Tower",
   "Duskwood Park",
   "Mosaic Plaza",
   "Lighthouse Point",
   "Shadowbridge Arcade",
   "Granite Plaza",
   "Silvercrest Observatory",
   "Amber Plaza",
   "Umbra Theater"
  ],
  "real_result": {
   "dynamic_programming": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "King’s Row",
     "Lighthouse Point",
     "Duskwood Park",
     "Silvercrest Observatory",
     "Primrose Boulevard",
     "Copper Clock Square",
     "Amber Plaza",
     "Northwind Tower",
     "Shadowbridge Arcade",
     "Mosaic Plaza",
     "Umbra Theater",
     "Nimbus Plaza",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 28,
    "cost_time": 0.81
   },
   "christofides_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Silvercrest Observatory",
     "Primrose Boulevard",
     "Copper Clock Square",
     "King’s Row",
     "Dragon’s Gate",
     "Northwind Tower",
     "Shadowbridge Arcade",
     "Mosaic Plaza",
     "Amber Plaza",
     "Umbra Theater",
     "Nimbus Plaza",
     "Duskwood Park",
     "Lighthouse Point",
     "Warehouse"
    ],
    "ans_distance": 39,
    "cost_time": 0.0
   },
   "greedy_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Copper Clock Square",
     "Silvercrest Observatory",
     "Primrose Boulevard",
     "Amber Plaza",
     "Mosaic Plaza",
     "Shadowbridge Arcade",
     "Northwind Tower",
     "Granite Plaza",
     "Nimbus Plaza",
     "Umbra Theater",
     "Lighthouse Point",
     "Duskwood Park",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "nearest_neighbor_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Dragon’s Gate",
     "Copper Clock Square",
     "Silvercrest Observatory",
     "Primrose Boulevard",
     "Amber Plaza",
     "Mosaic Plaza",
     "Shadowbridge Arcade",
     "Northwind Tower",
     "Granite Plaza",
     "Nimbus Plaza",
     "Umbra Theater",
     "Lighthouse Point",
     "Duskwood Park",
     "King’s Row",
     "Warehouse"
    ],
    "ans_distance": 38,
    "cost_time": 0.0
   },
   "simulated_annealing": {
    "ans_path_text": [
     "Warehouse",
     "Granite Plaza",
     "Silvercrest Observatory",
     "Primrose Boulevard",
     "Amber Plaza",
     "Copper Clock Square",
     "Dragon’s Gate",
     "King’s Row",
     "Lighthouse Point",
     "Duskwood Park",
     "Nimbus Plaza",
     "Umbra Theater",
     "Mosaic Plaza",
     "Shadowbridge Arcade",
     "Northwind Tower",
     "Warehouse"
    ],
    "ans_distance": 31,
    "cost_time": 0.03
   },
   "genetic_algorithm": {
    "ans_path_text": [
     "Warehouse",
     "Amber Plaza",
     "Copper Clock Square",
     "Primrose Boulevard",
     "Lighthouse Point",
     "King’s Row",
     "Nimbus Plaza",
     "Duskwood Park",
     "Dragon’s Gate",
     "Mosaic Plaza",
     "Shadowbridge Arcade",
     "Silvercrest Observatory",
     "Umbra Theater",
     "Northwind Tower",
     "Granite Plaza",
     "Warehouse"
    ],
    "ans_distance": 65,
    "cost_time": 1.37
   }
  },
  "response": "{\n    \"objective\": \"Find the optimal delivery route that minimizes the total distance traveled while visiting each delivery point exactly once and returning to the warehouse.\",\n    \"constraints\": \"The delivery driver must start and end at the warehouse and visit each of the 14 distinct delivery points exactly once.\",\n    \"optimization\": \"Minimize the total distance traveled.\"\n}"
 }
]